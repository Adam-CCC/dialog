{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "scada",
    "mnemo",
    "dialog",
    "Dialog",
    "construct",
    "_confirmActions",
    "destruct",
    "properties",
    "showIfBadValues",
    "init",
    "refine",
    "members",
    "_createWidgetContent",
    "window",
    "signal",
    "Window",
    "addListener",
    "_onResetAlarm",
    "_onReceiveData",
    "_mainWindow",
    "_onLoadSettings",
    "settings",
    "setConfig",
    "e",
    "data",
    "getData",
    "Object",
    "entries",
    "forEach",
    "key",
    "value",
    "setKeyForSignal",
    "Number",
    "resetKey",
    "push",
    "setOutData",
    "bind",
    "next",
    "_onConfirm",
    "action",
    "pop"
  ],
  "sources": [
    "C:/Users/dadovaz/Documents/Dialog/mnemo.dialog/source/class/scada/mnemo/dialog/signal/Dialog.js"
  ],
  "sourcesContent": [
    "qx.Class.define(\"scada.mnemo.dialog.signal.Dialog\", {\n    extend: scada.mnemo.dialog.Dialog,\n\n    construct() {\n        super();\n        this._confirmActions = [];\n    },\n\n    destruct() {\n        this._confirmActions = null;\n    },\n\n    properties: {\n        showIfBadValues: {\n            init: true,\n            refine: true\n        }\n    },\n\n    members: {\n        _createWidgetContent(){\n            const window = new scada.mnemo.dialog.signal.Window();\n            window.addListener(\"resetAlarm\", this._onResetAlarm, this);\n            this.addListener(\"changeData\", this._onReceiveData, this);\n            this._mainWindow = window;\n        },\n\n        _onLoadSettings(settings){\n            super._onLoadSettings(settings);\n            this._mainWindow.setConfig(settings);\n        },\n\n        _onReceiveData(e){\n            const data = e.getData();\n            if (!data) return;\n            Object.entries(data).forEach(function([key, value]){\n                this._mainWindow.setKeyForSignal(key, Number(value));\n            }, this);\n        },\n\n        _onResetAlarm(e){\n            const resetKey = e.getData();\n            this._confirmActions.push(function(){\n                this.setOutData({[resetKey]: true});\n            }.bind(this));\n            this.next();\n        },\n\n        _onConfirm(){\n            const action = this._confirmActions.pop();\n            action();\n        }\n    }\n});"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhDH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,kCAAkC,EAAE;IAChDC,MAAM,EAAEC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,MAAM;IAEjCC,SAAS,uBAAG;MACR;MACA,IAAI,CAACC,eAAe,GAAG,EAAE;IAC7B,CAAC;IAEDC,QAAQ,sBAAG;MACP,IAAI,CAACD,eAAe,GAAG,IAAI;IAC/B,CAAC;IAEDE,UAAU,EAAE;MACRC,eAAe,EAAE;QACbC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE;MACZ;IACJ,CAAC;IAEDC,OAAO,EAAE;MACLC,oBAAoB,kCAAE;QAClB,IAAMC,MAAM,GAAG,IAAIb,KAAK,CAACC,KAAK,CAACC,MAAM,CAACY,MAAM,CAACC,MAAM,EAAE;QACrDF,MAAM,CAACG,WAAW,CAAC,YAAY,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;QAC1D,IAAI,CAACD,WAAW,CAAC,YAAY,EAAE,IAAI,CAACE,cAAc,EAAE,IAAI,CAAC;QACzD,IAAI,CAACC,WAAW,GAAGN,MAAM;MAC7B,CAAC;MAEDO,eAAe,2BAACC,QAAQ,EAAC;QACrB,iFAAsBA,QAAQ;QAC9B,IAAI,CAACF,WAAW,CAACG,SAAS,CAACD,QAAQ,CAAC;MACxC,CAAC;MAEDH,cAAc,0BAACK,CAAC,EAAC;QACb,IAAMC,IAAI,GAAGD,CAAC,CAACE,OAAO,EAAE;QACxB,IAAI,CAACD,IAAI,EAAE;QACXE,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACI,OAAO,CAAC,gBAAsB;UAAA;YAAZC,GAAG;YAAEC,KAAK;UAC7C,IAAI,CAACX,WAAW,CAACY,eAAe,CAACF,GAAG,EAAEG,MAAM,CAACF,KAAK,CAAC,CAAC;QACxD,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC;MAEDb,aAAa,yBAACM,CAAC,EAAC;QACZ,IAAMU,QAAQ,GAAGV,CAAC,CAACE,OAAO,EAAE;QAC5B,IAAI,CAACpB,eAAe,CAAC6B,IAAI,CAAC,YAAU;UAChC,IAAI,CAACC,UAAU,qBAAGF,QAAQ,EAAG,IAAI,EAAE;QACvC,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAACC,IAAI,EAAE;MACf,CAAC;MAEDC,UAAU,wBAAE;QACR,IAAMC,MAAM,GAAG,IAAI,CAAClC,eAAe,CAACmC,GAAG,EAAE;QACzCD,MAAM,EAAE;MACZ;IACJ;EACJ,CAAC,CAAC;EArDFvC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACY,MAAM,CAACX,MAAM,CAACP,aAAa,GAAGA,aAAa;AAAC"
}