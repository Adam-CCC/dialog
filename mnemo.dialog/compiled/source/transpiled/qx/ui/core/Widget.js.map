{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "include",
    "locale",
    "MTranslation",
    "implement",
    "IDisposable",
    "construct",
    "__contentElement",
    "__createContentElement",
    "initFocusable",
    "initSelectable",
    "initNativeContextMenu",
    "events",
    "appear",
    "disappear",
    "createChildControl",
    "resize",
    "move",
    "syncAppearance",
    "mousemove",
    "mouseover",
    "mouseout",
    "mousedown",
    "mouseup",
    "click",
    "auxclick",
    "dblclick",
    "contextmenu",
    "beforeContextmenuOpen",
    "mousewheel",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "tap",
    "longtap",
    "dbltap",
    "swipe",
    "rotate",
    "pinch",
    "track",
    "roll",
    "pointermove",
    "pointerover",
    "pointerout",
    "pointerdown",
    "pointerup",
    "pointercancel",
    "keyup",
    "keydown",
    "keypress",
    "keyinput",
    "focus",
    "blur",
    "focusin",
    "focusout",
    "activate",
    "deactivate",
    "capture",
    "losecapture",
    "drop",
    "dragleave",
    "dragover",
    "drag",
    "dragstart",
    "dragend",
    "dragchange",
    "droprequest",
    "properties",
    "paddingTop",
    "check",
    "init",
    "apply",
    "themeable",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "padding",
    "group",
    "mode",
    "zIndex",
    "nullable",
    "event",
    "decorator",
    "backgroundColor",
    "textColor",
    "inheritable",
    "font",
    "dereference",
    "opacity",
    "cursor",
    "toolTip",
    "toolTipText",
    "toolTipIcon",
    "blockToolTip",
    "showToolTipWhenDisabled",
    "visibility",
    "enabled",
    "anonymous",
    "tabIndex",
    "focusable",
    "keepFocus",
    "keepActive",
    "draggable",
    "droppable",
    "selectable",
    "contextMenu",
    "nativeContextMenu",
    "appearance",
    "statics",
    "DEBUG",
    "UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR",
    "getWidgetByElement",
    "element",
    "considerAnonymousState",
    "Assert",
    "assertTrue",
    "$$qxObjectHash",
    "$$qxObject",
    "toHashCode",
    "widget",
    "getAnonymous",
    "parentNode",
    "e",
    "contains",
    "parent",
    "child",
    "getLayoutParent",
    "__separatorPool",
    "util",
    "ObjectPool",
    "members",
    "__initialAppearanceApplied",
    "__toolTipTextListenerId",
    "__layoutManager",
    "_getLayout",
    "_setLayout",
    "layout",
    "assertInstance",
    "Abstract",
    "connectToWidget",
    "queue",
    "Layout",
    "add",
    "setLayoutParent",
    "$$parent",
    "content",
    "getContentElement",
    "$$disposed",
    "remove",
    "$$refreshInheritables",
    "Visibility",
    "_updateInsets",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "lang",
    "Object",
    "isEmpty",
    "inner",
    "size",
    "pixel",
    "contentStyles",
    "position",
    "margin",
    "keys",
    "length",
    "setStyles",
    "local",
    "hasLayoutChildren",
    "inset",
    "getInsets",
    "innerWidth",
    "right",
    "innerHeight",
    "bottom",
    "getDecorator",
    "decoratorPadding",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getPadding",
    "getPaddingTop",
    "getPaddingRight",
    "getPaddingBottom",
    "getPaddingLeft",
    "Error",
    "_findTopControl",
    "hasListener",
    "fireDataEvent",
    "getBounds",
    "__separators",
    "clearSeparators",
    "reg",
    "pool",
    "Widget",
    "i",
    "l",
    "poolObject",
    "renderSeparator",
    "separator",
    "bounds",
    "getObject",
    "set",
    "elem",
    "domEl",
    "getDomElement",
    "style",
    "push",
    "_computeSizeHint",
    "getWidth",
    "minWidth",
    "getMinWidth",
    "maxWidth",
    "getMaxWidth",
    "getHeight",
    "minHeight",
    "getMinHeight",
    "maxHeight",
    "getMaxHeight",
    "assert",
    "contentHint",
    "_getContentHint",
    "insets",
    "insetX",
    "insetY",
    "Infinity",
    "invalidateLayoutCache",
    "hint",
    "getSizeHint",
    "msg",
    "toString",
    "assertInteger",
    "_getHeightForWidth",
    "contentWidth",
    "contentHeight",
    "hasHeightForWidth",
    "getHeightForWidth",
    "_getContentHeightForWidth",
    "assertNumber",
    "getInnerSize",
    "computed",
    "fadeOut",
    "duration",
    "fadeIn",
    "_applyAnonymous",
    "value",
    "setAttribute",
    "removeAttribute",
    "show",
    "setVisibility",
    "hide",
    "exclude",
    "isVisible",
    "getVisibility",
    "isHidden",
    "isExcluded",
    "isSeeable",
    "Manager",
    "flush",
    "offsetWidth",
    "el",
    "_createContentElement",
    "connectObject",
    "classname",
    "styles",
    "boxSizing",
    "root",
    "Inline",
    "html",
    "Element",
    "overflowX",
    "overflowY",
    "__widgetChildren",
    "getLayoutChildren",
    "children",
    "__emptyChildren",
    "layoutChildren",
    "hasUserBounds",
    "concat",
    "Array",
    "scheduleLayoutUpdate",
    "invalidateLayoutChildren",
    "invalidateChildrenCache",
    "getChildrenContainer",
    "_getChildren",
    "_indexOf",
    "indexOf",
    "_hasChildren",
    "addChildrenToQueue",
    "_add",
    "options",
    "constructor",
    "__addHelper",
    "_addAt",
    "index",
    "ref",
    "setLayoutProperties",
    "insertBefore",
    "_addBefore",
    "before",
    "assertInArray",
    "_addAfter",
    "after",
    "insertAfter",
    "_remove",
    "__removeHelper",
    "_removeAt",
    "removeAt",
    "_removeAll",
    "_afterAddChild",
    "_afterRemoveChild",
    "assertNotIdentical",
    "assertType",
    "updateLayoutProperties",
    "assertNotUndefined",
    "releaseCapture",
    "isCapturing",
    "Registration",
    "getManager",
    "dispatcher",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "_applyPadding",
    "old",
    "name",
    "__updateContentPadding",
    "direction",
    "firstLow",
    "replace",
    "setStyle",
    "_applyDecorator",
    "getCssClassName",
    "removeClass",
    "addCssClass",
    "addClass",
    "_applyToolTipText",
    "addListener",
    "getToolTipText",
    "translate",
    "setToolTipText",
    "_applyTextColor",
    "_applyZIndex",
    "_applyVisibility",
    "_applyOpacity",
    "_applyCursor",
    "isSelectable",
    "Environment",
    "get",
    "_applyBackgroundColor",
    "color",
    "getBackgroundColor",
    "resolved",
    "Color",
    "_applyFont",
    "_onChangeTheme",
    "isDisposed",
    "updateAppearance",
    "getFont",
    "Type",
    "isString",
    "getTextColor",
    "__states",
    "$$stateChanges",
    "_forwardStates",
    "hasState",
    "state",
    "states",
    "addState",
    "Appearance",
    "forward",
    "controls",
    "__childControls",
    "control",
    "id",
    "removeState",
    "replaceState",
    "__appearanceSelector",
    "__updateSelector",
    "selector",
    "styler",
    "Property",
    "$$method",
    "setThemed",
    "unstyler",
    "resetThemed",
    "oldData",
    "styleFrom",
    "getAppearance",
    "obj",
    "$$subcontrol",
    "$$subparent",
    "reverse",
    "join",
    "newData",
    "prop",
    "undefined",
    "_applyAppearance",
    "checkAppearanceNeeds",
    "syncWidget",
    "jobs",
    "getEventTarget",
    "target",
    "getFocusTarget",
    "getEnabled",
    "getFocusable",
    "getFocusElement",
    "isTabable",
    "isFocusable",
    "_applyFocusable",
    "getTabIndex",
    "isNativelyFocusable",
    "_applyKeepFocus",
    "_applyKeepActive",
    "_applyTabIndex",
    "_applySelectable",
    "getCursor",
    "setSelectable",
    "_applyEnabled",
    "isDraggable",
    "_applyDraggable",
    "isDroppable",
    "_applyDroppable",
    "_applyNativeContextMenu",
    "_applyContextMenu",
    "getOpener",
    "resetOpener",
    "removeListener",
    "_onContextMenuOpen",
    "_onBeforeContextMenuOpen",
    "setOpener",
    "getType",
    "getPointerType",
    "getContextMenu",
    "openAtPointer",
    "stop",
    "getData",
    "_onStopEvent",
    "stopPropagation",
    "_getDragDropCursor",
    "DragDropCursor",
    "isEnabled",
    "_onDragStart",
    "_onDrag",
    "_onDragEnd",
    "_onDragChange",
    "placeToPointer",
    "getApplicationRoot",
    "setGlobalCursor",
    "moveTo",
    "resetGlobalCursor",
    "action",
    "getCurrentAction",
    "setAction",
    "resetAction",
    "visualizeFocus",
    "visualizeBlur",
    "scrollChildIntoView",
    "alignX",
    "alignY",
    "direct",
    "isScheduled",
    "getChildren",
    "forEach",
    "sibling",
    "scrollChildIntoViewX",
    "scrollChildIntoViewY",
    "align",
    "tabFocus",
    "hasChildControl",
    "_getCreatedChildControls",
    "getChildControl",
    "notcreate",
    "_createChildControl",
    "_showChildControl",
    "_excludeChildControl",
    "_isChildControlVisible",
    "_releaseChildControl",
    "pos",
    "_createChildControlImpl",
    "substring",
    "exc",
    "message",
    "$$resyncNeeded",
    "hash",
    "_disposeChildControls",
    "destroy",
    "dispose",
    "getSubcontrolId",
    "getContentLocation",
    "bom",
    "Location",
    "setDomLeft",
    "setDomTop",
    "setDomPosition",
    "setAriaLabel",
    "label",
    "addAriaLabelledBy",
    "labelWidgets",
    "__addAriaXBy",
    "addAriaDescribedBy",
    "describingWidgets",
    "widgets",
    "ariaAttr",
    "includes",
    "idArr",
    "contentEl",
    "widgetId",
    "getAttribute",
    "idStr",
    "res",
    "removeAllListeners",
    "Dispose",
    "clone",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "removeListenerById",
    "disconnectWidget",
    "setContextMenu",
    "_disposeArray",
    "_disposeObjects"
  ],
  "sources": [
    "C:/Users/dadovaz/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/ui/core/Widget.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n\n************************************************************************ */\n\n/**\n * This is the base class for all widgets.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#core/' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @use(qx.ui.core.EventHandler)\n * @use(qx.event.handler.DragDrop)\n * @asset(qx/static/blank.gif)\n *\n * @ignore(qx.ui.root.Inline)\n */\nqx.Class.define(\"qx.ui.core.Widget\", {\n  extend: qx.ui.core.LayoutItem,\n  include: [qx.locale.MTranslation],\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Create basic element\n    this.__contentElement = this.__createContentElement();\n\n    // Initialize properties\n    this.initFocusable();\n    this.initSelectable();\n    this.initNativeContextMenu();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * Fired after the widget appears on the screen.\n     */\n    appear: \"qx.event.type.Event\",\n\n    /**\n     * Fired after the widget disappears from the screen.\n     */\n    disappear: \"qx.event.type.Event\",\n\n    /**\n     * Fired after the creation of a child control. The passed data is the\n     * newly created child widget.\n     */\n    createChildControl: \"qx.event.type.Data\",\n\n    /**\n     * Fired on resize (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    resize: \"qx.event.type.Data\",\n\n    /**\n     * Fired on move (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    move: \"qx.event.type.Data\",\n\n    /**\n     * Fired after the appearance has been applied. This happens before the\n     * widget becomes visible, on state and appearance changes. The data field\n     * contains the state map. This can be used to react on state changes or to\n     * read properties set by the appearance.\n     */\n    syncAppearance: \"qx.event.type.Data\",\n\n    /** Fired if the mouse cursor moves over the widget.\n     *  The data property of the event contains the widget's computed location\n     *  and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    mousemove: \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor enters the widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseover: \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor leaves widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseout: \"qx.event.type.Mouse\",\n\n    /** Mouse button is pressed on the widget. */\n    mousedown: \"qx.event.type.Mouse\",\n\n    /** Mouse button is released on the widget. */\n    mouseup: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    click: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using a non primary button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    auxclick: \"qx.event.type.Mouse\",\n\n    /** Widget is double clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    dblclick: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using the right mouse button. */\n    contextmenu: \"qx.event.type.Mouse\",\n\n    /** Fired before the context menu is opened. */\n    beforeContextmenuOpen: \"qx.event.type.Data\",\n\n    /** Fired if the mouse wheel is used over the widget. */\n    mousewheel: \"qx.event.type.MouseWheel\",\n\n    /** Fired if a touch at the screen is started. */\n    touchstart: \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen has ended. */\n    touchend: \"qx.event.type.Touch\",\n\n    /** Fired during a touch at the screen. */\n    touchmove: \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen is canceled. */\n    touchcancel: \"qx.event.type.Touch\",\n\n    /** Fired when a pointer taps on the screen. */\n    tap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer holds on the screen. */\n    longtap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer taps twice on the screen. */\n    dbltap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer swipes over the screen. */\n    swipe: \"qx.event.type.Touch\",\n\n    /** Fired when two pointers performing a rotate gesture on the screen. */\n    rotate: \"qx.event.type.Rotate\",\n\n    /** Fired when two pointers performing a pinch in/out gesture on the screen. */\n    pinch: \"qx.event.type.Pinch\",\n\n    /** Fired when an active pointer moves on the screen (after pointerdown till pointerup). */\n    track: \"qx.event.type.Track\",\n\n    /** Fired when an active pointer moves on the screen or the mouse wheel is used. */\n    roll: \"qx.event.type.Roll\",\n\n    /** Fired if a pointer (mouse/touch/pen) moves or changes any of it's values. */\n    pointermove: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) hovers the widget. */\n    pointerover: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) leaves this widget. */\n    pointerout: \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if a pointer (mouse/touch/pen) button is pressed or\n     * a finger touches the widget.\n     */\n    pointerdown: \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if all pointer (mouse/touch/pen) buttons are released or\n     * the finger is lifted from the widget.\n     */\n    pointerup: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) action is canceled. */\n    pointercancel: \"qx.event.type.Pointer\",\n\n    /** This event if fired if a keyboard key is released. */\n    keyup: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event if fired if a keyboard key is pressed down. This event is\n     * only fired once if the user keeps the key pressed for a while.\n     */\n    keydown: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired any time a key is pressed. It will be repeated if\n     * the user keeps the key pressed. The pressed key can be determined using\n     * {@link qx.event.type.KeySequence#getKeyIdentifier}.\n     */\n    keypress: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired if the pressed key or keys result in a printable\n     * character. Since the character is not necessarily associated with a\n     * single physical key press, the event does not have a key identifier\n     * getter. This event gets repeated if the user keeps pressing the key(s).\n     *\n     * The unicode code of the pressed key can be read using\n     * {@link qx.event.type.KeyInput#getCharCode}.\n     */\n    keyinput: \"qx.event.type.KeyInput\",\n\n    /**\n     * The event is fired when the widget gets focused. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    focus: \"qx.event.type.Focus\",\n\n    /**\n     * The event is fired when the widget gets blurred. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    blur: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget receive the focus.\n     */\n    focusin: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget lost the focus.\n     */\n    focusout: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets active (receives keyboard events etc.)\n     */\n    activate: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets inactive\n     */\n    deactivate: \"qx.event.type.Focus\",\n\n    /**\n     * Fired if the widget becomes the capturing widget by a call to {@link #capture}.\n     */\n    capture: \"qx.event.type.Event\",\n\n    /**\n     * Fired if the widget looses the capturing mode by a call to\n     * {@link #releaseCapture} or a mouse click.\n     */\n    losecapture: \"qx.event.type.Event\",\n\n    /**\n     * Fired on the drop target when the drag&drop action is finished\n     * successfully. This event is normally used to transfer the data\n     * from the drag to the drop target.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drop: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when leaving it.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragleave: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when reaching it via the pointer.\n     * This event can be canceled if none of the incoming data types\n     * are supported.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragover: \"qx.event.type.Drag\",\n\n    /**\n     * Fired during the drag. Contains the current pointer coordinates\n     * using {@link qx.event.type.Drag#getDocumentLeft} and\n     * {@link qx.event.type.Drag#getDocumentTop}\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drag: \"qx.event.type.Drag\",\n\n    /**\n     * Initiate the drag-and-drop operation. This event is cancelable\n     * when the drag operation is currently not allowed/possible.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragstart: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on the source (drag) target every time a drag session was ended.\n     */\n    dragend: \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drag configuration has been modified e.g. the user\n     * pressed a key which changed the selected action. This event will be\n     * fired on the draggable and the droppable element. In case of the\n     * droppable element, you can cancel the event and prevent a drop based on\n     * e.g. the current action.\n     */\n    dragchange: \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drop was successfully done and the target widget\n     * is now asking for data. The listener should transfer the data,\n     * respecting the selected action, to the event. This can be done using\n     * the event's {@link qx.event.type.Drag#addData} method.\n     */\n    droprequest: \"qx.event.type.Drag\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      PADDING\n    ---------------------------------------------------------------------------\n    */\n\n    /** Padding of the widget (top) */\n    paddingTop: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (right) */\n    paddingRight: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (bottom) */\n    paddingBottom: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (left) */\n    paddingLeft: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /**\n     * The 'padding' property is a shorthand property for setting 'paddingTop',\n     * 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left respectively.\n     * If there is only one value, it applies to all sides, if there are two or three,\n     * the missing values are taken from the opposite side.\n     */\n    padding: {\n      group: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"],\n      mode: \"shorthand\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLING PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The z-index property sets the stack order of an element. An element with\n     * greater stack order is always in front of another element with lower stack order.\n     */\n    zIndex: {\n      nullable: true,\n      init: 10,\n      apply: \"_applyZIndex\",\n      event: \"changeZIndex\",\n      check: \"Integer\",\n      themeable: true\n    },\n\n    /**\n     * The decorator property points to an object, which is responsible\n     * for drawing the widget's decoration, e.g. border, background or shadow.\n     *\n     * This can be a decorator object or a string pointing to a decorator\n     * defined in the decoration theme.\n     */\n    decorator: {\n      nullable: true,\n      init: null,\n      apply: \"_applyDecorator\",\n      event: \"changeDecorator\",\n      check: \"Decorator\",\n      themeable: true\n    },\n\n    /**\n     * The background color the rendered widget.\n     */\n    backgroundColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyBackgroundColor\",\n      event: \"changeBackgroundColor\",\n      themeable: true\n    },\n\n    /**\n     * The text color the rendered widget.\n     */\n    textColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyTextColor\",\n      event: \"changeTextColor\",\n      themeable: true,\n      inheritable: true\n    },\n\n    /**\n     * The widget's font. The value is either a font name defined in the font\n     * theme or an instance of {@link qx.bom.Font}.\n     */\n    font: {\n      nullable: true,\n      apply: \"_applyFont\",\n      check: \"Font\",\n      event: \"changeFont\",\n      themeable: true,\n      inheritable: true,\n      dereference: true\n    },\n\n    /**\n     * Mapping to native style property opacity.\n     *\n     * The uniform opacity setting to be applied across an entire object.\n     * Behaves like the new CSS-3 Property.\n     * Any values outside the range 0.0 (fully transparent) to 1.0\n     * (fully opaque) will be clamped to this range.\n     */\n    opacity: {\n      check: \"Number\",\n      apply: \"_applyOpacity\",\n      themeable: true,\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * Mapping to native style property cursor.\n     *\n     * The name of the cursor to show when the pointer is over the widget.\n     * This is any valid CSS2 cursor name defined by W3C.\n     *\n     * The following values are possible crossbrowser:\n     * <ul><li>default</li>\n     * <li>crosshair</li>\n     * <li>pointer</li>\n     * <li>move</li>\n     * <li>n-resize</li>\n     * <li>ne-resize</li>\n     * <li>e-resize</li>\n     * <li>se-resize</li>\n     * <li>s-resize</li>\n     * <li>sw-resize</li>\n     * <li>w-resize</li>\n     * <li>nw-resize</li>\n     * <li>nesw-resize</li>\n     * <li>nwse-resize</li>\n     * <li>text</li>\n     * <li>wait</li>\n     * <li>help </li>\n     * </ul>\n     */\n    cursor: {\n      check: \"String\",\n      apply: \"_applyCursor\",\n      themeable: true,\n      inheritable: true,\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * Sets the tooltip instance to use for this widget. If only the tooltip\n     * text and icon have to be set its better to use the {@link #toolTipText}\n     * and {@link #toolTipIcon} properties since they use a shared tooltip\n     * instance.\n     *\n     * If this property is set the {@link #toolTipText} and {@link #toolTipIcon}\n     * properties are ignored.\n     */\n    toolTip: {\n      check: \"qx.ui.tooltip.ToolTip\",\n      nullable: true\n    },\n\n    /**\n     * The text of the widget's tooltip. This text can contain HTML markup.\n     * The text is displayed using a shared tooltip instance. If the tooltip\n     * must be customized beyond the text and an icon {@link #toolTipIcon}, the\n     * {@link #toolTip} property has to be used\n     */\n    toolTipText: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeToolTipText\",\n      apply: \"_applyToolTipText\"\n    },\n\n    /**\n     * The icon URI of the widget's tooltip. This icon is displayed using a shared\n     * tooltip instance. If the tooltip must be customized beyond the tooltip text\n     * {@link #toolTipText} and the icon, the {@link #toolTip} property has to be\n     * used.\n     */\n    toolTipIcon: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeToolTipText\"\n    },\n\n    /**\n     * Controls if a tooltip should shown or not.\n     */\n    blockToolTip: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /**\n     * Forces to show tooltip when widget is disabled.\n     */\n    showToolTipWhenDisabled: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MANAGEMENT PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Controls the visibility. Valid values are:\n     *\n     * <ul>\n     *   <li><b>visible</b>: Render the widget</li>\n     *   <li><b>hidden</b>: Hide the widget but don't relayout the widget's parent.</li>\n     *   <li><b>excluded</b>: Hide the widget and relayout the parent as if the\n     *     widget was not a child of its parent.</li>\n     * </ul>\n     */\n    visibility: {\n      check: [\"visible\", \"hidden\", \"excluded\"],\n      init: \"visible\",\n      apply: \"_applyVisibility\",\n      event: \"changeVisibility\"\n    },\n\n    /**\n     * Whether the widget is enabled. Disabled widgets are usually grayed out\n     * and do not process user created events. While in the disabled state most\n     * user input events are blocked. Only the {@link #pointerover} and\n     * {@link #pointerout} events will be dispatched.\n     */\n    enabled: {\n      init: true,\n      check: \"Boolean\",\n      inheritable: true,\n      apply: \"_applyEnabled\",\n      event: \"changeEnabled\"\n    },\n\n    /**\n     * Whether the widget is anonymous.\n     *\n     * Anonymous widgets are ignored in the event hierarchy. This is useful\n     * for combined widgets where the internal structure do not have a custom\n     * appearance with a different styling from the element around. This is\n     * especially true for widgets like checkboxes or buttons where the text\n     * or icon are handled synchronously for state changes to the outer widget.\n     */\n    anonymous: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyAnonymous\"\n    },\n\n    /**\n     * Defines the tab index of an widget. If widgets with tab indexes are part\n     * of the current focus root these elements are sorted in first priority. Afterwards\n     * the sorting continues by rendered position, zIndex and other criteria.\n     *\n     * Please note: The value must be between 1 and 32000.\n     */\n    tabIndex: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyTabIndex\"\n    },\n\n    /**\n     * Whether the widget is focusable e.g. rendering a focus border and visualize\n     * as active element.\n     *\n     * See also {@link #isTabable} which allows runtime checks for\n     * <code>isChecked</code> or other stuff to test whether the widget is\n     * reachable via the TAB key.\n     */\n    focusable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyFocusable\"\n    },\n\n    /**\n     * If this property is enabled, the widget and all of its child widgets\n     * will never get focused. The focus keeps at the currently\n     * focused widget.\n     *\n     * This only works for widgets which are not {@link #focusable}.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepFocus: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyKeepFocus\"\n    },\n\n    /**\n     * If this property if enabled, the widget and all of its child widgets\n     * will never get activated. The activation keeps at the currently\n     * activated widget.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepActive: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyKeepActive\"\n    },\n\n    /** Whether the widget acts as a source for drag&drop operations */\n    draggable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyDraggable\"\n    },\n\n    /** Whether the widget acts as a target for drag&drop operations */\n    droppable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyDroppable\"\n    },\n\n    /**\n     * Whether the widget contains content which may be selected by the user.\n     *\n     * If the value set to <code>true</code> the native browser selection can\n     * be used for text selection. But it is normally useful for\n     * forms fields, longer texts/documents, editors, etc.\n     */\n    selectable: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeSelectable\",\n      apply: \"_applySelectable\"\n    },\n\n    /**\n     * Whether to show a context menu and which one\n     */\n    contextMenu: {\n      check: \"qx.ui.menu.Menu\",\n      apply: \"_applyContextMenu\",\n      nullable: true,\n      event: \"changeContextMenu\"\n    },\n\n    /**\n     * Whether the native context menu should be enabled for this widget. To\n     * globally enable the native context menu set the {@link #nativeContextMenu}\n     * property of the root widget ({@link qx.ui.root.Abstract}) to\n     * <code>true</code>.\n     */\n    nativeContextMenu: {\n      check: \"Boolean\",\n      init: false,\n      themeable: true,\n      event: \"changeNativeContextMenu\",\n      apply: \"_applyNativeContextMenu\"\n    },\n\n    /**\n     * The appearance ID. This ID is used to identify the appearance theme\n     * entry to use for this widget. This controls the styling of the element.\n     */\n    appearance: {\n      check: \"String\",\n      init: \"widget\",\n      apply: \"_applyAppearance\",\n      event: \"changeAppearance\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** Whether the widget should print out hints and debug messages */\n    DEBUG: false,\n\n    /** Whether to throw an error on focus/blur if the widget is unfocusable */\n    UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR: true,\n\n    /**\n     * Returns the widget, which contains the given DOM element.\n     *\n     * @param element {Element} The DOM element to search the widget for.\n     * @param considerAnonymousState {Boolean?false} If true, anonymous widget\n     *   will not be returned.\n     * @return {qx.ui.core.Widget} The widget containing the element.\n     */\n    getWidgetByElement(element, considerAnonymousState) {\n      while (element) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.core.Assert.assertTrue(\n            (!element.$$qxObjectHash && !element.$$qxObject) ||\n              (element.$$qxObject &&\n                element.$$qxObjectHash &&\n                element.$$qxObject.toHashCode() === element.$$qxObjectHash)\n          );\n        }\n        var widget = element.$$qxObject;\n\n        // check for anonymous widgets\n        if (widget) {\n          if (!considerAnonymousState || !widget.getAnonymous()) {\n            return widget;\n          }\n        }\n\n        // Fix for FF, which occasionally breaks (BUG#3525)\n        try {\n          element = element.parentNode;\n        } catch (e) {\n          return null;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Whether the \"parent\" widget contains the \"child\" widget.\n     *\n     * @param parent {qx.ui.core.Widget} The parent widget\n     * @param child {qx.ui.core.Widget} The child widget\n     * @return {Boolean} Whether one of the \"child\"'s parents is \"parent\"\n     */\n    contains(parent, child) {\n      while (child) {\n        child = child.getLayoutParent();\n\n        if (parent == child) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /** @type {Map} Contains all pooled separators for reuse */\n    __separatorPool: new qx.util.ObjectPool()\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __contentElement: null,\n    __initialAppearanceApplied: null,\n    __toolTipTextListenerId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {qx.ui.layout.Abstract} The connected layout manager\n     */\n    __layoutManager: null,\n\n    // overridden\n    _getLayout() {\n      return this.__layoutManager;\n    },\n\n    /**\n     * Set a layout manager for the widget. A a layout manager can only be connected\n     * with one widget. Reset the connection with a previous widget first, if you\n     * like to use it in another widget instead.\n     *\n     * @param layout {qx.ui.layout.Abstract} The new layout or\n     *     <code>null</code> to reset the layout.\n     */\n    _setLayout(layout) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (layout) {\n          this.assertInstance(layout, qx.ui.layout.Abstract);\n        }\n      }\n\n      if (this.__layoutManager) {\n        this.__layoutManager.connectToWidget(null);\n      }\n\n      if (layout) {\n        layout.connectToWidget(this);\n      }\n\n      this.__layoutManager = layout;\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // overridden\n    setLayoutParent(parent) {\n      if (this.$$parent === parent) {\n        return;\n      }\n\n      var content = this.getContentElement();\n\n      if (this.$$parent && !this.$$parent.$$disposed) {\n        this.$$parent.getContentElement().remove(content);\n      }\n\n      this.$$parent = parent || null;\n\n      if (parent && !parent.$$disposed) {\n        this.$$parent.getContentElement().add(content);\n      }\n\n      // Update inheritable properties\n      this.$$refreshInheritables();\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n    /** @type {Boolean} Whether insets have changed and must be updated */\n    _updateInsets: null,\n\n    // overridden\n    renderLayout(left, top, width, height) {\n      var changes = super.renderLayout(left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return null;\n      }\n\n      if (qx.lang.Object.isEmpty(changes) && !this._updateInsets) {\n        return null;\n      }\n\n      var content = this.getContentElement();\n      var inner = changes.size || this._updateInsets;\n      var pixel = \"px\";\n\n      var contentStyles = {};\n      // Move content to new position\n      if (changes.position) {\n        contentStyles.left = left + pixel;\n        contentStyles.top = top + pixel;\n      }\n\n      if (inner || changes.margin) {\n        contentStyles.width = width + pixel;\n        contentStyles.height = height + pixel;\n      }\n\n      if (Object.keys(contentStyles).length > 0) {\n        content.setStyles(contentStyles);\n      }\n\n      if (inner || changes.local || changes.margin) {\n        if (this.__layoutManager && this.hasLayoutChildren()) {\n          var inset = this.getInsets();\n          var innerWidth = width - inset.left - inset.right;\n          var innerHeight = height - inset.top - inset.bottom;\n\n          var decorator = this.getDecorator();\n          var decoratorPadding = { left: 0, right: 0, top: 0, bottom: 0 };\n          if (decorator) {\n            decorator =\n              qx.theme.manager.Decoration.getInstance().resolve(decorator);\n            decoratorPadding = decorator.getPadding();\n          }\n\n          var padding = {\n            top: this.getPaddingTop() + decoratorPadding.top,\n            right: this.getPaddingRight() + decoratorPadding.right,\n            bottom: this.getPaddingBottom() + decoratorPadding.bottom,\n            left: this.getPaddingLeft() + decoratorPadding.left\n          };\n\n          this.__layoutManager.renderLayout(innerWidth, innerHeight, padding);\n        } else if (this.hasLayoutChildren()) {\n          throw new Error(\n            \"At least one child in control \" +\n              this._findTopControl() +\n              \" requires a layout, but no one was defined!\"\n          );\n        }\n      }\n\n      // Fire events\n      if (changes.position && this.hasListener(\"move\")) {\n        this.fireDataEvent(\"move\", this.getBounds());\n      }\n\n      if (changes.size && this.hasListener(\"resize\")) {\n        this.fireDataEvent(\"resize\", this.getBounds());\n      }\n\n      // Cleanup flags\n      delete this._updateInsets;\n\n      return changes;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SEPARATOR SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    __separators: null,\n\n    // overridden\n    clearSeparators() {\n      var reg = this.__separators;\n      if (!reg) {\n        return;\n      }\n\n      var pool = qx.ui.core.Widget.__separatorPool;\n      var content = this.getContentElement();\n      var widget;\n\n      for (var i = 0, l = reg.length; i < l; i++) {\n        widget = reg[i];\n        pool.poolObject(widget);\n        content.remove(widget.getContentElement());\n      }\n\n      // Clear registry\n      reg.length = 0;\n    },\n\n    // overridden\n    renderSeparator(separator, bounds) {\n      // Insert\n      var widget = qx.ui.core.Widget.__separatorPool.getObject(\n        qx.ui.core.Widget\n      );\n\n      widget.set({\n        decorator: separator\n      });\n\n      var elem = widget.getContentElement();\n      this.getContentElement().add(elem);\n\n      // Move\n      var domEl = elem.getDomElement();\n      // use the DOM element because the cache of the qx.html.Element could be\n      // wrong due to changes made by the decorators which work on the DOM element too\n      if (domEl) {\n        domEl.style.top = bounds.top + \"px\";\n        domEl.style.left = bounds.left + \"px\";\n        domEl.style.width = bounds.width + \"px\";\n        domEl.style.height = bounds.height + \"px\";\n      } else {\n        elem.setStyles({\n          left: bounds.left + \"px\",\n          top: bounds.top + \"px\",\n          width: bounds.width + \"px\",\n          height: bounds.height + \"px\"\n        });\n      }\n\n      // Remember element\n      if (!this.__separators) {\n        this.__separators = [];\n      }\n      this.__separators.push(widget);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SIZE HINTS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _computeSizeHint() {\n      // Start with the user defined values\n      var width = this.getWidth();\n      var minWidth = this.getMinWidth();\n      var maxWidth = this.getMaxWidth();\n\n      var height = this.getHeight();\n      var minHeight = this.getMinHeight();\n      var maxHeight = this.getMaxHeight();\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (minWidth !== null && maxWidth !== null) {\n          this.assert(\n            minWidth <= maxWidth,\n            \"minWidth is larger than maxWidth!\"\n          );\n        }\n        if (minHeight !== null && maxHeight !== null) {\n          this.assert(\n            minHeight <= maxHeight,\n            \"minHeight is larger than maxHeight!\"\n          );\n        }\n      }\n\n      // Ask content\n      var contentHint = this._getContentHint();\n\n      var insets = this.getInsets();\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      if (width == null) {\n        width = contentHint.width + insetX;\n      }\n\n      if (height == null) {\n        height = contentHint.height + insetY;\n      }\n\n      if (minWidth == null) {\n        minWidth = insetX;\n\n        if (contentHint.minWidth != null) {\n          minWidth += contentHint.minWidth;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (minWidth > maxWidth && maxWidth != null) {\n            minWidth = maxWidth;\n          }\n        }\n      }\n\n      if (minHeight == null) {\n        minHeight = insetY;\n\n        if (contentHint.minHeight != null) {\n          minHeight += contentHint.minHeight;\n          // do not apply bigger min height than max height [BUG #5008]\n          if (minHeight > maxHeight && maxHeight != null) {\n            minHeight = maxHeight;\n          }\n        }\n      }\n\n      if (maxWidth == null) {\n        if (contentHint.maxWidth == null) {\n          maxWidth = Infinity;\n        } else {\n          maxWidth = contentHint.maxWidth + insetX;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxWidth < minWidth && minWidth != null) {\n            maxWidth = minWidth;\n          }\n        }\n      }\n\n      if (maxHeight == null) {\n        if (contentHint.maxHeight == null) {\n          maxHeight = Infinity;\n        } else {\n          maxHeight = contentHint.maxHeight + insetY;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxHeight < minHeight && minHeight != null) {\n            maxHeight = minHeight;\n          }\n        }\n      }\n\n      // Build size hint and return\n      return {\n        width: width,\n        minWidth: minWidth,\n        maxWidth: maxWidth,\n        height: height,\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      };\n    },\n\n    // overridden\n    invalidateLayoutCache() {\n      super.invalidateLayoutCache();\n\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateLayoutCache();\n      }\n    },\n\n    /**\n     * Returns the recommended/natural dimensions of the widget's content.\n     *\n     * For labels and images this may be their natural size when defined without\n     * any dimensions. For containers this may be the recommended size of the\n     * underlying layout manager.\n     *\n     * Developer note: This can be overwritten by the derived classes to allow\n     * a custom handling here.\n     *\n     * @return {Map}\n     */\n    _getContentHint() {\n      var layout = this.__layoutManager;\n      if (layout) {\n        if (this.hasLayoutChildren()) {\n          var hint = layout.getSizeHint();\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            var msg =\n              \"The layout of the widget\" +\n              this.toString() +\n              \" returned an invalid size hint!\";\n            this.assertInteger(hint.width, \"Wrong 'left' argument. \" + msg);\n            this.assertInteger(hint.height, \"Wrong 'top' argument. \" + msg);\n          }\n\n          return hint;\n        } else {\n          return {\n            width: 0,\n            height: 0\n          };\n        }\n      } else {\n        return {\n          width: 100,\n          height: 50\n        };\n      }\n    },\n\n    // overridden\n    _getHeightForWidth(width) {\n      // Prepare insets\n      var insets = this.getInsets();\n\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      // Compute content width\n      var contentWidth = width - insetX;\n\n      // Compute height\n      var contentHeight = 0;\n      var layout = this._getLayout();\n      if (layout && layout.hasHeightForWidth()) {\n        contentHeight = layout.getHeightForWidth(contentWidth);\n      } else {\n        contentHeight = this._getContentHeightForWidth(contentWidth);\n      }\n\n      // Computed box height\n      var height = contentHeight + insetY;\n\n      return height;\n    },\n\n    /**\n     * Returns the computed height for the given width.\n     *\n     * @abstract\n     * @param width {Integer} Incoming width (as limitation)\n     * @return {Integer} Computed height while respecting the given width.\n     */\n    _getContentHeightForWidth(width) {\n      throw new Error(\"Abstract method call: _getContentHeightForWidth()!\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INSET CALCULATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the sum of the widget's padding and border width.\n     *\n     * @return {Map} Contains the keys <code>top</code>, <code>right</code>,\n     *   <code>bottom</code> and <code>left</code>. All values are integers.\n     */\n    getInsets() {\n      var top = this.getPaddingTop();\n      var right = this.getPaddingRight();\n      var bottom = this.getPaddingBottom();\n      var left = this.getPaddingLeft();\n      if (this.getDecorator()) {\n        var decorator = qx.theme.manager.Decoration.getInstance().resolve(\n          this.getDecorator()\n        );\n\n        var inset = decorator.getInsets();\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.assertNumber(\n            inset.top,\n            \"Invalid top decorator inset detected: \" + inset.top\n          );\n\n          this.assertNumber(\n            inset.right,\n            \"Invalid right decorator inset detected: \" + inset.right\n          );\n\n          this.assertNumber(\n            inset.bottom,\n            \"Invalid bottom decorator inset detected: \" + inset.bottom\n          );\n\n          this.assertNumber(\n            inset.left,\n            \"Invalid left decorator inset detected: \" + inset.left\n          );\n        }\n\n        top += inset.top;\n        right += inset.right;\n        bottom += inset.bottom;\n        left += inset.left;\n      }\n\n      return {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      COMPUTED LAYOUT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the widget's computed inner size as available\n     * through the layout process.\n     *\n     * This function is guaranteed to return a correct value\n     * during a {@link #resize} or {@link #move} event dispatch.\n     *\n     * @return {Map} The widget inner dimension in pixel (if the layout is\n     *    valid). Contains the keys <code>width</code> and <code>height</code>.\n     */\n    getInnerSize() {\n      var computed = this.getBounds();\n      if (!computed) {\n        return null;\n      }\n\n      // Return map data\n      var insets = this.getInsets();\n      return {\n        width: computed.width - insets.left - insets.right,\n        height: computed.height - insets.top - insets.bottom\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fade out this widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut(duration) {\n      return this.getContentElement().fadeOut(duration);\n    },\n\n    /**\n     * Fade in the widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn(duration) {\n      return this.getContentElement().fadeIn(duration);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyAnonymous(value) {\n      if (value) {\n        this.getContentElement().setAttribute(\"qxanonymous\", \"true\");\n      } else {\n        this.getContentElement().removeAttribute(\"qxanonymous\");\n      }\n    },\n\n    /**\n     * Make this widget visible.\n     *\n     */\n    show() {\n      this.setVisibility(\"visible\");\n    },\n\n    /**\n     * Hide this widget.\n     *\n     */\n    hide() {\n      this.setVisibility(\"hidden\");\n    },\n\n    /**\n     * Hide this widget and exclude it from the underlying layout.\n     *\n     */\n    exclude() {\n      this.setVisibility(\"excluded\");\n    },\n\n    /**\n     * Whether the widget is locally visible.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is visible\n     */\n    isVisible() {\n      return this.getVisibility() === \"visible\";\n    },\n\n    /**\n     * Whether the widget is locally hidden.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is hidden\n     */\n    isHidden() {\n      return this.getVisibility() !== \"visible\";\n    },\n\n    /**\n     * Whether the widget is locally excluded.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is excluded\n     */\n    isExcluded() {\n      return this.getVisibility() === \"excluded\";\n    },\n\n    /**\n     * Detects if the widget and all its parents are visible.\n     *\n     * WARNING: Please use this method with caution because it flushes the\n     * internal queues which might be an expensive operation.\n     *\n     * @return {Boolean} true, if the widget is currently on the screen\n     */\n    isSeeable() {\n      // Flush the queues because to detect if the widget ins visible, the\n      // queues need to be flushed (see bug #5254)\n      qx.ui.core.queue.Manager.flush();\n      // if the element is already rendered, a check for the offsetWidth is enough\n      var element = this.getContentElement().getDomElement();\n      if (element) {\n        // will also be 0 if the parents are not visible\n        return element.offsetWidth > 0;\n      }\n      // if no element is available, it can not be visible\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CREATION OF HTML ELEMENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Create the widget's content HTML element.\n     *\n     * @return {qx.html.Element} The content HTML element\n     */\n    __createContentElement() {\n      var el = this._createContentElement();\n      el.connectObject(this);\n\n      // make sure to allow all pointer events\n      el.setStyles({ \"touch-action\": \"none\", \"-ms-touch-action\": \"none\" });\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        el.setAttribute(\"qxClass\", this.classname);\n      }\n\n      var styles = {\n        zIndex: 10,\n        boxSizing: \"border-box\"\n      };\n\n      if (!qx.ui.root.Inline || !(this instanceof qx.ui.root.Inline)) {\n        styles.position = \"absolute\";\n      }\n\n      el.setStyles(styles);\n\n      return el;\n    },\n\n    /**\n     * Creates the content element. The style properties\n     * position and zIndex are modified from the Widget\n     * core.\n     *\n     * This function may be overridden to customize a class\n     * content.\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    _createContentElement() {\n      return new qx.html.Element(\"div\", {\n        overflowX: \"hidden\",\n        overflowY: \"hidden\"\n      });\n    },\n\n    /**\n     * Returns the element wrapper of the widget's content element.\n     * This method exposes widget internal and must be used with caution!\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    getContentElement() {\n      return this.__contentElement;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {qx.ui.core.LayoutItem[]} List of all child widgets */\n    __widgetChildren: null,\n\n    /**\n     * Returns all children, which are layout relevant. This excludes all widgets,\n     * which have a {@link qx.ui.core.Widget#visibility} value of <code>exclude</code>.\n     *\n     * @internal\n     * @return {qx.ui.core.Widget[]} All layout relevant children.\n     */\n    getLayoutChildren() {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return this.__emptyChildren;\n      }\n\n      var layoutChildren;\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        if (child.hasUserBounds() || child.isExcluded()) {\n          if (layoutChildren == null) {\n            layoutChildren = children.concat();\n          }\n\n          qx.lang.Array.remove(layoutChildren, child);\n        }\n      }\n\n      return layoutChildren || children;\n    },\n\n    /**\n     * Marks the layout of this widget as invalid and triggers a layout update.\n     * This is a shortcut for <code>qx.ui.core.queue.Layout.add(this);</code>.\n     */\n    scheduleLayoutUpdate() {\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Resets the cache for children which should be laid out.\n     */\n    invalidateLayoutChildren() {\n      var layout = this.__layoutManager;\n      if (layout) {\n        layout.invalidateChildrenCache();\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Returns whether the layout has children, which are layout relevant. This\n     * excludes all widgets, which have a {@link qx.ui.core.Widget#visibility}\n     * value of <code>exclude</code>.\n     *\n     * @return {Boolean} Whether the layout has layout relevant children\n     */\n    hasLayoutChildren() {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return false;\n      }\n\n      var child;\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n        if (!child.hasUserBounds() && !child.isExcluded()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns the widget which contains the children and\n     * is relevant for laying them out. This is from the user point of\n     * view and may not be identical to the technical structure.\n     *\n     * @return {qx.ui.core.Widget} Widget which contains the children.\n     */\n    getChildrenContainer() {\n      return this;\n    },\n\n    /**\n     * @type {Array} Placeholder for children list in empty widgets.\n     *     Mainly to keep instance number low.\n     *\n     * @lint ignoreReferenceField(__emptyChildren)\n     */\n    __emptyChildren: [],\n\n    /**\n     * Returns the children list\n     *\n     * @return {qx.ui.core.LayoutItem[]} The children array (Arrays are\n     *   reference types, so please do not modify it in-place).\n     */\n    _getChildren() {\n      return this.__widgetChildren || this.__emptyChildren;\n    },\n\n    /**\n     * Returns the index position of the given widget if it is\n     * a child widget. Otherwise it returns <code>-1</code>.\n     *\n     * @param child {qx.ui.core.Widget} the widget to query for\n     * @return {Integer} The index position or <code>-1</code> when\n     *   the given widget is no child of this layout.\n     */\n    _indexOf(child) {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return -1;\n      }\n\n      return children.indexOf(child);\n    },\n\n    /**\n     * Whether the widget contains children.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget has children.\n     */\n    _hasChildren() {\n      var children = this.__widgetChildren;\n      return children != null && !!children[0];\n    },\n\n    /**\n     * Recursively adds all children to the given queue\n     *\n     * @param queue {Array} The queue to add widgets to\n     */\n    addChildrenToQueue(queue) {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return;\n      }\n\n      var child;\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n        queue.push(child);\n\n        child.addChildrenToQueue(queue);\n      }\n    },\n\n    /**\n     * Adds a new child widget.\n     *\n     * The supported keys of the layout options map depend on the layout manager\n     * used to position the widget. The options are documented in the class\n     * documentation of each layout manager {@link qx.ui.layout}.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to add.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _add(child, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          child,\n          qx.ui.core.LayoutItem.constructor,\n          \"'Child' must be an instance of qx.ui.core.LayoutItem!\"\n        );\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      if (this.__widgetChildren) {\n        this.__widgetChildren.push(child);\n      } else {\n        this.__widgetChildren = [child];\n      }\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a child widget at the specified index\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param index {Integer} Index, at which the widget will be inserted. If no\n     *   widget exists at the given index, the new widget gets appended to the\n     *   current list of children.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAt(child, index, options) {\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      var ref = this.__widgetChildren[index];\n\n      if (ref === child) {\n        child.setLayoutProperties(options);\n      }\n\n      if (ref) {\n        qx.lang.Array.insertBefore(this.__widgetChildren, child, ref);\n      } else {\n        this.__widgetChildren.push(child);\n      }\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a widget before another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param before {qx.ui.core.LayoutItem} widget before the new widget will be inserted.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addBefore(child, before, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(\n          before,\n          this._getChildren(),\n          \"The 'before' widget is not a child of this widget!\"\n        );\n      }\n\n      if (child == before) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertBefore(this.__widgetChildren, child, before);\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a widget after another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param after {qx.ui.core.LayoutItem} widget, after which the new widget will\n     *   be inserted\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAfter(child, after, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(\n          after,\n          this._getChildren(),\n          \"The 'after' widget is not a child of this widget!\"\n        );\n      }\n\n      if (child == after) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertAfter(this.__widgetChildren, child, after);\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Remove the given child widget.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to remove\n     */\n    _remove(child) {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      qx.lang.Array.remove(this.__widgetChildren, child);\n      this.__removeHelper(child);\n    },\n\n    /**\n     * Remove the widget at the specified index.\n     *\n     * @param index {Integer} Index of the widget to remove.\n     * @return {qx.ui.core.LayoutItem} The removed item.\n     */\n    _removeAt(index) {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      var child = this.__widgetChildren[index];\n\n      qx.lang.Array.removeAt(this.__widgetChildren, index);\n      this.__removeHelper(child);\n\n      return child;\n    },\n\n    /**\n     * Remove all children.\n     *\n     * @return {Array} An array containing the removed children.\n     */\n    _removeAll() {\n      if (!this.__widgetChildren) {\n        return [];\n      }\n\n      // Working on a copy to make it possible to clear the\n      // internal array before calling setLayoutParent()\n      var children = this.__widgetChildren.concat();\n      this.__widgetChildren.length = 0;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        this.__removeHelper(children[i]);\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n\n      return children;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - TEMPLATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method gets called each time after a child widget was added and can\n     * be overridden to get notified about child adds.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The added child.\n     */\n    _afterAddChild: null,\n\n    /**\n     * This method gets called each time after a child widget was removed and\n     * can be overridden to get notified about child removes.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The removed child.\n     */\n    _afterRemoveChild: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Convenience function to add a child widget. It will insert the child to\n     * the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to add.\n     * @param options {Map|null} Optional layout data for the widget.\n     */\n    __addHelper(child, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          child,\n          qx.ui.core.LayoutItem,\n          \"Invalid widget to add: \" + child\n        );\n\n        this.assertNotIdentical(\n          child,\n          this,\n          \"Could not add widget to itself: \" + child\n        );\n\n        if (options != null) {\n          this.assertType(options, \"object\", \"Invalid layout data: \" + options);\n        }\n      }\n\n      // Remove from old parent\n      var parent = child.getLayoutParent();\n      if (parent && parent != this) {\n        parent._remove(child);\n      }\n\n      // Remember parent\n      child.setLayoutParent(this);\n\n      // Import options: This call will\n      //  - clear the layout's children cache as well and\n      //  - add its parent (this widget) to the layout queue\n      if (options) {\n        child.setLayoutProperties(options);\n      } else {\n        this.updateLayoutProperties();\n      }\n\n      // call the template method\n      if (this._afterAddChild) {\n        this._afterAddChild(child);\n      }\n    },\n\n    /**\n     * Convenience function to remove a child widget. It will remove it\n     * from the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to remove.\n     */\n    __removeHelper(child) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertNotUndefined(child);\n      }\n\n      if (child.getLayoutParent() !== this) {\n        throw new Error(\n          \"Remove Error: \" + child + \" is not a child of this widget!\"\n        );\n      }\n\n      // Clear parent connection\n      child.setLayoutParent(null);\n\n      // clear the layout's children cache\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateChildrenCache();\n      }\n\n      // Add to layout queue\n      qx.ui.core.queue.Layout.add(this);\n\n      // call the template method\n      if (this._afterRemoveChild) {\n        this._afterRemoveChild(child);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Enables pointer event capturing. All pointer events will dispatched on this\n     * widget until capturing is disabled using {@link #releaseCapture} or a\n     * pointer button is clicked. If the widgets becomes the capturing widget the\n     * {@link #capture} event is fired. Once it loses capture mode the\n     * {@link #losecapture} event is fired.\n     *\n     * @param capture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture(capture) {\n      this.getContentElement().capture(capture);\n    },\n\n    /**\n     * Disables pointer capture mode enabled by {@link #capture}.\n     */\n    releaseCapture() {\n      this.getContentElement().releaseCapture();\n    },\n\n    /**\n     * Checks if pointer event capturing is enabled for this widget.\n     *\n     * @return {Boolean} <code>true</code> if capturing is active\n     */\n    isCapturing() {\n      var el = this.getContentElement().getDomElement();\n      if (!el) {\n        return false;\n      }\n      var manager = qx.event.Registration.getManager(el);\n      var dispatcher = manager.getDispatcher(qx.event.dispatch.MouseCapture);\n      return el == dispatcher.getCaptureElement();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PADDING SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPadding(value, old, name) {\n      this._updateInsets = true;\n      qx.ui.core.queue.Layout.add(this);\n\n      this.__updateContentPadding(name, value);\n    },\n\n    /**\n     * Helper to updated the css padding of the content element considering the\n     * padding of the decorator.\n     * @param style {String} The name of the css padding property e.g. <code>paddingTop</code>\n     * @param value {Number} The value to set.\n     */\n    __updateContentPadding(style, value) {\n      var content = this.getContentElement();\n      var decorator = this.getDecorator();\n      decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      if (decorator) {\n        var direction = qx.Bootstrap.firstLow(style.replace(\"padding\", \"\"));\n        value += decorator.getPadding()[direction] || 0;\n      }\n      content.setStyle(style, value + \"px\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DECORATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyDecorator(value, old) {\n      var content = this.getContentElement();\n\n      if (old) {\n        old = qx.theme.manager.Decoration.getInstance().getCssClassName(old);\n        content.removeClass(old);\n      }\n\n      if (value) {\n        value = qx.theme.manager.Decoration.getInstance().addCssClass(value);\n        content.addClass(value);\n      }\n      if (value || old) {\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      OTHER PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyToolTipText(value, old) {\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        if (this.__toolTipTextListenerId) {\n          return;\n        }\n        var manager = qx.locale.Manager.getInstance();\n        this.__toolTipTextListenerId = manager.addListener(\n          \"changeLocale\",\n          () => {\n            var toolTipText = this.getToolTipText();\n            if (toolTipText && toolTipText.translate) {\n              this.setToolTipText(toolTipText.translate());\n            }\n          }\n        );\n      }\n    },\n\n    // property apply\n    _applyTextColor(value, old) {\n      // empty template\n    },\n\n    // property apply\n    _applyZIndex(value, old) {\n      this.getContentElement().setStyle(\"zIndex\", value == null ? 0 : value);\n    },\n\n    // property apply\n    _applyVisibility(value, old) {\n      var content = this.getContentElement();\n\n      if (value === \"visible\") {\n        content.show();\n      } else {\n        content.hide();\n      }\n\n      // only force a layout update if visibility change from/to \"exclude\"\n      var parent = this.$$parent;\n      if (\n        parent &&\n        (old == null ||\n          value == null ||\n          old === \"excluded\" ||\n          value === \"excluded\")\n      ) {\n        parent.invalidateLayoutChildren();\n      }\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n    // property apply\n    _applyOpacity(value, old) {\n      this.getContentElement().setStyle(\"opacity\", value == 1 ? null : value);\n    },\n\n    // property apply\n    _applyCursor(value, old) {\n      if (value == null && !this.isSelectable()) {\n        value = \"default\";\n      }\n\n      // In Opera the cursor must be set directly.\n      // http://bugzilla.qooxdoo.org/show_bug.cgi?id=1729\n      this.getContentElement().setStyle(\n        \"cursor\",\n        value,\n        qx.core.Environment.get(\"engine.name\") == \"opera\"\n      );\n    },\n\n    // property apply\n    _applyBackgroundColor(value, old) {\n      var color = this.getBackgroundColor();\n      var content = this.getContentElement();\n\n      var resolved = qx.theme.manager.Color.getInstance().resolve(color);\n      content.setStyle(\"backgroundColor\", resolved);\n    },\n\n    // property apply\n    _applyFont(value, old) {\n      // empty template\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DYNAMIC THEME SWITCH SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _onChangeTheme() {\n      if (this.isDisposed()) {\n        return;\n      }\n\n      super._onChangeTheme();\n\n      // update the appearance\n      this.updateAppearance();\n\n      // DECORATOR //\n      var value = this.getDecorator();\n      this._applyDecorator(null, value);\n      this._applyDecorator(value);\n\n      // FONT //\n      value = this.getFont();\n      if (qx.lang.Type.isString(value)) {\n        this._applyFont(value, value);\n      }\n\n      // TEXT COLOR //\n      value = this.getTextColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyTextColor(value, value);\n      }\n\n      // BACKGROUND COLOR //\n      value = this.getBackgroundColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyBackgroundColor(value, value);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Map} The current widget states */\n    __states: null,\n\n    /** @type {Boolean} Whether the widget has state changes which are not yet queued */\n    $$stateChanges: null,\n\n    /** @type {Map} Can be overridden to forward states to the child controls. */\n    _forwardStates: null,\n\n    /**\n     * Returns whether a state is set.\n     *\n     * @param state {String} the state to check.\n     * @return {Boolean} whether the state is set.\n     */\n    hasState(state) {\n      var states = this.__states;\n      return !!states && !!states[state];\n    },\n\n    /**\n     * Sets a state.\n     *\n     * @param state {String} The state to add\n     */\n    addState(state) {\n      // Dynamically create state map\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (states[state]) {\n        return;\n      }\n\n      // Add state and queue\n      this.__states[state] = true;\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls) {\n        var control;\n        for (var id in controls) {\n          control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            controls[id].addState(state);\n          }\n        }\n      }\n    },\n\n    /**\n     * Clears a state.\n     *\n     * @param state {String} the state to clear.\n     */\n    removeState(state) {\n      // Check for existing state\n      var states = this.__states;\n      if (!states || !states[state]) {\n        return;\n      }\n\n      // Clear state and queue\n      delete this.__states[state];\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls) {\n        for (var id in controls) {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.removeState(state);\n          }\n        }\n      }\n    },\n\n    /**\n     * Replaces the first state with the second one.\n     *\n     * This method is ideal for state transitions e.g. normal => selected.\n     *\n     * @param old {String} Previous state\n     * @param value {String} New state\n     */\n    replaceState(old, value) {\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (!states[value]) {\n        states[value] = true;\n      }\n\n      if (states[old]) {\n        delete states[old];\n      }\n\n      if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[value] && controls) {\n        for (var id in controls) {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.replaceState(old, value);\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPEARANCE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {String} The currently compiled selector to lookup the matching appearance */\n    __appearanceSelector: null,\n\n    /** @type {Boolean} Whether the selectors needs to be recomputed before updating appearance */\n    __updateSelector: null,\n\n    /**\n     * Renders the appearance using the current widget states.\n     *\n     * Used exclusively by {qx.ui.core.queue.Appearance}.\n     */\n    syncAppearance() {\n      var states = this.__states;\n      var selector = this.__appearanceSelector;\n      var manager = qx.theme.manager.Appearance.getInstance();\n\n      // Cache deep accessor\n      var styler = qx.core.Property.$$method.setThemed;\n      var unstyler = qx.core.Property.$$method.resetThemed;\n\n      // Check for requested selector update\n      if (this.__updateSelector) {\n        // Clear flag\n        delete this.__updateSelector;\n\n        // Check if the selector was created previously\n        if (selector) {\n          // Query old selector\n          var oldData = manager.styleFrom(\n            selector,\n            states,\n            null,\n            this.getAppearance()\n          );\n\n          // Clear current selector (to force recompute)\n          selector = null;\n        }\n      }\n\n      // Build selector\n      if (!selector) {\n        var obj = this;\n        var id = [];\n\n        do {\n          id.push(obj.$$subcontrol || obj.getAppearance());\n        } while ((obj = obj.$$subparent));\n\n        // Combine parent control IDs, add top level appearance, filter result\n        // to not include positioning information anymore (e.g. #3)\n        selector = id\n          .reverse()\n          .join(\"/\")\n          .replace(/#[0-9]+/g, \"\");\n        this.__appearanceSelector = selector;\n      }\n\n      // Query current selector\n      var newData = manager.styleFrom(\n        selector,\n        states,\n        null,\n        this.getAppearance()\n      );\n\n      if (newData) {\n        if (oldData) {\n          for (var prop in oldData) {\n            if (newData[prop] === undefined) {\n              this[unstyler[prop]]();\n            }\n          }\n        }\n\n        // Check property availability of new data\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          for (var prop in newData) {\n            if (!this[styler[prop]]) {\n              throw new Error(\n                this.classname +\n                  ' has no themeable property \"' +\n                  prop +\n                  '\" while styling ' +\n                  selector\n              );\n            }\n          }\n        }\n\n        // Apply new data\n        for (var prop in newData) {\n          newData[prop] === undefined\n            ? this[unstyler[prop]]()\n            : this[styler[prop]](newData[prop]);\n        }\n      } else if (oldData) {\n        // Clear old data\n        for (var prop in oldData) {\n          this[unstyler[prop]]();\n        }\n      }\n\n      this.fireDataEvent(\"syncAppearance\", this.__states);\n    },\n\n    // property apply\n    _applyAppearance(value, old) {\n      this.updateAppearance();\n    },\n\n    /**\n     * Helper method called from the visibility queue to detect outstanding changes\n     * to the appearance.\n     *\n     * @internal\n     */\n    checkAppearanceNeeds() {\n      // CASE 1: Widget has never got an appearance already because it was never\n      // visible before. Normally add it to the queue is the easiest way to update it.\n      if (!this.__initialAppearanceApplied) {\n        qx.ui.core.queue.Appearance.add(this);\n        this.__initialAppearanceApplied = true;\n      }\n\n      // CASE 2: Widget has got an appearance before, but was hidden for some time\n      // which results into maybe omitted state changes have not been applied.\n      // In this case the widget is already queued in the appearance. This is basically\n      // what all addState/removeState do, but the queue itself may not have been registered\n      // to be flushed\n      else if (this.$$stateChanges) {\n        qx.ui.core.queue.Appearance.add(this);\n        delete this.$$stateChanges;\n      }\n    },\n\n    /**\n     * Refreshes the appearance of this widget and all\n     * registered child controls.\n     */\n    updateAppearance() {\n      // Clear selector\n      this.__updateSelector = true;\n\n      // Add to appearance queue\n      qx.ui.core.queue.Appearance.add(this);\n\n      // Update child controls\n      var controls = this.__childControls;\n      if (controls) {\n        var obj;\n        for (var id in controls) {\n          obj = controls[id];\n\n          if (obj instanceof qx.ui.core.Widget) {\n            obj.updateAppearance();\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET QUEUE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method is called during the flush of the\n     * {@link qx.ui.core.queue.Widget widget queue}.\n     *\n     * @param jobs {Map} A map of jobs.\n     */\n    syncWidget(jobs) {\n      // empty implementation\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the next event target in the parent chain. May\n     * also return the widget itself if it is not anonymous.\n     *\n     * @return {qx.ui.core.Widget} A working event target of this widget.\n     *    May be <code>null</code> as well.\n     */\n    getEventTarget() {\n      var target = this;\n\n      while (target.getAnonymous()) {\n        target = target.getLayoutParent();\n        if (!target) {\n          return null;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns the next focus target in the parent chain. May\n     * also return the widget itself if it is not anonymous and focusable.\n     *\n     * @return {qx.ui.core.Widget} A working focus target of this widget.\n     *    May be <code>null</code> as well.\n     */\n    getFocusTarget() {\n      var target = this;\n\n      if (!target.getEnabled()) {\n        return null;\n      }\n\n      while (target.getAnonymous() || !target.getFocusable()) {\n        target = target.getLayoutParent();\n        if (!target || !target.getEnabled()) {\n          return null;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns the element which should be focused.\n     *\n     * @return {qx.html.Element} The html element to focus.\n     */\n    getFocusElement() {\n      return this.getContentElement();\n    },\n\n    /**\n     * Whether the widget is reachable by pressing the TAB key.\n     *\n     * Normally tests for both, the focusable property and a positive or\n     * undefined tabIndex property. The widget must have a DOM element\n     * since only visible widgets are tabable.\n     *\n     * @return {Boolean} Whether the element is tabable.\n     */\n    isTabable() {\n      return !!this.getContentElement().getDomElement() && this.isFocusable();\n    },\n\n    // property apply\n    _applyFocusable(value, old) {\n      var target = this.getFocusElement();\n\n      // Apply native tabIndex attribute\n      if (value) {\n        var tabIndex = this.getTabIndex();\n        if (tabIndex == null) {\n          tabIndex = 1;\n        }\n\n        target.setAttribute(\"tabIndex\", tabIndex);\n\n        // Omit native dotted outline border\n        target.setStyle(\"outline\", \"none\");\n      } else {\n        if (target.isNativelyFocusable()) {\n          target.setAttribute(\"tabIndex\", -1);\n        } else if (old) {\n          target.setAttribute(\"tabIndex\", null);\n        }\n      }\n    },\n\n    // property apply\n    _applyKeepFocus(value) {\n      var target = this.getFocusElement();\n      target.setAttribute(\"qxKeepFocus\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyKeepActive(value) {\n      var target = this.getContentElement();\n      target.setAttribute(\"qxKeepActive\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyTabIndex(value) {\n      if (value == null) {\n        value = 1;\n      } else if (value < 1 || value > 32000) {\n        throw new Error(\"TabIndex property must be between 1 and 32000\");\n      }\n\n      if (this.getFocusable() && value != null) {\n        this.getFocusElement().setAttribute(\"tabIndex\", value);\n      }\n    },\n\n    // property apply\n    _applySelectable(value, old) {\n      // Re-apply cursor if not in \"initSelectable\"\n      if (old !== null) {\n        this._applyCursor(this.getCursor());\n      }\n\n      // Apply qooxdoo attribute\n      this.getContentElement().setSelectable(value);\n    },\n\n    // property apply\n    _applyEnabled(value, old) {\n      if (value === false) {\n        this.addState(\"disabled\");\n\n        // hovered not configured in widget, but as this is a\n        // standardized name in qooxdoo and we never want a hover\n        // state for disabled widgets, remove this state every time\n        this.removeState(\"hovered\");\n\n        // Blur when focused\n        if (this.isFocusable()) {\n          // Remove focused state\n          this.removeState(\"focused\");\n\n          // Remove tabIndex\n          this._applyFocusable(false, true);\n        }\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      } else {\n        this.removeState(\"disabled\");\n\n        // Re-add tabIndex\n        if (this.isFocusable()) {\n          this._applyFocusable(true, false);\n        }\n\n        // Re-add draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(true, false);\n        }\n\n        // Re-add droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(true, false);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXT MENU\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyNativeContextMenu(value, old, name) {\n      // empty body to allow overriding\n    },\n\n    // property apply\n    _applyContextMenu(value, old) {\n      if (old) {\n        old.removeState(\"contextmenu\");\n\n        if (old.getOpener() == this) {\n          old.resetOpener();\n        }\n\n        if (!value) {\n          this.removeListener(\"contextmenu\", this._onContextMenuOpen);\n          this.removeListener(\"longtap\", this._onContextMenuOpen);\n          old.removeListener(\n            \"changeVisibility\",\n            this._onBeforeContextMenuOpen,\n            this\n          );\n        }\n      }\n\n      if (value) {\n        value.setOpener(this);\n        value.addState(\"contextmenu\");\n\n        if (!old) {\n          this.addListener(\"contextmenu\", this._onContextMenuOpen);\n          this.addListener(\"longtap\", this._onContextMenuOpen);\n          value.addListener(\n            \"changeVisibility\",\n            this._onBeforeContextMenuOpen,\n            this\n          );\n        }\n      }\n    },\n\n    /**\n     * Event listener for <code>contextmenu</code> event\n     *\n     * @param e {qx.event.type.Pointer} The event object\n     */\n    _onContextMenuOpen(e) {\n      // only allow long tap context menu on touch interactions\n      if (e.getType() == \"longtap\") {\n        if (e.getPointerType() !== \"touch\") {\n          return;\n        }\n      }\n      this.getContextMenu().openAtPointer(e);\n\n      // Do not show native menu\n      // don't open any other contextmenus\n      e.stop();\n    },\n\n    /**\n     * Event listener for <code>beforeContextmenuOpen</code> event\n     *\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onBeforeContextMenuOpen(e) {\n      if (\n        e.getData() == \"visible\" &&\n        this.hasListener(\"beforeContextmenuOpen\")\n      ) {\n        this.fireDataEvent(\"beforeContextmenuOpen\", e);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USEFUL COMMON EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener which stops a bubbling event from\n     * propagates further.\n     *\n     * @param e {qx.event.type.Event} Any bubbling event\n     */\n    _onStopEvent(e) {\n      e.stopPropagation();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DRAG & DROP SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Helper to return a instance of a {@link qx.ui.core.DragDropCursor}.\n     * If you want to use your own DragDropCursor, override this method\n     * and return your custom instance.\n     * @return {qx.ui.core.DragDropCursor} A drag drop cursor implementation.\n     */\n    _getDragDropCursor() {\n      return qx.ui.core.DragDropCursor.getInstance();\n    },\n\n    // property apply\n    _applyDraggable(value, old) {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Force cursor creation\n      this._getDragDropCursor();\n\n      // Process listeners\n      if (value) {\n        this.addListener(\"dragstart\", this._onDragStart);\n        this.addListener(\"drag\", this._onDrag);\n        this.addListener(\"dragend\", this._onDragEnd);\n        this.addListener(\"dragchange\", this._onDragChange);\n      } else {\n        this.removeListener(\"dragstart\", this._onDragStart);\n        this.removeListener(\"drag\", this._onDrag);\n        this.removeListener(\"dragend\", this._onDragEnd);\n        this.removeListener(\"dragchange\", this._onDragChange);\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDraggable\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyDroppable(value, old) {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDroppable\", value ? \"on\" : null);\n    },\n\n    /**\n     * Event listener for own <code>dragstart</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragStart(e) {\n      this._getDragDropCursor().placeToPointer(e);\n      this.getApplicationRoot().setGlobalCursor(\"default\");\n    },\n\n    /**\n     * Event listener for own <code>drag</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDrag(e) {\n      this._getDragDropCursor().placeToPointer(e);\n    },\n\n    /**\n     * Event listener for own <code>dragend</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragEnd(e) {\n      this._getDragDropCursor().moveTo(-1000, -1000);\n      this.getApplicationRoot().resetGlobalCursor();\n    },\n\n    /**\n     * Event listener for own <code>dragchange</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragChange(e) {\n      var cursor = this._getDragDropCursor();\n      var action = e.getCurrentAction();\n      action ? cursor.setAction(action) : cursor.resetAction();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISUALIZE FOCUS STATES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler which is executed when the widget receives the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * apply states etc. to a focused widget.\n     *\n     * @internal\n     */\n    visualizeFocus() {\n      this.addState(\"focused\");\n    },\n\n    /**\n     * Event handler which is executed when the widget lost the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * remove states etc. from a previously focused widget.\n     *\n     * @internal\n     */\n    visualizeBlur() {\n      this.removeState(\"focused\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL CHILD INTO VIEW\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The method scrolls the given item into view.\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param alignX {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param alignY {String?null} Alignment of the item. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoView(child, alignX, alignY, direct) {\n      // Scroll directly on default\n      direct = typeof direct == \"undefined\" ? true : direct;\n\n      // Always lazy scroll when either\n      // - the child\n      // - its layout parent\n      // - its siblings\n      // have layout changes scheduled.\n      //\n      // This is to make sure that the scroll position is computed\n      // after layout changes have been applied to the DOM. Note that changes\n      // scheduled for the grand parent (and up) are not tracked and need to\n      // be signaled manually.\n      var Layout = qx.ui.core.queue.Layout;\n      var parent;\n\n      // Child\n      if (direct) {\n        direct = !Layout.isScheduled(child);\n        parent = child.getLayoutParent();\n\n        // Parent\n        if (direct && parent) {\n          direct = !Layout.isScheduled(parent);\n\n          // Siblings\n          if (direct) {\n            parent.getChildren().forEach(function (sibling) {\n              direct = direct && !Layout.isScheduled(sibling);\n            });\n          }\n        }\n      }\n\n      this.scrollChildIntoViewX(child, alignX, direct);\n      this.scrollChildIntoViewY(child, alignY, direct);\n    },\n\n    /**\n     * The method scrolls the given item into view (x-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewX(\n        child.getContentElement(),\n        align,\n        direct\n      );\n    },\n\n    /**\n     * The method scrolls the given item into view (y-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewY(\n        child.getContentElement(),\n        align,\n        direct\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS SYSTEM USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Focus this widget.\n     *\n     */\n    focus() {\n      if (this.isFocusable()) {\n        this.getFocusElement().focus();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n    /**\n     * Remove focus from this widget.\n     *\n     */\n    blur() {\n      if (this.isFocusable()) {\n        this.getFocusElement().blur();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n    /**\n     * Activate this widget e.g. for keyboard events.\n     *\n     */\n    activate() {\n      this.getContentElement().activate();\n    },\n\n    /**\n     * Deactivate this widget e.g. for keyboard events.\n     *\n     */\n    deactivate() {\n      this.getContentElement().deactivate();\n    },\n\n    /**\n     * Focus this widget when using the keyboard. This is\n     * mainly thought for the advanced qooxdoo keyboard handling\n     * and should not be used by the application developer.\n     *\n     * @internal\n     */\n    tabFocus() {\n      this.getFocusElement().focus();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the given ID is assigned to a child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is registered.\n     */\n    hasChildControl(id) {\n      if (!this.__childControls) {\n        return false;\n      }\n\n      return !!this.__childControls[id];\n    },\n\n    /** @type {Map} Map of instantiated child controls */\n    __childControls: null,\n\n    /**\n     * Returns a map of all already created child controls\n     *\n     * @return {Map} mapping of child control id to the child widget.\n     */\n    _getCreatedChildControls() {\n      return this.__childControls;\n    },\n\n    /**\n     * Returns the child control from the given ID. Returns\n     * <code>null</code> when the child control is unknown.\n     *\n     * It is designed for widget authors, who want to access child controls,\n     * which are created by the widget itself.\n     *\n     * <b>Warning</b>: This method exposes widget internals and modifying the\n     * returned sub widget may bring the widget into an inconsistent state.\n     * Accessing child controls defined in a super class or in an foreign class\n     * is not supported. Do not use it if the result can be achieved using public\n     * API or theming.\n     *\n     * @param id {String} ID of the child control\n     * @param notcreate {Boolean?false} Whether the child control\n     *    should not be created dynamically if not yet available.\n     * @return {qx.ui.core.Widget} Child control\n     */\n    getChildControl(id, notcreate) {\n      if (!this.__childControls) {\n        if (notcreate) {\n          return null;\n        }\n\n        this.__childControls = {};\n      }\n\n      var control = this.__childControls[id];\n      if (control) {\n        return control;\n      }\n\n      if (notcreate === true) {\n        return null;\n      }\n\n      return this._createChildControl(id);\n    },\n\n    /**\n     * Shows the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} the child control\n     */\n    _showChildControl(id) {\n      var control = this.getChildControl(id);\n      control.show();\n      return control;\n    },\n\n    /**\n     * Excludes the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     */\n    _excludeChildControl(id) {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        control.exclude();\n      }\n    },\n\n    /**\n     * Whether the given child control is visible.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is visible.\n     */\n    _isChildControlVisible(id) {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        return control.isVisible();\n      }\n\n      return false;\n    },\n\n    /**\n     * Release the child control by ID and decouple the\n     * child from the parent. This method does not dispose the child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The released control\n     */\n    _releaseChildControl(id) {\n      var control = this.getChildControl(id, false);\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // remove connection to parent\n      delete control.$$subcontrol;\n      delete control.$$subparent;\n\n      // remove state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget) {\n        for (var state in states) {\n          if (forward[state]) {\n            control.removeState(state);\n          }\n        }\n      }\n\n      delete this.__childControls[id];\n\n      return control;\n    },\n\n    /**\n     * Force the creation of the given child control by ID.\n     *\n     * Do not override this method! Override {@link #_createChildControlImpl}\n     * instead if you need to support new controls.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The created control\n     * @throws {Error} when the control was created before\n     */\n    _createChildControl(id) {\n      if (!this.__childControls) {\n        this.__childControls = {};\n      } else if (this.__childControls[id]) {\n        throw new Error(\"Child control '\" + id + \"' already created!\");\n      }\n\n      var pos = id.indexOf(\"#\");\n      try {\n        if (pos == -1) {\n          var control = this._createChildControlImpl(id);\n        } else {\n          var control = this._createChildControlImpl(\n            id.substring(0, pos),\n            id.substring(pos + 1, id.length)\n          );\n        }\n      } catch (exc) {\n        exc.message =\n          \"Exception while creating child control '\" +\n          id +\n          \"' of widget \" +\n          this.toString() +\n          \": \" +\n          exc.message;\n        throw exc;\n      }\n\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // Establish connection to parent\n      control.$$subcontrol = id;\n      control.$$subparent = this;\n\n      // Support for state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget) {\n        for (var state in states) {\n          if (forward[state]) {\n            control.addState(state);\n          }\n        }\n      }\n\n      // If the appearance is already synced after the child control\n      // we need to update the appearance now, because the selector\n      // might be not correct in certain cases.\n      if (control.$$resyncNeeded) {\n        delete control.$$resyncNeeded;\n        control.updateAppearance();\n      }\n\n      this.fireDataEvent(\"createChildControl\", control);\n\n      // Register control and return\n      return (this.__childControls[id] = control);\n    },\n\n    /**\n     * Internal method to create child controls. This method\n     * should be overwritten by classes which extends this one\n     * to support new child control types.\n     *\n     * @param id {String} ID of the child control. If a # is used, the id is\n     *   the part in front of the #.\n     * @param hash {String?undefined} If a child control name contains a #,\n     *   all text following the # will be the hash argument.\n     * @return {qx.ui.core.Widget} The created control or <code>null</code>\n     */\n    _createChildControlImpl(id, hash) {\n      return null;\n    },\n\n    /**\n     * Dispose all registered controls. This is automatically\n     * executed by the widget.\n     *\n     */\n    _disposeChildControls() {\n      var controls = this.__childControls;\n      if (!controls) {\n        return;\n      }\n\n      var Widget = qx.ui.core.Widget;\n\n      for (var id in controls) {\n        var control = controls[id];\n        if (!Widget.contains(this, control)) {\n          control.destroy();\n        } else {\n          control.dispose();\n        }\n      }\n\n      delete this.__childControls;\n    },\n\n    /**\n     * Finds and returns the top level control. This is the first\n     * widget which is not a child control of any other widget.\n     *\n     * @return {qx.ui.core.Widget} The top control\n     */\n    _findTopControl() {\n      var obj = this;\n      while (obj) {\n        if (!obj.$$subparent) {\n          return obj;\n        }\n\n        obj = obj.$$subparent;\n      }\n\n      return null;\n    },\n\n    /**\n     * Return the ID (name) if this instance was a created as a child control of another widget.\n     *\n     * See the first parameter id in {@link qx.ui.core.Widget#_createChildControlImpl}\n     *\n     * @return {String|null} ID of the current widget or null if it was not created as a subcontrol\n     */\n    getSubcontrolId() {\n      return this.$$subcontrol || null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LOWER LEVEL ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the location of the content element in context of the document\n     * dimensions.\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element\n     *   (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default,\n     *   uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to\n     *   border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute\n     *   positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for\n     *   static/relative positioned content).\n     *\n     * @param mode {String?box} A supported option. See comment above.\n     * @return {Map} Returns a map with <code>left</code>, <code>top</code>,\n     *   <code>right</code> and <code>bottom</code> which contains the distance\n     *   of the element relative to the document.\n     */\n    getContentLocation(mode) {\n      var domEl = this.getContentElement().getDomElement();\n      return domEl ? qx.bom.element.Location.get(domEl, mode) : null;\n    },\n\n    /**\n     * Directly modifies the relative left position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Left position\n     */\n    setDomLeft(value) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.left = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /**\n     * Directly modifies the relative top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Top position\n     */\n    setDomTop(value) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.top = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /**\n     * Directly modifies the relative left and top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param left {Integer} Left position\n     * @param top {Integer} Top position\n     */\n    setDomPosition(left, top) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.left = left + \"px\";\n        domEl.style.top = top + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ARIA attrs support\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the string which labels this widget. This will be read out by screenreaders. Needed if there is no\n     * readable text/label in this widget which would automatically act as aria-label.\n     * @param label {String} Labelling Text\n     */\n    setAriaLabel(label) {\n      this.getContentElement().setAttribute(\"aria-label\", label);\n    },\n\n    /**\n     * Marks that this widget gets labelled by another widget. This will be read out by screenreaders as first\n     * information.\n     * Similiar to aria-label, difference being that the labelling widget is an different widget and multiple\n     * widgets can be added.\n     * @param labelWidgets {qx.ui.core.Widget[]} Indefinite Number of labelling Widgets\n     */\n    addAriaLabelledBy(...labelWidgets) {\n      this.__addAriaXBy(labelWidgets, \"aria-labelledby\");\n    },\n\n    /**\n     * Marks that this widget gets described by another widget. This will be read out by screenreaders as last\n     * information. Multiple Widgets possible.\n     * @param describingWidgets {qx.ui.core.Widget[]} Indefinite Number of describing Widgets\n     */\n    addAriaDescribedBy(...describingWidgets) {\n      this.__addAriaXBy(describingWidgets, \"aria-describedby\");\n    },\n\n    /**\n     * Sets either aria-labelledby or aria-describedby\n     * @param widgets {qx.ui.core.Widget[]} Indefinite Number of widgets\n     * @param ariaAttr {String} aria-labelledby | aria-describedby\n     */\n    __addAriaXBy(widgets, ariaAttr) {\n      if (![\"aria-labelledby\", \"aria-describedby\"].includes(ariaAttr)) {\n        throw new Error(\"Only aria-labelledby or aria-describedby allowed!\");\n      }\n      let idArr = [];\n      for (const widget of widgets) {\n        if (!(widget instanceof qx.ui.core.Widget)) {\n          throw new Error(\n            \"Given widget \" +\n              widget +\n              \" is not an instance of qx.ui.core.Widget!\"\n          );\n        }\n        const contentEl = widget.getContentElement();\n        let widgetId = contentEl.getAttribute(\"id\");\n        if (!widgetId) {\n          widgetId = `label-${widget.toHashCode()}`;\n          contentEl.setAttribute(\"id\", widgetId);\n        }\n        if (!idArr.includes(widgetId)) {\n          idArr.push(widgetId);\n        }\n      }\n      if (idArr.length === 0) {\n        return;\n      }\n      const idStr = idArr.join(\" \");\n      const contentEl = this.getContentElement();\n      let res = contentEl.getAttribute(ariaAttr);\n      res = res ? `${res} ${idStr}` : idStr;\n      contentEl.setAttribute(ariaAttr, res);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ENHANCED DISPOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes this widget from its parent and disposes it.\n     *\n     * Please note that the widget is not disposed synchronously. The\n     * real dispose happens after the next queue flush.\n     *\n     */\n    destroy() {\n      if (this.$$disposed) {\n        return;\n      }\n\n      // We may be deferring disposing, but we can at least prevent\n      // listener handlers from being called. We don't know exactly\n      // what listeners have already been disposed at this point.\n      qx.event.Registration.removeAllListeners(this);\n\n      var parent = this.$$parent;\n      if (parent) {\n        parent._remove(this);\n      }\n\n      qx.ui.core.queue.Dispose.add(this);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CLONE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    clone() {\n      var clone = super.clone();\n\n      if (this.getChildren) {\n        var children = this.getChildren();\n        for (var i = 0, l = children.length; i < l; i++) {\n          clone.add(children[i].clone());\n        }\n      }\n\n      return clone;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    // Some dispose stuff is not needed in global shutdown, otherwise\n    // it just slows down things a bit, so do not do them.\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        if (this.__toolTipTextListenerId) {\n          qx.locale.Manager.getInstance().removeListenerById(\n            this.__toolTipTextListenerId\n          );\n        }\n      }\n\n      // Remove widget pointer from DOM\n      var contentEl = this.getContentElement();\n      if (contentEl) {\n        contentEl.disconnectWidget(this);\n      }\n\n      // Clean up all child controls\n      this._disposeChildControls();\n\n      // Remove from ui queues\n      qx.ui.core.queue.Appearance.remove(this);\n      qx.ui.core.queue.Layout.remove(this);\n      qx.ui.core.queue.Visibility.remove(this);\n      qx.ui.core.queue.Widget.remove(this);\n    }\n\n    if (this.getContextMenu()) {\n      this.setContextMenu(null);\n    }\n\n    // pool decorators if not in global shutdown\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      this.clearSeparators();\n      this.__separators = null;\n    } else {\n      this._disposeArray(\"__separators\");\n    }\n\n    // Clear children array\n    this._disposeArray(\"__widgetChildren\");\n\n    // Cleanup map of appearance states\n    this.__states = this.__childControls = null;\n\n    // Dispose layout manager and HTML elements\n    this._disposeObjects(\"__layoutManager\", \"__contentElement\");\n  }\n});\n"
  ],
  "mappings": "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"
}