{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Node",
    "construct",
    "tagName",
    "styles",
    "attributes",
    "__styleValues",
    "__attribValues",
    "key",
    "Error",
    "classname",
    "initCssClass",
    "registerProperty",
    "value",
    "_domNode",
    "innerHTML",
    "writer",
    "property",
    "name",
    "statics",
    "DEBUG",
    "_hasRoots",
    "_defaultRoot",
    "_modified",
    "_visibility",
    "_scroll",
    "_actions",
    "__selection",
    "__focusHandler",
    "__mouseCapture",
    "__SELF_CLOSING_TAGS",
    "_scheduleFlush",
    "job",
    "Element",
    "__deferredCall",
    "schedule",
    "flush",
    "obj",
    "log",
    "Logger",
    "debug",
    "focusHandler",
    "__getFocusHandler",
    "focusedDomElement",
    "getFocus",
    "__willBecomeInvisible",
    "blur",
    "activeDomElement",
    "getActive",
    "bom",
    "deactivate",
    "captureDomElement",
    "__getCaptureElement",
    "releaseCapture",
    "later",
    "modified",
    "hc",
    "_willBeSeeable",
    "dom",
    "Hierarchy",
    "isRendered",
    "push",
    "i",
    "l",
    "length",
    "visibility",
    "element",
    "isVisible",
    "$$disposed",
    "style",
    "display",
    "core",
    "Environment",
    "get",
    "document",
    "documentMode",
    "scroll",
    "elem",
    "offsetWidth",
    "done",
    "__lazyScrollX",
    "scrollLeft",
    "__lazyScrollY",
    "scrollTop",
    "intoViewX",
    "__lazyScrollIntoViewX",
    "child",
    "getDomElement",
    "Scroll",
    "align",
    "intoViewY",
    "__lazyScrollIntoViewY",
    "activityEndActions",
    "action",
    "type",
    "args",
    "unshift",
    "apply",
    "selection",
    "Selection",
    "set",
    "start",
    "end",
    "event",
    "handler",
    "Appear",
    "refresh",
    "eventManager",
    "Registration",
    "getManager",
    "window",
    "getHandler",
    "Focus",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "domElement",
    "fromDomElement",
    "fromDomNode",
    "setDefaultRoot",
    "root",
    "warn",
    "getDefaultRoot",
    "properties",
    "cssClass",
    "init",
    "nullable",
    "check",
    "members",
    "__root",
    "__styleJobs",
    "__attribJobs",
    "_createDomElement",
    "create",
    "_nodeName",
    "serialize",
    "__childrenHaveChanged",
    "importQxObjectIds",
    "_serializeImpl",
    "data",
    "Attribute",
    "lang",
    "Object",
    "clone",
    "keys",
    "Style",
    "css",
    "compile",
    "_properties",
    "call",
    "undefined",
    "JSON",
    "stringify",
    "_children",
    "connectWidget",
    "widget",
    "connectObject",
    "disconnectWidget",
    "disconnectObject",
    "_addChildImpl",
    "_removeChildImpl",
    "getQxObject",
    "id",
    "thisId",
    "getQxObjectId",
    "thisAttributeId",
    "getAttribute",
    "setAttribute",
    "setQxObjectId",
    "resolveImpl",
    "node",
    "attributeId",
    "endsWith",
    "segs",
    "split",
    "parentNode",
    "addOwnedQxObject",
    "subId",
    "Array",
    "shift",
    "pop",
    "join",
    "Id",
    "children",
    "getChildren",
    "forEach",
    "_copyData",
    "fromMarkup",
    "propertiesFromDom",
    "str",
    "classes",
    "startsWith",
    "SVGAnimatedString",
    "baseVal",
    "setCssClass",
    "setStyles",
    "setCss",
    "setVisible",
    "_syncData",
    "jobs",
    "reset",
    "setRoot",
    "isRoot",
    "useMarkup",
    "helper",
    "createElement",
    "getHelperElement",
    "useElement",
    "firstChild",
    "useNode",
    "isFocusable",
    "tabIndex",
    "focusable",
    "FOCUSABLE_ELEMENTS",
    "setSelectable",
    "userSelect",
    "setStyle",
    "isNativelyFocusable",
    "fadeIn",
    "duration",
    "col",
    "qxWeb",
    "isPlaying",
    "stop",
    "once",
    "show",
    "getAnimationHandles",
    "fadeOut",
    "hide",
    "_applyVisible",
    "oldValue",
    "toHashCode",
    "_parent",
    "_scheduleChildrenUpdate",
    "scrollChildIntoViewX",
    "direct",
    "thisEl",
    "childEl",
    "scrollChildIntoViewY",
    "scrollToX",
    "x",
    "lazy",
    "getScrollX",
    "scrollToY",
    "y",
    "getScrollY",
    "disableScrolling",
    "enableScrolling",
    "addListener",
    "__onScroll",
    "removeListener",
    "__inScroll",
    "e",
    "setText",
    "self",
    "Text",
    "remove",
    "add",
    "getText",
    "result",
    "getTextSelection",
    "el",
    "getTextSelectionLength",
    "getLength",
    "getTextSelectionStart",
    "getStart",
    "getTextSelectionEnd",
    "getEnd",
    "setTextSelection",
    "clearTextSelection",
    "clear",
    "__performAction",
    "actions",
    "focus",
    "activate",
    "capture",
    "containerCapture",
    "_applyStyle",
    "map",
    "removeStyle",
    "getStyle",
    "getAllStyles",
    "__breakClasses",
    "toLowerCase",
    "__combineClasses",
    "primaryClass",
    "getCssClass",
    "arr",
    "append",
    "values",
    "addClass",
    "nameLower",
    "removeClass",
    "removeAllClasses",
    "_applyCssClass",
    "getDimensions",
    "mode",
    "left",
    "top",
    "right",
    "bottom",
    "width",
    "height",
    "content",
    "loc",
    "Location",
    "Dimension",
    "getContentSize",
    "canBeSeen",
    "rect",
    "getBoundingClientRect",
    "setAttributes",
    "removeAttribute",
    "defer",
    "util",
    "DeferredCall",
    "destruct",
    "hash"
  ],
  "sources": [
    "C:/Users/dadovaz/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/html/Element.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * High-performance, high-level DOM element creation and management.\n *\n * Includes support for HTML and style attributes. Elements also have\n * got a powerful children and visibility management.\n *\n * Processes DOM insertion and modification with advanced logic\n * to reduce the real transactions.\n *\n * From the view of the parent you can use the following children management\n * methods:\n * {@link #getChildren}, {@link #indexOf}, {@link #hasChild}, {@link #add},\n * {@link #addAt}, {@link #remove}, {@link #removeAt}, {@link #removeAll}\n *\n * Each child itself also has got some powerful methods to control its\n * position:\n * {@link #getParent}, {@link #free},\n * {@link #insertInto}, {@link #insertBefore}, {@link #insertAfter},\n * {@link #moveTo}, {@link #moveBefore}, {@link #moveAfter},\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.module.Animation)\n */\nqx.Class.define(\"qx.html.Element\", {\n  extend: qx.html.Node,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a new Element\n   *\n   * @param tagName {String?\"div\"} Tag name of the element to create\n   * @param styles {Map?null} optional map of CSS styles, where the key is the name\n   *    of the style and the value is the value to use.\n   * @param attributes {Map?null} optional map of element attributes, where the\n   *    key is the name of the attribute and the value is the value to use.\n   */\n  construct(tagName, styles, attributes) {\n    super(tagName || \"div\");\n\n    this.__styleValues = styles || null;\n    this.__attribValues = attributes || null;\n    if (attributes) {\n      for (var key in attributes) {\n        if (!key) {\n          throw new Error(\"Invalid unnamed attribute in \" + this.classname);\n        }\n      }\n    }\n    this.initCssClass();\n\n    this.registerProperty(\n      \"innerHtml\",\n      null,\n      function (value) {\n        if (this._domNode) {\n          this._domNode.innerHTML = value;\n        }\n      },\n      function (writer, property, name) {\n        if (property.value) {\n          writer(property.value);\n        }\n      }\n    );\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /*\n    ---------------------------------------------------------------------------\n      STATIC DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} If debugging should be enabled */\n    DEBUG: false,\n\n    /** @type {Integer} number of roots */\n    _hasRoots: 0,\n\n    /** @type {Element} the default root to use */\n    _defaultRoot: null,\n\n    /** @type {Map} Contains the modified {@link qx.html.Element}s. The key is the hash code. */\n    _modified: {},\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should get hidden or visible at the next flush. The key is the hash code. */\n    _visibility: {},\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should scrolled at the next flush */\n    _scroll: {},\n\n    /** @type {Array} List of post actions for elements. The key is the action name. The value the {@link qx.html.Element}. */\n    _actions: [],\n\n    /**  @type {Map} List of all selections. */\n    __selection: {},\n\n    __focusHandler: null,\n\n    __mouseCapture: null,\n\n    __SELF_CLOSING_TAGS: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC ELEMENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedule a deferred element queue flush. If the widget subsystem is used\n     * this method gets overwritten by {@link qx.ui.core.queue.Manager}.\n     *\n     * @param job {String} The job descriptor. Should always be <code>\"element\"</code>.\n     */\n    _scheduleFlush(job) {\n      qx.html.Element.__deferredCall.schedule();\n    },\n\n    /**\n     * Flush the global modified list\n     */\n    flush() {\n      var obj;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (this.DEBUG) {\n          qx.log.Logger.debug(this, \"Flushing elements...\");\n        }\n      }\n\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        // blur elements, which will be removed\n        var focusHandler = this.__getFocusHandler();\n        var focusedDomElement = focusHandler.getFocus();\n        if (\n          focusedDomElement &&\n          this.__willBecomeInvisible(focusedDomElement)\n        ) {\n          focusHandler.blur(focusedDomElement);\n        }\n\n        // deactivate elements, which will be removed\n        var activeDomElement = focusHandler.getActive();\n        if (activeDomElement && this.__willBecomeInvisible(activeDomElement)) {\n          qx.bom.Element.deactivate(activeDomElement);\n        }\n\n        // release capture for elements, which will be removed\n        var captureDomElement = this.__getCaptureElement();\n        if (\n          captureDomElement &&\n          this.__willBecomeInvisible(captureDomElement)\n        ) {\n          qx.bom.Element.releaseCapture(captureDomElement);\n        }\n      }\n\n      var later = [];\n      var modified = qx.html.Element._modified;\n\n      for (var hc in modified) {\n        obj = modified[hc];\n        // Ignore all hidden elements except iframes\n        // but keep them until they get visible (again)\n        if (obj._willBeSeeable() || obj.classname == \"qx.html.Iframe\") {\n          // Separately queue rendered elements\n          if (obj._domNode && qx.dom.Hierarchy.isRendered(obj._domNode)) {\n            later.push(obj);\n          }\n\n          // Flush invisible elements first\n          else {\n            if (qx.core.Environment.get(\"qx.debug\")) {\n              if (this.DEBUG) {\n                obj.debug(\"Flush invisible element\");\n              }\n            }\n\n            obj.flush();\n          }\n\n          // Cleanup modification list\n          delete modified[hc];\n        }\n      }\n\n      for (var i = 0, l = later.length; i < l; i++) {\n        obj = later[i];\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (this.DEBUG) {\n            obj.debug(\"Flush rendered element\");\n          }\n        }\n\n        obj.flush();\n      }\n\n      // Process visibility list\n      var visibility = this._visibility;\n\n      for (var hc in visibility) {\n        obj = visibility[hc];\n\n        var element = obj._domNode;\n        if (!element) {\n          delete visibility[hc];\n          continue;\n        }\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (this.DEBUG) {\n            qx.log.Logger.debug(\n              this,\n              \"Switching visibility to: \" + obj.isVisible()\n            );\n          }\n        }\n\n        // hiding or showing an object and deleting it right after that may\n        // cause an disposed object in the visibility queue [BUG #3607]\n        if (!obj.$$disposed) {\n          element.style.display = obj.isVisible() ? \"\" : \"none\";\n          // also hide the element (fixed some rendering problem in IE<8 & IE8 quirks)\n          if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n            if (!(document.documentMode >= 8)) {\n              element.style.visibility = obj.isVisible() ? \"visible\" : \"hidden\";\n            }\n          }\n        }\n\n        delete visibility[hc];\n      }\n\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        // Process scroll list\n        var scroll = this._scroll;\n        for (var hc in scroll) {\n          obj = scroll[hc];\n          var elem = obj._domNode;\n\n          if (elem && elem.offsetWidth) {\n            var done = true;\n\n            // ScrollToX\n            if (obj.__lazyScrollX != null) {\n              obj._domNode.scrollLeft = obj.__lazyScrollX;\n              delete obj.__lazyScrollX;\n            }\n\n            // ScrollToY\n            if (obj.__lazyScrollY != null) {\n              obj._domNode.scrollTop = obj.__lazyScrollY;\n              delete obj.__lazyScrollY;\n            }\n\n            // ScrollIntoViewX\n            var intoViewX = obj.__lazyScrollIntoViewX;\n            if (intoViewX != null) {\n              var child = intoViewX.element.getDomElement();\n\n              if (child && child.offsetWidth) {\n                qx.bom.element.Scroll.intoViewX(child, elem, intoViewX.align);\n                delete obj.__lazyScrollIntoViewX;\n              } else {\n                done = false;\n              }\n            }\n\n            // ScrollIntoViewY\n            var intoViewY = obj.__lazyScrollIntoViewY;\n            if (intoViewY != null) {\n              var child = intoViewY.element.getDomElement();\n\n              if (child && child.offsetWidth) {\n                qx.bom.element.Scroll.intoViewY(child, elem, intoViewY.align);\n                delete obj.__lazyScrollIntoViewY;\n              } else {\n                done = false;\n              }\n            }\n\n            // Clear flag if all things are done\n            // Otherwise wait for the next flush\n            if (done) {\n              delete scroll[hc];\n            }\n          }\n        }\n\n        var activityEndActions = {\n          releaseCapture: 1,\n          blur: 1,\n          deactivate: 1\n        };\n\n        // Process action list\n        for (var i = 0; i < this._actions.length; i++) {\n          var action = this._actions[i];\n          var element = action.element._domNode;\n          if (\n            !element ||\n            (!activityEndActions[action.type] &&\n              !action.element._willBeSeeable())\n          ) {\n            continue;\n          }\n          var args = action.args;\n          args.unshift(element);\n          qx.bom.Element[action.type].apply(qx.bom.Element, args);\n        }\n        this._actions = [];\n      }\n\n      // Process selection\n      for (var hc in this.__selection) {\n        var selection = this.__selection[hc];\n        var elem = selection.element._domNode;\n        if (elem) {\n          qx.bom.Selection.set(elem, selection.start, selection.end);\n          delete this.__selection[hc];\n        }\n      }\n\n      // Fire appear/disappear events\n      qx.event.handler.Appear.refresh();\n    },\n\n    /**\n     * Get the focus handler\n     *\n     * @return {qx.event.handler.Focus} The focus handler\n     */\n    __getFocusHandler() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        if (!this.__focusHandler) {\n          var eventManager = qx.event.Registration.getManager(window);\n          this.__focusHandler = eventManager.getHandler(qx.event.handler.Focus);\n        }\n        return this.__focusHandler;\n      } else {\n        throw new Error(\n          \"Unexpected use of qx.html.Element.__getFocusHandler in headless environment\"\n        );\n      }\n    },\n\n    /**\n     * Get the mouse capture element\n     *\n     * @return {Element} The mouse capture DOM element\n     */\n    __getCaptureElement() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        if (!this.__mouseCapture) {\n          var eventManager = qx.event.Registration.getManager(window);\n          this.__mouseCapture = eventManager.getDispatcher(\n            qx.event.dispatch.MouseCapture\n          );\n        }\n        return this.__mouseCapture.getCaptureElement();\n      } else {\n        throw new Error(\n          \"Unexpected use of qx.html.Element.__getCaptureElement in headless environment\"\n        );\n      }\n    },\n\n    /**\n     * Whether the given DOM element will become invisible after the flush\n     *\n     * @param domElement {Element} The DOM element to check\n     * @return {Boolean} Whether the element will become invisible\n     */\n    __willBecomeInvisible(domElement) {\n      var element = this.fromDomElement(domElement);\n      return element && !element._willBeSeeable();\n    },\n\n    /**\n     * Finds the Widget for a given DOM element\n     *\n     * @param domElement {DOM} the DOM element\n     * @return {qx.ui.core.Widget} the Widget that created the DOM element\n     * @deprecated {6.1} see qx.html.Node.fromDomNode\n     */\n    fromDomElement(domElement) {\n      return qx.html.Node.fromDomNode(domElement);\n    },\n\n    /**\n     * Sets the default Root element\n     *\n     * @param root {Element} the new default root\n     */\n    setDefaultRoot(root) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (this._defaultRoot && root) {\n          qx.log.Logger.warn(\n            qx.html.Element,\n            \"Changing default root, from \" + this._defaultRoot + \" to \" + root\n          );\n        }\n      }\n      this._defaultRoot = root;\n    },\n\n    /**\n     * Returns the default root\n     *\n     * @return {Element} the default root\n     */\n    getDefaultRoot() {\n      return this._defaultRoot;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * @type{String} The primary CSS class for this element\n     *\n     * The implementation will add and remove this class from the list of classes,\n     * this property is provided as a means to easily set the primary class.  Because\n     * SCSS supports inheritance, it's more useful to be able to allow the SCSS\n     * definition to control the inheritance hierarchy of classes.\n     *\n     * For example, a dialog could be implemented in code as a Dialog class derived from\n     * a Window class, but the presentation may be so different that the theme author\n     * would choose to not use inheritance at all.\n     */\n    cssClass: {\n      init: null,\n      nullable: true,\n      check: \"String\",\n      apply: \"_applyCssClass\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED HELPERS/DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} Marker for always visible root nodes (often the body node) */\n    __root: false,\n\n    __lazyScrollIntoViewX: null,\n    __lazyScrollIntoViewY: null,\n\n    __lazyScrollX: null,\n    __lazyScrollY: null,\n\n    __styleJobs: null,\n    __attribJobs: null,\n\n    __styleValues: null,\n    __attribValues: null,\n\n    /*\n     * @Override\n     */\n    _createDomElement() {\n      return qx.dom.Element.create(this._nodeName);\n    },\n\n    /*\n     * @Override\n     */\n    serialize(writer) {\n      if (this.__childrenHaveChanged) {\n        this.importQxObjectIds();\n        this.__childrenHaveChanged = false;\n      }\n      return super.serialize(writer);\n    },\n\n    /*\n     * @Override\n     */\n    _serializeImpl(writer) {\n      writer(\"<\", this._nodeName);\n\n      // Copy attributes\n      var data = this.__attribValues;\n      if (data) {\n        var Attribute = qx.bom.element.Attribute;\n        for (var key in data) {\n          writer(\" \");\n          Attribute.serialize(writer, key, data[key]);\n        }\n      }\n\n      // Copy styles\n      var data = this.__styleValues || {};\n      if (!this.isVisible()) {\n        data = qx.lang.Object.clone(data);\n        data.display = \"none\";\n      }\n      if (Object.keys(data).length) {\n        var Style = qx.bom.element.Style;\n        var css = Style.compile(data);\n        if (css) {\n          writer(' style=\"', css, '\"');\n        }\n      }\n\n      // Copy properties\n      var data = this._properties;\n      if (data) {\n        for (var key in this._properties) {\n          let property = this._properties[key];\n          if (property.serialize) {\n            writer(\" \");\n            property.serialize.call(this, writer, key, property);\n          } else if (property.value !== undefined && property.value !== null) {\n            writer(\" \");\n            let value = JSON.stringify(property.value);\n            writer(key, \"=\", value);\n          }\n        }\n      }\n\n      // Children\n      if (!this._children || !this._children.length) {\n        if (qx.html.Element.__SELF_CLOSING_TAGS[this._nodeName]) {\n          writer(\">\");\n        } else {\n          writer(\"></\", this._nodeName, \">\");\n        }\n      } else {\n        writer(\">\");\n        for (var i = 0; i < this._children.length; i++) {\n          this._children[i]._serializeImpl(writer);\n        }\n        writer(\"</\", this._nodeName, \">\");\n      }\n    },\n\n    /**\n     * Connects a widget to this element, and to the DOM element in this Element.  They\n     * remain associated until disposed or disconnectWidget is called\n     *\n     * @param widget {qx.ui.core.Widget} the widget to associate\n     * @deprecated {6.1} see connectObject\n     */\n    connectWidget(widget) {\n      return this.connectObject(widget);\n    },\n\n    /**\n     * Disconnects a widget from this element and the DOM element.  The DOM element remains\n     * untouched, except that it can no longer be used to find the Widget.\n     *\n     * @param qxObject {qx.core.Object} the Widget\n     * @deprecated {6.1} see disconnectObject\n     */\n    disconnectWidget(widget) {\n      return this.disconnectObject(widget);\n    },\n\n    /*\n     * @Override\n     */\n    _addChildImpl(child) {\n      super._addChildImpl(child);\n      this.__childrenHaveChanged = true;\n    },\n\n    /*\n     * @Override\n     */\n    _removeChildImpl(child) {\n      super._removeChildImpl(child);\n      this.__childrenHaveChanged = true;\n    },\n\n    /*\n     * @Override\n     */\n    getQxObject(id) {\n      if (this.__childrenHaveChanged) {\n        this.importQxObjectIds();\n        this.__childrenHaveChanged = false;\n      }\n      return super.getQxObject(id);\n    },\n\n    /**\n     * When a tree of virtual dom is loaded via JSX code, the paths in the `data-qx-object-id`\n     * attribute are relative to the JSX, and these attribuite values need to be loaded into the\n     * `qxObjectId` property - while resolving the parent parts of the path.\n     *\n     * EG\n     *  <div data-qx-object-id=\"root\">\n     *    <div>\n     *      <div data-qx-object-id=\"root/child\">\n     *\n     * The root DIV has to take on the qxObjectId of \"root\", and the third DIV has to have the\n     * ID \"child\" and be owned by the first DIV.\n     *\n     * This function imports and resolves those IDs\n     */\n    importQxObjectIds() {\n      let thisId = this.getQxObjectId();\n      let thisAttributeId = this.getAttribute(\"data-qx-object-id\");\n      if (thisId) {\n        this.setAttribute(\"data-qx-object-id\", thisId, true);\n      } else if (thisAttributeId) {\n        this.setQxObjectId(thisAttributeId);\n      }\n\n      const resolveImpl = node => {\n        if (!(node instanceof qx.html.Element)) {\n          return;\n        }\n        let id = node.getQxObjectId();\n        let attributeId = node.getAttribute(\"data-qx-object-id\");\n        if (id) {\n          if (attributeId && !attributeId.endsWith(id)) {\n            this.warn(\n              `Attribute ID ${attributeId} is not compatible with the qxObjectId ${id}; the qxObjectId will take prescedence`\n            );\n          }\n          node.setAttribute(\"data-qx-object-id\", id, true);\n        } else if (attributeId) {\n          let segs = attributeId ? attributeId.split(\"/\") : [];\n\n          // Only one segment is easy, add directly to the parent\n          if (segs.length == 1) {\n            let parentNode = this;\n            parentNode.addOwnedQxObject(node, attributeId);\n\n            // Lots of segments\n          } else if (segs.length > 1) {\n            let parentNode = null;\n\n            // If the first segment is the outer parent\n            if (segs[0] == thisAttributeId || segs[0] == thisId) {\n              // Only two segments, means that the parent is the outer and the last segment\n              //  is the ID of the node being examined\n              if (segs.length == 2) {\n                parentNode = this;\n\n                // Otherwise resolve it further\n              } else {\n                // Extract the segments, exclude the first and last, and that leaves us with a relative ID path\n                let subId = qx.lang.Array.clone(segs);\n                subId.shift();\n                subId.pop();\n                subId = subId.join(\"/\");\n                parentNode = this.getQxObject(subId);\n              }\n\n              // Not the outer node, then resolve as a global.\n            } else {\n              parentNode = qx.core.Id.getQxObject(attributeId);\n            }\n\n            if (!parentNode) {\n              throw new Error(\n                `Cannot resolve object id ancestors, id=${attributeId}`\n              );\n            }\n\n            parentNode.addOwnedQxObject(node, segs[segs.length - 1]);\n          }\n        }\n\n        let children = node.getChildren();\n        if (children) {\n          children.forEach(resolveImpl);\n        }\n      };\n\n      let children = this.getChildren();\n      if (children) {\n        children.forEach(resolveImpl);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SUPPORT FOR ATTRIBUTE/STYLE/EVENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Copies data between the internal representation and the DOM. This\n     * simply copies all the data and only works well directly after\n     * element creation. After this the data must be synced using {@link #_syncData}\n     *\n     * @param fromMarkup {Boolean} Whether the copy should respect styles\n     *   given from markup\n     */\n    _copyData(fromMarkup, propertiesFromDom) {\n      super._copyData(fromMarkup, propertiesFromDom);\n      var elem = this._domNode;\n\n      // Copy attributes\n      var data = this.__attribValues;\n      if (data) {\n        var Attribute = qx.bom.element.Attribute;\n        if (fromMarkup) {\n          var str;\n          let classes = {};\n          str = this.getAttribute(\"class\");\n          (str ? str.split(\" \") : []).forEach(name => {\n            if (name.startsWith(\"qx-\")) {\n              classes[name] = true;\n            }\n          });\n\n          str = Attribute.get(elem, \"class\");\n          if (!qx.core.Environment.get(\"qx.headless\")) {\n            if (str instanceof window.SVGAnimatedString) {\n              str = str.baseVal;\n            }\n          }\n          (str ? str.split(\" \") : []).forEach(name => (classes[name] = true));\n          classes = Object.keys(classes);\n\n          var segs = classes;\n          if (segs.length) {\n            this.setCssClass(segs[0]);\n            this.setAttribute(\"class\", classes.join(\" \"));\n          } else {\n            this.setCssClass(null);\n            this.setAttribute(\"class\", null);\n          }\n        }\n        for (var key in data) {\n          Attribute.set(elem, key, data[key]);\n        }\n      }\n\n      // Copy styles\n      var data = this.__styleValues;\n      if (data) {\n        var Style = qx.bom.element.Style;\n\n        if (fromMarkup) {\n          Style.setStyles(elem, data);\n        } else {\n          // Set styles at once which is a lot faster in most browsers\n          // compared to separate modifications of many single style properties.\n          Style.setCss(elem, Style.compile(data));\n        }\n      }\n\n      // Copy visibility\n      if (!fromMarkup) {\n        var display = elem.style.display || \"\";\n        if (display == \"\" && !this.isVisible()) {\n          elem.style.display = \"none\";\n        } else if (display == \"none\" && this.isVisible()) {\n          elem.style.display = \"\";\n        }\n      } else {\n        var display = elem.style.display || \"\";\n        this.setVisible(display != \"none\");\n      }\n    },\n\n    /**\n     * Synchronizes data between the internal representation and the DOM. This\n     * is the counterpart of {@link #_copyData} and is used for further updates\n     * after the element has been created.\n     *\n     */\n    _syncData() {\n      super._syncData();\n      var elem = this._domNode;\n\n      var Attribute = qx.bom.element.Attribute;\n      var Style = qx.bom.element.Style;\n\n      // Sync attributes\n      var jobs = this.__attribJobs;\n      if (jobs) {\n        var data = this.__attribValues;\n        if (data) {\n          var value;\n          for (var key in jobs) {\n            value = data[key];\n\n            if (value !== undefined) {\n              Attribute.set(elem, key, value);\n            } else {\n              Attribute.reset(elem, key);\n            }\n          }\n        }\n\n        this.__attribJobs = null;\n      }\n\n      // Sync styles\n      var jobs = this.__styleJobs;\n      if (jobs) {\n        var data = this.__styleValues;\n        if (data) {\n          var styles = {};\n          for (var key in jobs) {\n            styles[key] = data[key];\n          }\n\n          Style.setStyles(elem, styles);\n        }\n\n        this.__styleJobs = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DOM ELEMENT ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's root flag, which indicates\n     * whether the element should be a root element or not.\n     * @param root {Boolean} The root flag.\n     */\n    setRoot(root) {\n      if (root && !this.__root) {\n        qx.html.Element._hasRoots++;\n      } else if (!root && this.__root) {\n        qx.html.Element._hasRoots--;\n      }\n      this.__root = root;\n    },\n\n    /*\n     * @Override\n     */\n    isRoot() {\n      return this.__root;\n    },\n\n    /**\n     * Uses existing markup for this element. This is mainly used\n     * to insert pre-built markup blocks into the element hierarchy.\n     *\n     * @param html {String} HTML markup with one root element\n     *   which is used as the main element for this instance.\n     * @return {Element} The created DOM element\n     */\n    useMarkup(html) {\n      if (this._domNode) {\n        throw new Error(\"Could not overwrite existing element!\");\n      }\n\n      // Prepare extraction\n      // We have a IE specific issue with \"Unknown error\" messages\n      // when we try to use the same DOM node again. I am not sure\n      // why this happens. Would be a good performance improvement,\n      // but does not seem to work.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        var helper = document.createElement(\"div\");\n      } else {\n        var helper = qx.dom.Element.getHelperElement();\n      }\n\n      // Extract first element\n      helper.innerHTML = html;\n      this.useElement(helper.firstChild);\n\n      return this._domNode;\n    },\n\n    /**\n     * Uses an existing element instead of creating one. This may be interesting\n     * when the DOM element is directly needed to add content etc.\n     *\n     * @param elem {Element} Element to reuse\n     * @deprecated {6.1} see useNode\n     */\n    useElement(elem) {\n      this.useNode(elem);\n    },\n\n    /**\n     * Whether the element is focusable (or will be when created)\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isFocusable() {\n      var tabIndex = this.getAttribute(\"tabIndex\");\n      if (tabIndex >= 1) {\n        return true;\n      }\n\n      var focusable = qx.event.handler.Focus.FOCUSABLE_ELEMENTS;\n      if (tabIndex >= 0 && focusable[this._nodeName]) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Set whether the element is selectable. It uses the qooxdoo attribute\n     * qxSelectable with the values 'on' or 'off'.\n     * In webkit, a special css property will be used (-webkit-user-select).\n     *\n     * @param value {Boolean} True, if the element should be selectable.\n     */\n    setSelectable(value) {\n      this.setAttribute(\"qxSelectable\", value ? \"on\" : \"off\");\n      var userSelect = qx.core.Environment.get(\"css.userselect\");\n      if (userSelect) {\n        this.setStyle(\n          userSelect,\n          value ? \"text\" : qx.core.Environment.get(\"css.userselect.none\")\n        );\n      }\n    },\n\n    /**\n     * Whether the element is natively focusable (or will be when created)\n     *\n     * This ignores the configured tabIndex.\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isNativelyFocusable() {\n      return !!qx.event.handler.Focus.FOCUSABLE_ELEMENTS[this._nodeName];\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Fades in the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn(duration) {\n      var col = qxWeb(this._domNode);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n      // create the element right away\n      if (!this._domNode) {\n        this.flush();\n        col.push(this._domNode);\n      }\n      if (this._domNode) {\n        col.fadeIn(duration).once(\n          \"animationEnd\",\n          function () {\n            this.show();\n            qx.html.Element.flush();\n          },\n          this\n        );\n\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n    /**\n     * Fades out the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut(duration) {\n      var col = qxWeb(this._domNode);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n\n      if (this._domNode) {\n        col.fadeOut(duration).once(\n          \"animationEnd\",\n          function () {\n            this.hide();\n            qx.html.Element.flush();\n          },\n          this\n        );\n\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /*\n     * @Override\n     */\n    _applyVisible(value, oldValue) {\n      super._applyVisible(value, oldValue);\n      if (value) {\n        if (this._domNode) {\n          qx.html.Element._visibility[this.toHashCode()] = this;\n          qx.html.Element._scheduleFlush(\"element\");\n        }\n\n        // Must be sure that the element gets included into the DOM.\n        if (this._parent) {\n          this._parent._scheduleChildrenUpdate();\n        }\n      } else {\n        if (this._domNode) {\n          qx.html.Element._visibility[this.toHashCode()] = this;\n          qx.html.Element._scheduleFlush(\"element\");\n        }\n      }\n    },\n\n    /**\n     * Marks the element as visible which means that a previously applied\n     * CSS style of display=none gets removed and the element will inserted\n     * into the DOM, when this had not already happened before.\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    show() {\n      this.setVisible(true);\n      return this;\n    },\n\n    /**\n     * Marks the element as hidden which means it will kept in DOM (if it\n     * is already there, but configured hidden using a CSS style of display=none).\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    hide() {\n      this.setVisible(false);\n      return this;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX(elem, align, direct) {\n      var thisEl = this._domNode;\n      var childEl = elem.getDomElement();\n\n      if (\n        direct !== false &&\n        thisEl &&\n        thisEl.offsetWidth &&\n        childEl &&\n        childEl.offsetWidth\n      ) {\n        qx.bom.element.Scroll.intoViewX(childEl, thisEl, align);\n      } else {\n        this.__lazyScrollIntoViewX = {\n          element: elem,\n          align: align\n        };\n\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollX;\n    },\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY(elem, align, direct) {\n      var thisEl = this._domNode;\n      var childEl = elem.getDomElement();\n\n      if (\n        direct !== false &&\n        thisEl &&\n        thisEl.offsetWidth &&\n        childEl &&\n        childEl.offsetWidth\n      ) {\n        qx.bom.element.Scroll.intoViewY(childEl, thisEl, align);\n      } else {\n        this.__lazyScrollIntoViewY = {\n          element: elem,\n          align: align\n        };\n\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollY;\n    },\n\n    /**\n     * Scrolls the element to the given left position.\n     *\n     * @param x {Integer} Horizontal scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToX(x, lazy) {\n      var thisEl = this._domNode;\n      if (lazy !== true && thisEl && thisEl.offsetWidth) {\n        thisEl.scrollLeft = x;\n        delete this.__lazyScrollX;\n      } else {\n        this.__lazyScrollX = x;\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewX;\n    },\n\n    /**\n     * Get the horizontal scroll position.\n     *\n     * @return {Integer} Horizontal scroll position\n     */\n    getScrollX() {\n      var thisEl = this._domNode;\n      if (thisEl) {\n        return thisEl.scrollLeft;\n      }\n\n      return this.__lazyScrollX || 0;\n    },\n\n    /**\n     * Scrolls the element to the given top position.\n     *\n     * @param y {Integer} Vertical scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToY(y, lazy) {\n      var thisEl = this._domNode;\n      if (lazy !== true && thisEl && thisEl.offsetWidth) {\n        thisEl.scrollTop = y;\n        delete this.__lazyScrollY;\n      } else {\n        this.__lazyScrollY = y;\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewY;\n    },\n\n    /**\n     * Get the vertical scroll position.\n     *\n     * @return {Integer} Vertical scroll position\n     */\n    getScrollY() {\n      var thisEl = this._domNode;\n      if (thisEl) {\n        return thisEl.scrollTop;\n      }\n\n      return this.__lazyScrollY || 0;\n    },\n\n    /**\n     * Disables browser-native scrolling\n     */\n    disableScrolling() {\n      this.enableScrolling();\n      this.scrollToX(0);\n      this.scrollToY(0);\n      this.addListener(\"scroll\", this.__onScroll, this);\n    },\n\n    /**\n     * Re-enables browser-native scrolling\n     */\n    enableScrolling() {\n      this.removeListener(\"scroll\", this.__onScroll, this);\n    },\n\n    __inScroll: null,\n\n    /**\n     * Handler for the scroll-event\n     *\n     * @param e {qx.event.type.Native} scroll-event\n     */\n    __onScroll(e) {\n      if (!this.__inScroll) {\n        this.__inScroll = true;\n        this._domNode.scrollTop = 0;\n        this._domNode.scrollLeft = 0;\n        delete this.__inScroll;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /*\n     * Sets the text value of this element; it will delete children first, except\n     * for the first node which (if it is a Text node) will have it's value updated\n     *\n     * @param value {String} the text to set\n     */\n    setText(value) {\n      var self = this;\n      var children = this._children ? qx.lang.Array.clone(this._children) : [];\n      if (children[0] instanceof qx.html.Text) {\n        children[0].setText(value);\n        children.shift();\n        children.forEach(function (child) {\n          self.remove(child);\n        });\n      } else {\n        children.forEach(function (child) {\n          self.remove(child);\n        });\n        this.add(new qx.html.Text(value));\n      }\n    },\n\n    /**\n     * Returns the text value, accumulated from all child nodes\n     *\n     * @return {String} the text value\n     */\n    getText() {\n      var result = [];\n      if (this._children) {\n        this._children.forEach(function (child) {\n          result.push(child.getText());\n        });\n      }\n      return result.join(\"\");\n    },\n\n    /**\n     * Get the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {String|null}\n     */\n    getTextSelection() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.get(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the length of selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getLength(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the start of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionStart() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getStart(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the end of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionEnd() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getEnd(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Set the selection of the element with the given start and end value.\n     * If no end value is passed the selection will extend to the end.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     * @param start {Integer} start of the selection (zero based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection(start, end) {\n      var el = this._domNode;\n      if (el) {\n        qx.bom.Selection.set(el, start, end);\n        return;\n      }\n\n      // if element not created, save the selection for flushing\n      qx.html.Element.__selection[this.toHashCode()] = {\n        element: this,\n        start: start,\n        end: end\n      };\n\n      qx.html.Element._scheduleFlush(\"element\");\n    },\n\n    /**\n     * Clears the selection of the element.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     */\n    clearTextSelection() {\n      var el = this._domNode;\n      if (el) {\n        qx.bom.Selection.clear(el);\n      }\n      delete qx.html.Element.__selection[this.toHashCode()];\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS/ACTIVATE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Takes the action to process as argument and queues this action if the\n     * underlying DOM element is not yet created.\n     *\n     * Note that \"actions\" are functions in `qx.bom.Element` and only apply to\n     * environments with a user interface.  This will throw an error if the user\n     * interface is headless\n     *\n     * @param action {String} action to queue\n     * @param args {Array} optional list of arguments for the action\n     */\n    __performAction(action, args) {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        var actions = qx.html.Element._actions;\n\n        actions.push({\n          type: action,\n          element: this,\n          args: args || []\n        });\n\n        qx.html.Element._scheduleFlush(\"element\");\n      } else {\n        throw new Error(\n          \"Unexpected use of qx.html.Element.__performAction in headles environment\"\n        );\n      }\n    },\n\n    /**\n     * Focus this element.\n     *\n     * If the underlaying DOM element is not yet created, the\n     * focus is queued for processing after the element creation.\n     *\n     * Silently does nothing when in a headless environment\n     */\n    focus() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"focus\");\n      }\n    },\n\n    /**\n     * Mark this element to get blurred on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment\n     *\n     */\n    blur() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"blur\");\n      }\n    },\n\n    /**\n     * Mark this element to get activated on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment\n     *\n     */\n    activate() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"activate\");\n      }\n    },\n\n    /**\n     * Mark this element to get deactivated on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment\n     *\n     */\n    deactivate() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"deactivate\");\n      }\n    },\n\n    /**\n     * Captures all mouse events to this element\n     *\n     * Silently does nothing when in a headless environment\n     *\n     * @param containerCapture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture(containerCapture) {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"capture\", [containerCapture !== false]);\n      }\n    },\n\n    /**\n     * Releases this element from a previous {@link #capture} call\n     *\n     * Silently does nothing when in a headless environment\n     */\n    releaseCapture() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"releaseCapture\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyle(key, value, direct) {\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this.__styleValues[key] == value) {\n        return this;\n      }\n\n      this._applyStyle(key, value, this.__styleValues[key]);\n      if (value == null) {\n        delete this.__styleValues[key];\n      } else {\n        this.__styleValues[key] = value;\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this._domNode) {\n        // Omit queuing in direct mode\n        if (direct) {\n          qx.bom.element.Style.set(this._domNode, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        // Store job info\n        this.__styleJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n    /**\n     * Called by setStyle when a value of a style changes; this is intended to be\n     * overridden to allow the element to update properties etc according to the\n     * style\n     *\n     * @param key {String} the style value\n     * @param value {String?} the value to set\n     * @param oldValue {String?} The previous value (not from DOM)\n     */\n    _applyStyle(key, value, oldValue) {\n      // Nothing\n    },\n\n    /**\n     * Convenience method to modify a set of styles at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyles(map, direct) {\n      // inline calls to \"set\" because this method is very\n      // performance critical!\n\n      var Style = qx.bom.element.Style;\n\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this._domNode) {\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        for (var key in map) {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          this._applyStyle(key, value, this.__styleValues[key]);\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n\n          // Omit queuing in direct mode\n          if (direct) {\n            Style.set(this._domNode, key, value);\n            continue;\n          }\n\n          // Store job info\n          this.__styleJobs[key] = true;\n        }\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      } else {\n        for (var key in map) {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          this._applyStyle(key, value, this.__styleValues[key]);\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Removes the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeStyle(key, direct) {\n      this.setStyle(key, null, direct);\n      return this;\n    },\n\n    /**\n     * Get the value of the given style attribute.\n     *\n     * @param key {String} name of the style attribute\n     * @return {var} the value of the style attribute\n     */\n    getStyle(key) {\n      return this.__styleValues ? this.__styleValues[key] : null;\n    },\n\n    /**\n     * Returns a map of all styles. Do not modify the result map!\n     *\n     * @return {Map} All styles or <code>null</code> when none are configured.\n     */\n    getAllStyles() {\n      return this.__styleValues || null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CSS CLASS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    __breakClasses() {\n      var map = {};\n      (this.getAttribute(\"class\") || \"\").split(\" \").forEach(function (name) {\n        if (name) {\n          map[name.toLowerCase()] = name;\n        }\n      });\n      return map;\n    },\n\n    __combineClasses(map) {\n      var primaryClass = this.getCssClass();\n      var arr = [];\n      if (primaryClass) {\n        arr.push(primaryClass);\n        delete map[primaryClass.toLowerCase()];\n      }\n      qx.lang.Array.append(arr, Object.values(map));\n      return arr.length ? arr.join(\" \") : null;\n    },\n\n    /**\n     * Adds a css class to the element.\n     *\n     * @param name {String} Name of the CSS class.\n     * @return {Element} this, for chaining\n     */\n    addClass(name) {\n      var classes = this.__breakClasses();\n      var primaryClass = (this.getCssClass() || \"\").toLowerCase();\n      name.split(\" \").forEach(name => {\n        var nameLower = name.toLowerCase();\n        if (nameLower == primaryClass) {\n          this.setCssClass(null);\n        }\n\n        classes[nameLower] = name;\n      });\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n      return this;\n    },\n\n    /**\n     * Removes a CSS class from the current element.\n     *\n     * @param name {String} Name of the CSS class.\n     * @return {Element} this, for chaining\n     */\n    removeClass(name) {\n      var classes = this.__breakClasses();\n      var primaryClass = (this.getCssClass() || \"\").toLowerCase();\n      name.split(\" \").forEach(name => {\n        var nameLower = name.toLowerCase();\n        if (nameLower == primaryClass) {\n          this.setCssClass(null);\n        }\n\n        delete classes[nameLower];\n      });\n\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n      return this;\n    },\n\n    /**\n     * Removes all CSS classed from the current element.\n     */\n    removeAllClasses() {\n      this.setCssClass(null);\n      this.setAttribute(\"class\", \"\");\n    },\n\n    /**\n     * Apply method for cssClass\n     */\n    _applyCssClass(value, oldValue) {\n      var classes = this.__breakClasses();\n      if (oldValue) {\n        oldValue.split(\" \").forEach(name => delete classes[name.toLowerCase()]);\n      }\n      if (value) {\n        value.split(\" \").forEach(name => (classes[name.toLowerCase()] = name));\n      }\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SIZE AND POSITION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the size and position of this element; this is just a helper method that wraps\n     * the calls to qx.bom.*\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).\n     *\n     * @param mode {String} the type of size required, see above\n     * @return {Object} a map, containing:\n     *  left, right, top, bottom - document co-ords\n     *  content - Object, containing:\n     *    width, height: maximum permissible content size\n     */\n    getDimensions(mode) {\n      if (!this._domNode) {\n        return {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          width: 0,\n          height: 0,\n          content: {\n            width: 0,\n            height: 0\n          }\n        };\n      }\n      var loc = qx.bom.element.Location.get(this._domNode, mode);\n      loc.content = qx.bom.element.Dimension.getContentSize(this._domNode);\n      loc.width = loc.right - loc.left;\n      loc.height = loc.bottom - loc.top;\n      return loc;\n    },\n\n    /**\n     * Detects whether the DOM Node is visible\n     */\n    canBeSeen() {\n      if (this._domNode && this.isVisible()) {\n        var rect = this._domNode.getBoundingClientRect();\n        if (\n          rect.top > 0 ||\n          rect.left > 0 ||\n          rect.width > 0 ||\n          rect.height > 0\n        ) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ATTRIBUTE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttribute(key, value, direct) {\n      if (!this.__attribValues) {\n        this.__attribValues = {};\n      }\n\n      if (this.__attribValues[key] == value) {\n        return this;\n      }\n\n      if (value == null) {\n        delete this.__attribValues[key];\n      } else {\n        this.__attribValues[key] = value;\n      }\n\n      if (key == \"data-qx-object-id\") {\n        this.setQxObjectId(value);\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this._domNode) {\n        // Omit queuing in direct mode\n        if (direct) {\n          qx.bom.element.Attribute.set(this._domNode, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__attribJobs) {\n          this.__attribJobs = {};\n        }\n\n        // Store job info\n        this.__attribJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n    /**\n     * Convenience method to modify a set of attributes at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttributes(map, direct) {\n      for (var key in map) {\n        this.setAttribute(key, map[key], direct);\n      }\n\n      return this;\n    },\n\n    /**\n     * Removes the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeAttribute(key, direct) {\n      return this.setAttribute(key, null, direct);\n    },\n\n    /**\n     * Get the value of the given attribute.\n     *\n     * @param key {String} name of the attribute\n     * @return {var} the value of the attribute\n     */\n    getAttribute(key) {\n      return this.__attribValues ? this.__attribValues[key] : null;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DEFER\n   *****************************************************************************\n   */\n\n  defer(statics) {\n    statics.__deferredCall = new qx.util.DeferredCall(statics.flush, statics);\n    statics.__SELF_CLOSING_TAGS = {};\n    [\n      \"area\",\n      \"base\",\n      \"br\",\n      \"col\",\n      \"embed\",\n      \"hr\",\n      \"img\",\n      \"input\",\n      \"link\",\n      \"meta\",\n      \"param\",\n      \"source\",\n      \"track\",\n      \"wbr\"\n    ].forEach(function (tagName) {\n      statics.__SELF_CLOSING_TAGS[tagName] = true;\n    });\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct() {\n    var hash = this.toHashCode();\n    if (hash) {\n      delete qx.html.Element._modified[hash];\n      delete qx.html.Element._scroll[hash];\n    }\n    this.setRoot(false);\n\n    this.__attribValues =\n      this.__styleValues =\n      this.__attribJobs =\n      this.__styleJobs =\n      this.__lazyScrollIntoViewX =\n      this.__lazyScrollIntoViewY =\n        null;\n  }\n});\n"
  ],
  "mappings": "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"
}