{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__gatherDependency",
    "event",
    "type",
    "Data",
    "dispatch",
    "Direct",
    "Promise",
    "__checks",
    "Boolean",
    "String",
    "Number",
    "Integer",
    "PositiveNumber",
    "PositiveInteger",
    "Error",
    "RegExp",
    "Object",
    "Array",
    "Map",
    "Function",
    "Date",
    "Node",
    "Element",
    "Document",
    "Window",
    "Event",
    "Class",
    "Mixin",
    "Interface",
    "Theme",
    "Color",
    "Decorator",
    "Font",
    "__dereference",
    "$$inherit",
    "$$store",
    "runtime",
    "user",
    "theme",
    "inherit",
    "init",
    "useinit",
    "$$method",
    "get",
    "getAsync",
    "set",
    "setImpl",
    "setAsync",
    "reset",
    "refresh",
    "setRuntime",
    "resetRuntime",
    "setThemed",
    "resetThemed",
    "$$allowedKeys",
    "name",
    "dereference",
    "inheritable",
    "nullable",
    "themeable",
    "refine",
    "apply",
    "check",
    "transform",
    "async",
    "deferredInit",
    "validate",
    "isEqual",
    "$$allowedGroupKeys",
    "group",
    "mode",
    "$$inheritable",
    "__executeOptimizedRefresh",
    "clazz",
    "inheritables",
    "__getInheritablesOfClass",
    "length",
    "refresher",
    "__createRefresher",
    "prototype",
    "$$refreshInheritables",
    "properties",
    "$$properties",
    "push",
    "superclass",
    "code",
    "i",
    "l",
    "join",
    "attachRefreshInheritables",
    "core",
    "Property",
    "attachMethods",
    "config",
    "__attachGroupMethods",
    "__attachPropertyMethods",
    "upname",
    "firstUp",
    "members",
    "debug",
    "setter",
    "resetter",
    "styler",
    "unstyler",
    "argHandler",
    "shorthand",
    "a",
    "undefined",
    "__shouldBeDereferenced",
    "classname",
    "match",
    "allNames",
    "forEach",
    "conflictingClass",
    "tmp",
    "log",
    "Logger",
    "warn",
    "method",
    "store",
    "getName",
    "hasOwnProperty",
    "error",
    "$$install",
    "__installOptimizedGetter",
    "arguments",
    "setName",
    "__installOptimizedSetter",
    "executeOptimizedSetter",
    "value",
    "$$propertyMethod",
    "__errors",
    "obj",
    "id",
    "property",
    "variant",
    "constructor",
    "msg",
    "__unwrapFunctionFromCode",
    "instance",
    "args",
    "fn",
    "__installFunctionFromCode",
    "call",
    "ex",
    "setDisplayName",
    "executeOptimizedGetter",
    "__compileGetter",
    "__compileSetter",
    "lang",
    "incomingValue",
    "hasCallback",
    "__getStore",
    "__emitIsEqualFunction",
    "__emitSetterPreConditions",
    "__emitOldValue",
    "__emitIncomingValueTransformation",
    "__emitOldNewComparison",
    "__emitIncomingValueValidation",
    "__emitStoreValue",
    "__emitStoreComputedValue",
    "__emitStoreInheritedPropertyValue",
    "__emitNormalizeUndefinedValues",
    "__emitCallCallback",
    "_getChildren",
    "unshift",
    "resetValue",
    "Environment",
    "select",
    "isDefined"
  ],
  "sources": [
    "C:/Users/dadovaz/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/core/Property.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Internal class for handling of dynamic properties. Should only be used\n * through the methods provided by {@link qx.Class}.\n *\n * For a complete documentation of properties take a look at\n * http://qooxdoo.org/docs/#core/property_features.md.\n *\n *\n * *Normal properties*\n *\n * The <code>properties</code> key in the class definition map of {@link qx.Class#define}\n * is used to generate the properties.\n *\n * Valid keys of a property definition are:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>check</th><td>Array, String, Function</td><td>\n *     The check is used to check the type the incoming value of a property. This will only\n *     be executed in the source version. The build version will not contain the checks.\n *     The check can be:\n *     <ul>\n *       <li>a custom check function. The function takes the incoming value as a parameter and must\n *           return a boolean value to indicate whether the values is valid.\n *       </li>\n *       <li>inline check code as a string e.g. <code>\"value &gt; 0 && value &lt; 100\"</code></li>\n *       <li>a class name e.g. <code>qx.ui.form.Button</code></li>\n *       <li>a name of an interface the value must implement</li>\n *       <li>an array of all valid values</li>\n *       <li>one of the predefined checks: Boolean, String, Number, Integer, Float, Double,\n *           Object, Array, Map, Class, Mixin, Interface, Theme, Error, RegExp, Function,\n *           Date, Node, Element, Document, Window, Event\n *       </li>\n *     <ul>\n *   </td></tr>\n *   <tr><th>init</th><td>var</td><td>\n *     Sets the default/initial value of the property. If no property value is set or the property\n *     gets reset, the getter will return the <code>init</code> value.\n *   </td></tr>\n *   <tr><th>apply</th><td>String</td><td>\n *     On change of the property value the method of the specified name will be called. The signature of\n *     the method is <code>function(newValue, oldValue, propertyName)</code>. It is conventional to name\n *     the callback <code>_apply</code> + <i>PropertyName</i>, with the property name camel-cased (e.g.\n *     \"<i>_applyFooBar</i>\" for a property <i>fooBar</i>).\n *   </td></tr>\n *   <tr><th>event</th><td>String</td><td>\n *     On change of the property value an event with the given name will be dispatched. The event type is\n *     {@link qx.event.type.Data}.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n *   <tr><th>inheritable</th><td>Boolean</td><td>\n *     Whether the property value should be inheritable. If the property does not have an user defined or an\n *     init value, the property will try to get the value from the parent of the current object.\n *   </td></tr>\n *   <tr><th>nullable</th><td>Boolean</td><td>\n *     Whether <code>null</code> is an allowed value of the property. This is complementary to the check\n *     defined using the <code>check</code> key.\n *   </td></tr>\n *   <tr><th>refine</th><td>Boolean</td><td>\n *     Whether the property definition is a refinement of a property in one of the super classes of the class.\n *     Only the <code>init</code> value can be changed using refine.\n *   </td></tr>\n *   <tr><th>transform</th><td>String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value, oldValue)</code>.\n *     The parameter <code>value</code> is the value passed to the setter, the\n *     parameter <code>oldValue</code> is the current value, or undefined if no value\n *     has been set previously.\n *     The function must return the modified or unmodified value.\n *     Transformation occurs before the check function, so both may be\n *     specified if desired.  Alternatively, the transform function may throw\n *     an error if the value passed to it is invalid.\n *   </td></tr>\n *   <tr><th>validate</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value)</code>.\n *     The parameter <code>value</code> is the value passed to the setter.\n *     If the validation fails, an <code>qx.core.ValidationError</code> should\n *     be thrown by the validation function. Otherwise, just do nothing in the\n *     function.<br>\n *     If a string is given, the string should hold a reference to a member\n *     method.<br>\n *     <code>\"<i>methodname</i>\"</code> for example\n *     <code>\"__validateProperty\"</code><br>\n *     There are some default validators in the {@link qx.util.Validate} class.\n *     See this documentation for usage examples.\n *   </td></tr>\n *   <tr><th>dereference</th><td>Boolean</td><td>\n *     By default, the references to the values (current, init, ...) of the\n *     property will be stored as references on the object. When disposing\n *     this object, the references will not be deleted. Setting the\n *     dereference key to true tells the property system to delete all\n *     connections made by this property on dispose. This can be necessary for\n *     disconnecting DOM objects to allow the garbage collector to work\n *     properly.\n *   </td></tr>\n *   <tr><th>deferredInit</th><td>Boolean</td><td>\n *     Allow for a deferred initialization for reference types. Defaults to false.\n *   </td></tr>\n *   <tr><th>isEqual</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called to test if two values are equal. These checks for equality are\n *     performed by the Property-System to decide whether further actions (like\n *     e.g. calling applier methods or firing of events) are needed.\n *     The signature of the method is <code>function(valueA, valueB)</code>.\n *     <br/>\n *     The <i>isEqual</i>-value can be:\n *     <ul>\n *       <li>a custom check function.\n *           The function takes two values as parameter and must return a\n *           boolean value to indicate whether the values are considered\n *           equal e.g. <code>function (a, b) { return Object.is(a, b); }</code>.</li>\n *       <li>inline check code as a string\n *           which will be invoked with two parameters <code>a</code> and\n *           <code>b</code> and results in a boolean value to indicate whether\n *           the values are equal e.g. <code>\"a.length() == b.length()\"</code>.</li>\n *       <li>reference to a member method as string\n *           <code>\"<i>methodname</i>\"</code> which will be invoked with two\n *           parameters and returns a boolean value indicating whether the two\n *           values are considered equal for example <code>\"__areTheSame\"</code>.</li>\n *     </ul>\n *     The default implementation (if this key is undefined) will check the\n *     equality by using the <i>identity</i> operator (===) as if defined like\n *     <code>\"a===b\"</code>.\n *   </td></tr>\n * </table>\n *\n * *Property groups*\n *\n * Property groups are defined in a similar way but support a different set of keys:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>group</th><td>String[]</td><td>\n *     A list of property names which should be set using the property group.\n *   </td></tr>\n *   <tr><th>mode</th><td>String</td><td>\n *     If mode is set to <code>\"shorthand\"</code>, the properties can be set using a CSS like shorthand mode.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n * </table>\n *\n * @internal\n * @ignore(qx.Interface)\n */\nqx.Bootstrap.define(\"qx.core.Property\", {\n  statics: {\n    /**\n     * This is a method which does nothing than gathering dependencies for the\n     * module system. Calling this method is useless because it does nothing.\n     */\n    __gatherDependency() {\n      if (qx.core.Environment.get(\"module.events\")) {\n        qx.event.type.Data;\n        qx.event.dispatch.Direct;\n      }\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        qx.Promise;\n      }\n    },\n\n    /**\n     * Built-in checks\n     * The keys could be used in the check of the properties\n     */\n    __checks: {\n      Boolean: \"qx.core.Assert.assertBoolean(value, msg) || true\",\n      String: \"qx.core.Assert.assertString(value, msg) || true\",\n\n      Number: \"qx.core.Assert.assertNumber(value, msg) || true\",\n      Integer: \"qx.core.Assert.assertInteger(value, msg) || true\",\n      PositiveNumber: \"qx.core.Assert.assertPositiveNumber(value, msg) || true\",\n      PositiveInteger:\n        \"qx.core.Assert.assertPositiveInteger(value, msg) || true\",\n\n      Error: \"qx.core.Assert.assertInstance(value, Error, msg) || true\",\n      RegExp: \"qx.core.Assert.assertInstance(value, RegExp, msg) || true\",\n\n      Object: \"qx.core.Assert.assertObject(value, msg) || true\",\n      Array: \"qx.core.Assert.assertArray(value, msg) || true\",\n      Map: \"qx.core.Assert.assertMap(value, msg) || true\",\n\n      Function: \"qx.core.Assert.assertFunction(value, msg) || true\",\n      Date: \"qx.core.Assert.assertInstance(value, Date, msg) || true\",\n      Node: \"value !== null && value.nodeType !== undefined\",\n      Element: \"value !== null && value.nodeType === 1 && value.attributes\",\n      Document:\n        \"value !== null && value.nodeType === 9 && value.documentElement\",\n      Window: \"value !== null && value.document\",\n      Event: \"value !== null && value.type !== undefined\",\n\n      Class: 'value !== null && value.$$type === \"Class\"',\n      Mixin: 'value !== null && value.$$type === \"Mixin\"',\n      Interface: 'value !== null && value.$$type === \"Interface\"',\n      Theme: 'value !== null && value.$$type === \"Theme\"',\n\n      Color:\n        \"qx.lang.Type.isString(value) && qx.util.ColorUtil.isValidPropertyValue(value)\",\n      Decorator:\n        \"value !== null && qx.theme.manager.Decoration.getInstance().isValidPropertyValue(value)\",\n      Font: \"value !== null && qx.theme.manager.Font.getInstance().isDynamic(value)\"\n    },\n\n    /**\n     * Contains types from {@link #__checks} list which need to be dereferenced\n     */\n    __dereference: {\n      Node: true,\n      Element: true,\n      Document: true,\n      Window: true,\n      Event: true\n    },\n\n    /**\n     * Inherit value, used to override defaults etc. to force inheritance\n     * even if property value is not undefined (through multi-values)\n     *\n     * @internal\n     */\n    $$inherit: \"inherit\",\n\n    /**\n     * Caching field names for each property created\n     *\n     * @internal\n     */\n    $$store: {\n      runtime: {},\n      user: {},\n      theme: {},\n      inherit: {},\n      init: {},\n      useinit: {}\n    },\n\n    /**\n     * Caching function names for each property created\n     *\n     * @internal\n     */\n    $$method: {\n      get: {},\n      getAsync: {},\n      set: {},\n      setImpl: {},\n      setAsync: {},\n      reset: {},\n      init: {},\n      refresh: {},\n      setRuntime: {},\n      resetRuntime: {},\n      setThemed: {},\n      resetThemed: {}\n    },\n\n    /**\n     * Supported keys for property definitions\n     *\n     * @internal\n     */\n    $$allowedKeys: {\n      \"@\": \"object\", // Anything\n      name: \"string\", // String\n      dereference: \"boolean\", // Boolean\n      inheritable: \"boolean\", // Boolean\n      nullable: \"boolean\", // Boolean\n      themeable: \"boolean\", // Boolean\n      refine: \"boolean\", // Boolean\n      init: null, // var\n      apply: \"string\", // String\n      event: \"string\", // String\n      check: null, // Array, String, Function\n      transform: \"string\", // String\n      async: \"boolean\", // Boolean\n      deferredInit: \"boolean\", // Boolean\n      validate: null, // String, Function\n      isEqual: null // String, Function\n    },\n\n    /**\n     * Supported keys for property group definitions\n     *\n     * @internal\n     */\n    $$allowedGroupKeys: {\n      \"@\": \"object\", // Anything\n      name: \"string\", // String\n      group: \"object\", // Array\n      mode: \"string\", // String\n      themeable: \"boolean\" // Boolean\n    },\n\n    /** Contains names of inheritable properties, filled by {@link qx.Class.define} */\n    $$inheritable: {},\n\n    /**\n     * Generate optimized refresh method and  attach it to the class' prototype\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    __executeOptimizedRefresh(clazz) {\n      var inheritables = this.__getInheritablesOfClass(clazz);\n\n      if (!inheritables.length) {\n        var refresher = function () {};\n      } else {\n        refresher = this.__createRefresher(inheritables);\n      }\n\n      clazz.prototype.$$refreshInheritables = refresher;\n    },\n\n    /**\n     * Get the names of all inheritable properties of the given class\n     *\n     * @param clazz {Class} class to get the inheritable properties of\n     * @return {String[]} List of property names\n     */\n    __getInheritablesOfClass(clazz) {\n      var inheritable = [];\n\n      while (clazz) {\n        var properties = clazz.$$properties;\n\n        if (properties) {\n          for (var name in this.$$inheritable) {\n            // Whether the property is available in this class\n            // and whether it is inheritable in this class as well\n            if (properties[name] && properties[name].inheritable) {\n              inheritable.push(name);\n            }\n          }\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return inheritable;\n    },\n\n    /**\n     * Assemble the refresher code and return the generated function\n     *\n     * @param inheritables {String[]} list of inheritable properties\n     * @return {Function} refresher function\n     */\n    __createRefresher(inheritables) {\n      var inherit = this.$$store.inherit;\n      var init = this.$$store.init;\n      var refresh = this.$$method.refresh;\n\n      var code = [\n        \"var parent = this.getLayoutParent();\",\n        \"if (!parent) return;\"\n      ];\n\n      for (var i = 0, l = inheritables.length; i < l; i++) {\n        var name = inheritables[i];\n        code.push(\n          \"var value = parent.\",\n          inherit[name],\n          \";\",\n          \"if (value===undefined) value = parent.\",\n          init[name],\n          \";\",\n          \"this.\",\n          refresh[name],\n          \"(value);\"\n        );\n      }\n\n      return new Function(code.join(\"\"));\n    },\n\n    /**\n     * Attach $$refreshInheritables method stub to the given class\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    attachRefreshInheritables(clazz) {\n      clazz.prototype.$$refreshInheritables = function () {\n        qx.core.Property.__executeOptimizedRefresh(clazz);\n        return this.$$refreshInheritables();\n      };\n    },\n\n    /**\n     * Attach one property to class\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param name {String} Name of property\n     * @param config {Map} Configuration map of property\n     */\n    attachMethods(clazz, name, config) {\n      // Divide groups from \"normal\" properties\n      config.group\n        ? this.__attachGroupMethods(clazz, config, name)\n        : this.__attachPropertyMethods(clazz, config, name);\n    },\n\n    /**\n     * Attach group methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachGroupMethods(clazz, config, name) {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n      var themeable = config.themeable === true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property group: \" + name);\n        }\n      }\n\n      var setter = [];\n      var resetter = [];\n\n      if (themeable) {\n        var styler = [];\n        var unstyler = [];\n      }\n\n      var argHandler =\n        \"var a=arguments[0] instanceof Array?arguments[0]:arguments;\";\n\n      setter.push(argHandler);\n\n      if (themeable) {\n        styler.push(argHandler);\n      }\n\n      if (config.mode == \"shorthand\") {\n        var shorthand =\n          \"a=qx.lang.Array.fromShortHand(qx.lang.Array.fromArguments(a));\";\n        setter.push(shorthand);\n\n        if (themeable) {\n          styler.push(shorthand);\n        }\n      }\n\n      for (var i = 0, a = config.group, l = a.length; i < l; i++) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (!this.$$method.set[a[i]] || !this.$$method.reset[a[i]]) {\n            throw new Error(\n              \"Cannot create property group '\" +\n                name +\n                \"' including non-existing property '\" +\n                a[i] +\n                \"'!\"\n            );\n          }\n        }\n\n        setter.push(\"this.\", this.$$method.set[a[i]], \"(a[\", i, \"]);\");\n        resetter.push(\"this.\", this.$$method.reset[a[i]], \"();\");\n\n        if (themeable) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (!this.$$method.setThemed[a[i]]) {\n              throw new Error(\n                \"Cannot add the non themable property '\" +\n                  a[i] +\n                  \"' to the themable property group '\" +\n                  name +\n                  \"'\"\n              );\n            }\n          }\n\n          styler.push(\"this.\", this.$$method.setThemed[a[i]], \"(a[\", i, \"]);\");\n          unstyler.push(\"this.\", this.$$method.resetThemed[a[i]], \"();\");\n        }\n      }\n\n      // Attach setter\n      this.$$method.set[name] = \"set\" + upname;\n      members[this.$$method.set[name]] = new Function(setter.join(\"\"));\n\n      // Attach resetter\n      this.$$method.reset[name] = \"reset\" + upname;\n      members[this.$$method.reset[name]] = new Function(resetter.join(\"\"));\n\n      if (themeable) {\n        // Attach styler\n        this.$$method.setThemed[name] = \"setThemed\" + upname;\n        members[this.$$method.setThemed[name]] = new Function(styler.join(\"\"));\n\n        // Attach unstyler\n        this.$$method.resetThemed[name] = \"resetThemed\" + upname;\n        members[this.$$method.resetThemed[name]] = new Function(\n          unstyler.join(\"\")\n        );\n      }\n    },\n\n    /**\n     * Attach property methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachPropertyMethods(clazz, config, name) {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property wrappers: \" + name);\n        }\n      }\n\n      // Fill dispose value\n      if (\n        config.dereference === undefined &&\n        typeof config.check === \"string\"\n      ) {\n        config.dereference = this.__shouldBeDereferenced(config.check);\n      }\n\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        if (config.async) {\n          this.warn(\n            \"Asynchronous property \" +\n              clazz.classname +\n              \".\" +\n              name +\n              \" is switched to synchronous because qx.promise==false\"\n          );\n\n          config.async = false;\n        }\n        if (config.check == \"qx.Promise\") {\n          this.error(\n            \"Cannot implement check for property \" +\n              clazz.classname +\n              \".\" +\n              name +\n              \" because qx.promise==false\"\n          );\n\n          delete config.check;\n        }\n      }\n\n      // Check for method name conflicts\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // Exclude qx.data.model.* because that's from marshalling and will cause conflicts to be reported\n        if (clazz.classname && !clazz.classname.match(/^qx.data.model/)) {\n          var allNames = [\n            \"get\" + upname,\n            \"set\" + upname,\n            \"reset\" + upname,\n            \"setRuntime\" + upname,\n            \"resetRuntime\" + upname\n          ];\n\n          if (config.async) {\n            allNames.push(\"get\" + upname + \"Async\");\n            allNames.push(\"set\" + upname + \"Async\");\n          }\n          if (\n            config.inheritable ||\n            config.apply ||\n            config.event ||\n            config.deferredInit\n          ) {\n            allNames.push(\"init\" + upname);\n          }\n          if (config.inheritable) {\n            allNames.push(\"refresh\" + upname);\n          }\n          if (config.themeable) {\n            allNames.push(\"getThemed\" + upname);\n            allNames.push(\"setThemed\" + upname);\n            allNames.push(\"resetThemed\" + upname);\n          }\n          if (config.check === \"Boolean\") {\n            allNames.push(\"is\" + upname);\n            allNames.push(\"toggle\" + upname);\n          }\n          allNames.forEach(function (name) {\n            if (clazz.superclass.prototype[name] !== undefined) {\n              var conflictingClass = null;\n              for (\n                var tmp = clazz.superclass;\n                tmp && tmp != qx.core.Object;\n                tmp = tmp.superclass\n              ) {\n                if (tmp.superclass.prototype[name] === undefined) {\n                  conflictingClass = tmp;\n                  break;\n                }\n              }\n              if (conflictingClass) {\n                qx.log.Logger.warn(\n                  \"Conflicting property method \" +\n                    clazz.classname +\n                    \".\" +\n                    name +\n                    \" with \" +\n                    conflictingClass.classname\n                );\n              }\n            }\n          });\n        }\n      }\n\n      var method = this.$$method;\n      var store = this.$$store;\n\n      store.runtime[name] = \"$$runtime_\" + name;\n      store.user[name] = \"$$user_\" + name;\n      store.theme[name] = \"$$theme_\" + name;\n      store.init[name] = \"$$init_\" + name;\n      store.inherit[name] = \"$$inherit_\" + name;\n      store.useinit[name] = \"$$useinit_\" + name;\n\n      var getName = (method.get[name] = \"get\" + upname);\n      members[method.get[name]] = new Function(\n        \"this.\" +\n          getName +\n          \".$$install && this.\" +\n          getName +\n          \".$$install();\" +\n          \"return this.\" +\n          getName +\n          \".apply(this, arguments);\"\n      );\n\n      if (config.async) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (members.hasOwnProperty(getName + \"Async\")) {\n            this.error(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is replacing \" +\n                getName +\n                \"Async() method in same class\"\n            );\n          } else if (members[getName + \"Async\"] !== undefined) {\n            this.warn(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is overriding \" +\n                getName +\n                \"Async() method\"\n            );\n          }\n        }\n        method.getAsync[name] = getName + \"Async\";\n        members[method.getAsync[name]] = new Function(\n          \"this.\" +\n            getName +\n            \".$$install && this.\" +\n            getName +\n            \".$$install.call(this);\" +\n            \"return this.\" +\n            getName +\n            \"Async.apply(this, arguments);\"\n        );\n      }\n      members[method.get[name]].$$install = function () {\n        qx.core.Property.__installOptimizedGetter(\n          clazz,\n          name,\n          \"get\",\n          arguments\n        );\n\n        if (config.async) {\n          qx.core.Property.__installOptimizedGetter(\n            clazz,\n            name,\n            \"getAsync\",\n            arguments\n          );\n        }\n      };\n\n      var setName = (method.set[name] = \"set\" + upname);\n      members[setName] = new Function(\n        \"this.\" +\n          setName +\n          \".$$install && this.\" +\n          setName +\n          \".$$install.call(this);\" +\n          \"return this.\" +\n          setName +\n          \".apply(this, arguments);\"\n      );\n\n      method.setAsync[name] = \"set\" + upname + \"Async\";\n      if (config.async) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (members.hasOwnProperty(setName + \"Async\")) {\n            this.error(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is replacing \" +\n                setName +\n                \"Async() method in same class\"\n            );\n          } else if (members[setName + \"Async\"] !== undefined) {\n            this.warn(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is overriding \" +\n                setName +\n                \"Async() method\"\n            );\n          }\n        }\n        members[setName + \"Async\"] = new Function(\n          \"this.\" +\n            setName +\n            \".$$install && this.\" +\n            setName +\n            \".$$install.call(this);\" +\n            \"return this.\" +\n            setName +\n            \"Async.apply(this, arguments);\"\n        );\n      }\n      method.setImpl[name] = \"$$set\" + upname + \"Impl\";\n      members[setName].$$install = function () {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"set\");\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"setImpl\");\n        if (config.async) {\n          qx.core.Property.__installOptimizedSetter(clazz, name, \"setAsync\");\n        }\n      };\n\n      method.reset[name] = \"reset\" + upname;\n      members[method.reset[name]] = function () {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"reset\"\n        );\n      };\n      members[method.reset[name]].$$install = function () {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"reset\");\n      };\n\n      if (\n        config.inheritable ||\n        config.apply ||\n        config.event ||\n        config.deferredInit\n      ) {\n        method.init[name] = \"init\" + upname;\n        members[method.init[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"init\",\n            arguments\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.init[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.inheritable) {\n        method.refresh[name] = \"refresh\" + upname;\n        members[method.refresh[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"refresh\",\n            arguments\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.refresh[name]].$$propertyMethod = true;\n        }\n      }\n\n      method.setRuntime[name] = \"setRuntime\" + upname;\n      members[method.setRuntime[name]] = function (value) {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"setRuntime\",\n          arguments\n        );\n      };\n\n      method.resetRuntime[name] = \"resetRuntime\" + upname;\n      members[method.resetRuntime[name]] = function () {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"resetRuntime\"\n        );\n      };\n\n      if (config.themeable) {\n        method.setThemed[name] = \"setThemed\" + upname;\n        members[method.setThemed[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"setThemed\",\n            arguments\n          );\n        };\n\n        method.resetThemed[name] = \"resetThemed\" + upname;\n        members[method.resetThemed[name]] = function () {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"resetThemed\"\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.setThemed[name]].$$propertyMethod = true;\n          members[method.resetThemed[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.check === \"Boolean\") {\n        members[\"toggle\" + upname] = new Function(\n          \"return this.\" +\n            method.set[name] +\n            \"(!this.\" +\n            method.get[name] +\n            \"())\"\n        );\n\n        members[\"is\" + upname] = new Function(\n          \"return this.\" + method.get[name] + \"()\"\n        );\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[\"toggle\" + upname].$$propertyMethod = true;\n          members[\"is\" + upname].$$propertyMethod = true;\n        }\n      }\n\n      // attach a flag to make generated property methods\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        members[method.get[name]].$$propertyMethod = true;\n        members[method.set[name]].$$propertyMethod = true;\n        members[method.reset[name]].$$propertyMethod = true;\n        members[method.setRuntime[name]].$$propertyMethod = true;\n        members[method.resetRuntime[name]].$$propertyMethod = true;\n      }\n    },\n\n    /**\n     * Returns if the reference for the given property check should be removed\n     * on dispose.\n     *\n     * @param check {var} The check of the property definition.\n     * @return {Boolean} If the dereference key should be set.\n     */\n    __shouldBeDereferenced(check) {\n      return !!this.__dereference[check];\n    },\n\n    /** @type {Map} Internal data field for error messages used by {@link #error} */\n    __errors: {\n      0: \"Could not change or apply init value after constructing phase!\",\n      1: \"Requires exactly one argument!\",\n      2: \"Undefined value is not allowed!\",\n      3: \"Does not allow any arguments!\",\n      4: \"Null value is not allowed!\",\n      5: \"Is invalid!\"\n    },\n\n    /**\n     * Error method used by the property system to report errors.\n     *\n     * @param obj {qx.core.Object} Any qooxdoo object\n     * @param id {Integer} Numeric error identifier\n     * @param property {String} Name of the property\n     * @param variant {String} Name of the method variant e.g. \"set\", \"reset\", ...\n     * @param value {var} Incoming value\n     */\n    error(obj, id, property, variant, value) {\n      var classname = obj.constructor.classname;\n      var msg =\n        \"Error in property \" +\n        property +\n        \" of class \" +\n        classname +\n        \" in method \" +\n        this.$$method[variant][property] +\n        \" with incoming value '\" +\n        value +\n        \"': \";\n\n      throw new Error(msg + (this.__errors[id] || \"Unknown reason: \" + id));\n    },\n\n    /**\n     * Compiles a string builder object to a function, executes the function and\n     * returns the return value.\n     *\n     * @param instance {Object} Instance which have called the original method\n     * @param members {Object} Prototype members map where the new function should be stored\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __unwrapFunctionFromCode(instance, members, name, variant, code, args) {\n      var fn = this.__installFunctionFromCode(\n        instance.constructor,\n        name,\n        variant,\n        code,\n        args\n      );\n\n      // Executing new function\n      if (args === undefined) {\n        return fn.call(instance);\n      } else if (qx.core.Environment.get(\"qx.debug\")) {\n        return fn.apply(instance, args);\n      } else {\n        return fn.call(instance, args[0]);\n      }\n    },\n\n    /**\n     * Takes a string builder object, converts it into a function, and installs it as\n     * a property accessor\n     *\n     * @param clazz {Class} Class to install the method into\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __installFunctionFromCode(clazz, name, variant, code, args) {\n      var store = this.$$method[variant][name];\n\n      // Output generate code\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\n            \"Code[\" + this.$$method[variant][name] + \"]: \" + code.join(\"\")\n          );\n        }\n\n        // Overriding temporary wrapper\n        try {\n          clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\n        } catch (ex) {\n          throw new Error(\n            \"Malformed generated code to unwrap method: \" +\n              this.$$method[variant][name] +\n              \"\\n\" +\n              code.join(\"\")\n          );\n        }\n      } else {\n        clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\n      }\n\n      // Enable profiling code\n      if (qx.core.Environment.get(\"qx.aspects\")) {\n        clazz.prototype[store] = qx.core.Aspect.wrap(\n          clazz.classname + \".\" + store,\n          clazz.prototype[store],\n          \"property\"\n        );\n      }\n\n      qx.Bootstrap.setDisplayName(\n        clazz.prototype[store],\n        clazz.classname + \".prototype\",\n        store\n      );\n\n      return clazz.prototype[store];\n    },\n\n    /**\n     * Generates the optimized getter, installs it into the class prototype, and executes it\n     * Supported variants: get\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedGetter(instance, clazz, name, variant) {\n      var code = this.__compileGetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(\n        instance,\n        members,\n        name,\n        variant,\n        code\n      );\n    },\n\n    /**\n     * Installs a getter into the class prototype, without executing it\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __installOptimizedGetter(clazz, name, variant) {\n      var code = this.__compileGetter(clazz, name, variant);\n      this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n    /**\n     * Compiles a getter into a string builder array\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileGetter(clazz, name, variant) {\n      var config = clazz.$$properties[name];\n      var code = [];\n      var store = this.$$store;\n\n      if (variant == \"getAsync\") {\n        code.push(\n          \"return qx.Promise.resolve(this.\" + this.$$method.get[name] + \"());\"\n        );\n\n        return code;\n      }\n\n      code.push(\"if(this.\", store.runtime[name], \"!==undefined)\");\n      code.push(\"return this.\", store.runtime[name], \";\");\n\n      if (config.inheritable) {\n        code.push(\"else if(this.\", store.inherit[name], \"!==undefined)\");\n        code.push(\"return this.\", store.inherit[name], \";\");\n        code.push(\"else \");\n      }\n\n      code.push(\"if(this.\", store.user[name], \"!==undefined)\");\n      code.push(\"return this.\", store.user[name], \";\");\n\n      if (config.themeable) {\n        code.push(\"else if(this.\", store.theme[name], \"!==undefined)\");\n        code.push(\"return this.\", store.theme[name], \";\");\n      }\n\n      if (config.deferredInit && config.init === undefined) {\n        code.push(\"else if(this.\", store.init[name], \"!==undefined)\");\n        code.push(\"return this.\", store.init[name], \";\");\n      }\n\n      code.push(\"else \");\n\n      if (config.init !== undefined) {\n        if (config.inheritable) {\n          code.push(\"var init=this.\", store.init[name], \";\");\n\n          if (config.nullable) {\n            code.push(\"if(init==qx.core.Property.$$inherit)init=null;\");\n          }\n\n          code.push(\"return init;\");\n        } else {\n          code.push(\"return this.\", store.init[name], \";\");\n        }\n      } else if (config.inheritable || config.nullable) {\n        code.push(\"return null;\");\n      } else {\n        code.push(\n          'throw new Error(\"Property ',\n          name,\n          \" of an instance of \",\n          clazz.classname,\n          ' is not (yet) ready!\");'\n        );\n      }\n\n      return code;\n    },\n\n    /**\n     * Generates the optimized setter\n     * Supported variants: set, reset, init, refresh, style, unstyle\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedSetter(instance, clazz, name, variant, args) {\n      var code = this.__compileSetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(\n        instance,\n        members,\n        name,\n        variant,\n        code,\n        args\n      );\n    },\n\n    /**\n     * Installs a setter into the class prototype, without executing it\n     * Supported variants: set\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Return value of the generated function\n     */\n    __installOptimizedSetter(clazz, name, variant) {\n      var code = this.__compileSetter(clazz, name, variant);\n      return this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n    /**\n     * Compiles a setter into a string builder array\n     * Supported variants: set, setThemed, setRuntime, init\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileSetter(clazz, name, variant) {\n      var config = clazz.$$properties[name];\n      var members = clazz.prototype;\n      var code = [];\n\n      var upname = qx.lang.String.firstUp(name);\n      if (variant == \"setAsync\") {\n        code.push(\n          \"return qx.Promise.resolve(this.$$set\" +\n            upname +\n            \"Impl.apply(this, arguments));\"\n        );\n\n        return code;\n      } else if (variant == \"set\") {\n        code.push(\n          \"this.$$set\" + upname + \"Impl.apply(this, arguments);\",\n          \"return value;\"\n        );\n\n        return code;\n      }\n\n      var incomingValue =\n        variant === \"setImpl\" ||\n        variant === \"setThemed\" ||\n        variant === \"setRuntime\" ||\n        (variant === \"init\" && config.init === undefined);\n      var hasCallback = config.apply || config.event || config.inheritable;\n\n      var store = this.__getStore(variant, name);\n\n      this.__emitIsEqualFunction(code, clazz, config, name);\n\n      this.__emitSetterPreConditions(\n        code,\n        config,\n        name,\n        variant,\n        incomingValue\n      );\n\n      if (incomingValue || hasCallback) {\n        this.__emitOldValue(code, config, name);\n      }\n\n      if (incomingValue) {\n        this.__emitIncomingValueTransformation(code, clazz, config, name);\n      }\n\n      if (hasCallback) {\n        this.__emitOldNewComparison(code, incomingValue, store, variant);\n      }\n\n      if (config.inheritable) {\n        code.push(\"var inherit=prop.$$inherit;\");\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (incomingValue) {\n          this.__emitIncomingValueValidation(\n            code,\n            config,\n            clazz,\n            name,\n            variant\n          );\n        }\n      }\n\n      if (!hasCallback) {\n        this.__emitStoreValue(code, name, variant, incomingValue);\n      } else {\n        this.__emitStoreComputedValue(\n          code,\n          config,\n          name,\n          variant,\n          incomingValue\n        );\n      }\n\n      if (config.inheritable) {\n        this.__emitStoreInheritedPropertyValue(code, config, name, variant);\n      } else if (hasCallback) {\n        this.__emitNormalizeUndefinedValues(code, config, name, variant);\n      }\n\n      if (hasCallback) {\n        // Emit callback and event firing; Refreshing children (5th parameter) requires the parent/children interface\n        this.__emitCallCallback(\n          code,\n          config,\n          name,\n          variant,\n          !!(config.inheritable && members._getChildren)\n        );\n      }\n\n      // Return value\n      if (incomingValue) {\n        code.unshift(\"function set(value){\");\n        code.push(\"}\");\n        if (\n          qx.core.Environment.get(\"qx.promise\") &&\n          (!config.check || config.check != \"qx.Promise\")\n        ) {\n          code.push(\n            \"var promise;\",\n            \"if (qx.Promise.isPromise(value)) \",\n            \"promise = value.then(set.bind(this));\",\n            \"else \",\n            \"promise = set.apply(this, arguments);\"\n          );\n\n          if (variant == \"setImpl\") {\n            code.push(\"return promise;\");\n          } else {\n            code.push(\"return value;\");\n          }\n        } else {\n          code.push(\"set.apply(this, arguments);\", \"return value;\");\n        }\n      }\n\n      return code;\n    },\n\n    /**\n     * Get the object to store the value for the given variant\n     *\n     * @param variant {String} Method variant.\n     * @param name {String} name of the property\n     *\n     * @return {Object} the value store\n     */\n    __getStore(variant, name) {\n      if (variant === \"setRuntime\" || variant === \"resetRuntime\") {\n        var store = this.$$store.runtime[name];\n      } else if (variant === \"setThemed\" || variant === \"resetThemed\") {\n        store = this.$$store.theme[name];\n      } else if (variant === \"init\") {\n        store = this.$$store.init[name];\n      } else {\n        store = this.$$store.user[name];\n      }\n\n      return store;\n    },\n\n    /**\n     * Emit code for the equality check evaluation\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIsEqualFunction(code, clazz, config, name) {\n      code.push(\"var equ=\");\n\n      if (typeof config.isEqual === \"function\") {\n        code.push(\n          \"function(a,b){return !!\",\n          clazz.classname,\n          \".$$properties.\",\n          name,\n          \".isEqual.call(this,a,b);};\"\n        );\n      } else if (typeof config.isEqual === \"string\") {\n        var members = clazz.prototype;\n        // Name of member?\n        if (members[config.isEqual] !== undefined) {\n          code.push(\"this.\", config.isEqual, \";\");\n        }\n        // 'inline' code\n        else {\n          code.push(\"function(a,b){return !!(\", config.isEqual, \");};\");\n        }\n      } else if (typeof config.isEqual === \"undefined\") {\n        code.push(\"function(a,b){return a===b;};\");\n      } else {\n        throw new Error(\n          \"Invalid type for 'isEqual' attribute \" +\n            \"of property '\" +\n            name +\n            \"' in class '\" +\n            clazz.classname +\n            \"'\"\n        );\n      }\n    },\n\n    /**\n     * Emit code to check the arguments preconditions\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitSetterPreConditions(code, config, name, variant, incomingValue) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        code.push(\"var prop=qx.core.Property;\");\n\n        if (variant === \"init\") {\n          code.push(\n            'if(this.$$initialized)prop.error(this,0,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n\n        if (variant === \"refresh\") {\n          // do nothing\n          // refresh() is internal => no arguments test\n          // also note that refresh() supports \"undefined\" values\n        } else if (incomingValue) {\n          // Check argument length\n          code.push(\n            'if(arguments.length!==1)prop.error(this,1,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n\n          // Undefined check\n          code.push(\n            'if(value===undefined)prop.error(this,2,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        } else {\n          // Check argument length\n          code.push(\n            'if(arguments.length!==0)prop.error(this,3,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n      } else {\n        if (!config.nullable || config.check || config.inheritable) {\n          code.push(\"var prop=qx.core.Property;\");\n        }\n\n        // Undefined check\n        if (variant === \"setImpl\") {\n          code.push(\n            'if(value===undefined)prop.error(this,2,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n      }\n    },\n\n    /**\n     * Emit code to apply the \"validate\" and \"transform\" config keys.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIncomingValueTransformation(code, clazz, config, name) {\n      // Call user-provided transform method, if one is provided.  Transform\n      // method should either throw an error or return the new value.\n      if (config.transform) {\n        code.push(\"value=this.\", config.transform, \"(value, old);\");\n      }\n\n      // Call user-provided validate method, if one is provided.  Validate\n      // method should either throw an error or do nothing.\n      if (config.validate) {\n        // if it is a string\n        if (typeof config.validate === \"string\") {\n          code.push(\"this.\", config.validate, \"(value);\");\n          // if its a function otherwise\n        } else if (config.validate instanceof Function) {\n          code.push(clazz.classname, \".$$properties.\", name);\n          code.push(\".validate.call(this, value);\");\n        }\n      }\n    },\n\n    /**\n     * Emit code, which returns if the incoming value equals the current value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     * @param store {Object} The data store to use for the incoming value\n     * @param variant {String} Method variant.\n     */\n    __emitOldNewComparison(code, incomingValue, store, variant) {\n      var resetValue =\n        variant === \"reset\" ||\n        variant === \"resetThemed\" ||\n        variant === \"resetRuntime\";\n\n      if (incomingValue) {\n        code.push(\"if(equ.call(this,this.\", store, \",value))return value;\");\n      } else if (resetValue) {\n        code.push(\"if(this.\", store, \"===undefined)return;\");\n      }\n    },\n\n    /**\n     * Emit code, which performs validation of the incoming value according to\n     * the \"nullable\", \"check\" and \"inheritable\" config keys.\n     *\n     * @signature function(code, config, clazz, name, variant)\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitIncomingValueValidation: qx.core.Environment.select(\"qx.debug\", {\n      true(code, config, clazz, name, variant) {\n        // Null check\n        if (!config.nullable) {\n          code.push(\n            'if(value===null)prop.error(this,4,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n\n        // Processing check definition\n        if (config.check !== undefined) {\n          code.push(\n            \"var msg = \\\"Invalid incoming value for property '\" +\n              name +\n              \"' of class '\" +\n              clazz.classname +\n              \"'\\\";\"\n          );\n\n          // Accept \"null\"\n          if (config.nullable) {\n            code.push(\"if(value!==null)\");\n          }\n\n          // Inheritable properties always accept \"inherit\" as value\n          if (config.inheritable) {\n            code.push(\"if(value!==inherit)\");\n          }\n\n          code.push(\"if(\");\n\n          if (this.__checks[config.check] !== undefined) {\n            code.push(\"!(\", this.__checks[config.check], \")\");\n          } else if (qx.Class.isDefined(config.check)) {\n            code.push(\n              'qx.core.Assert.assertInstance(value, qx.Class.getByName(\"',\n              config.check,\n              '\"), msg)'\n            );\n          } else if (qx.Interface && qx.Interface.isDefined(config.check)) {\n            code.push(\n              'qx.core.Assert.assertInterface(value, qx.Interface.getByName(\"',\n              config.check,\n              '\"), msg)'\n            );\n          } else if (typeof config.check === \"function\") {\n            code.push(\"!\", clazz.classname, \".$$properties.\", name);\n            code.push(\".check.call(this, value)\");\n          } else if (typeof config.check === \"string\") {\n            code.push(\"!(\", config.check, \")\");\n          } else if (config.check instanceof Array) {\n            code.push(\n              \"qx.core.Assert.assertInArray(value, \",\n              clazz.classname,\n              \".$$properties.\",\n              name,\n              \".check, msg)\"\n            );\n          } else {\n            throw new Error(\n              \"Could not add check to property \" +\n                name +\n                \" of class \" +\n                clazz.classname\n            );\n          }\n\n          code.push(')prop.error(this,5,\"', name, '\",\"', variant, '\",value);');\n        }\n      },\n\n      false: undefined\n    }),\n\n    /**\n     * Emit code to store the incoming value\n     *\n     * @param code {String[]} String array to append the code to\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreValue(code, name, variant, incomingValue) {\n      if (variant === \"setRuntime\") {\n        code.push(\"this.\", this.$$store.runtime[name], \"=value;\");\n      } else if (variant === \"resetRuntime\") {\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\n      } else if (variant === \"setImpl\") {\n        code.push(\"this.\", this.$$store.user[name], \"=value;\");\n      } else if (variant === \"reset\") {\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\n      } else if (variant === \"setThemed\") {\n        code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n      } else if (variant === \"resetThemed\") {\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.theme[name], \";\");\n      } else if (variant === \"init\" && incomingValue) {\n        code.push(\"this.\", this.$$store.init[name], \"=value;\");\n      }\n    },\n\n    /**\n     * Emit code to store the incoming value and compute the \"old\" and \"computed\"\n     * values.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreComputedValue(code, config, name, variant, incomingValue) {\n      code.push(\"var computed;\");\n\n      // OLD = RUNTIME VALUE\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\n\n      if (variant === \"setRuntime\") {\n        // Replace it with new value\n        code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n      } else if (variant === \"resetRuntime\") {\n        // Delete field\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\n\n        // Complex computation of new value\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        code.push(\"}\");\n      } else {\n        // Use runtime value as it has higher priority\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\n\n        // Store incoming value\n        if (variant === \"setImpl\") {\n          code.push(\"this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"reset\") {\n          code.push(\"delete this.\", this.$$store.user[name], \";\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"init\" && incomingValue) {\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = USER VALUE\n      code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\n\n      if (variant === \"setImpl\") {\n        // Replace it with new value\n        code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n      } else if (variant === \"reset\") {\n        // Delete field\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\n\n        // Complex computation of new value\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        code.push(\"}\");\n      } else {\n        if (variant === \"setRuntime\") {\n          // Use runtime value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (config.inheritable) {\n          // Use user value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        } else {\n          // Use user value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        }\n\n        // Store incoming value\n        if (variant === \"setThemed\") {\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"init\" && incomingValue) {\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = THEMED VALUE\n      if (config.themeable) {\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined){\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        }\n\n        // reset() is impossible, because the user has higher priority than\n        // the themed value, so the themed value has no chance to ever get used,\n        // when there is an user value, too.\n        else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          // Delete entry\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n\n          // Fallback to init value\n          code.push(\"if(this.\", this.$$store.init[name], \"!==undefined){\");\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n          code.push(\"}\");\n        } else if (variant === \"init\") {\n          if (incomingValue) {\n            code.push(\"this.\", this.$$store.init[name], \"=value;\");\n          }\n\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"refresh\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        }\n\n        code.push(\"}\");\n      }\n\n      // OLD = INIT VALUE\n      code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\n\n      if (variant === \"init\") {\n        if (incomingValue) {\n          code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\n        } else {\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        }\n\n        // useinit flag is already initialized\n      }\n\n      // reset(), resetRuntime() and resetStyle() are impossible, because the user and themed values have a\n      // higher priority than the init value, so the init value has no chance to ever get used,\n      // when there is an user or themed value, too.\n      else if (\n        variant === \"setImpl\" ||\n        variant === \"setRuntime\" ||\n        variant === \"setThemed\" ||\n        variant === \"refresh\"\n      ) {\n        code.push(\"delete this.\", this.$$store.useinit[name], \";\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"refresh\") {\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = NONE\n\n      // reset(), resetRuntime() and resetStyle() are impossible because otherwise there\n      // is already an old value\n      if (\n        variant === \"setImpl\" ||\n        variant === \"setRuntime\" ||\n        variant === \"setThemed\" ||\n        variant === \"init\"\n      ) {\n        code.push(\"else{\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"init\") {\n          if (incomingValue) {\n            code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\n          } else {\n            code.push(\"computed=this.\", this.$$store.init[name], \";\");\n          }\n\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        }\n\n        // refresh() will work with the undefined value, later\n        code.push(\"}\");\n      }\n    },\n\n    /**\n     * Emit code to compute the \"old\" value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitOldValue(code, config, name) {\n      if (config.inheritable) {\n        code.push(\"var old=this.\", this.$$store.inherit[name], \";\");\n      } else {\n        code.push(\"var old;\");\n      }\n\n      // OLD = RUNTIME VALUE\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\n      code.push(\"old=this.\", this.$$store.runtime[name], \";\");\n      code.push(\"}\");\n\n      // OLD = USER VALUE\n      if (!config.inheritable) {\n        code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\n        code.push(\"old=this.\", this.$$store.user[name], \";\");\n        code.push(\"}\");\n\n        // OLD = THEMED VALUE\n        if (config.themeable) {\n          code.push(\n            \"else if(this.\",\n            this.$$store.theme[name],\n            \"!==undefined){\"\n          );\n\n          code.push(\"old=this.\", this.$$store.theme[name], \";\");\n          code.push(\"}\");\n        }\n\n        // OLD = INIT VALUE\n        code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\n        code.push(\"old=this.\", this.$$store.init[name], \";\");\n        code.push(\"}\");\n      }\n    },\n\n    /**\n     * Emit code to store the value of an inheritable property\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitStoreInheritedPropertyValue(code, config, name, variant) {\n      code.push(\"if(computed===undefined||computed===inherit){\");\n\n      if (variant === \"refresh\") {\n        code.push(\"computed=value;\");\n      } else {\n        code.push(\n          \"var pa=this.getLayoutParent();if(pa)computed=pa.\",\n          this.$$store.inherit[name],\n          \";\"\n        );\n      }\n\n      // Fallback to init value if inheritance was unsuccessful\n      code.push(\"if((computed===undefined||computed===inherit)&&\");\n      code.push(\"this.\", this.$$store.init[name], \"!==undefined&&\");\n      code.push(\"this.\", this.$$store.init[name], \"!==inherit){\");\n      code.push(\"computed=this.\", this.$$store.init[name], \";\");\n      code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n      code.push(\"}else{\");\n      code.push(\"delete this.\", this.$$store.useinit[name], \";}\");\n\n      code.push(\"}\");\n\n      // Compare old/new computed value\n      code.push(\"if(equ.call(this,old,computed))return value;\");\n\n      // Note: At this point computed can be \"inherit\" or \"undefined\".\n\n      // Normalize \"inherit\" to undefined and delete inherited value\n      code.push(\"if(computed===inherit){\");\n      code.push(\n        \"computed=undefined;delete this.\",\n        this.$$store.inherit[name],\n        \";\"\n      );\n\n      code.push(\"}\");\n\n      // Only delete inherited value\n      code.push(\"else if(computed===undefined)\");\n      code.push(\"delete this.\", this.$$store.inherit[name], \";\");\n\n      // Store inherited value\n      code.push(\"else this.\", this.$$store.inherit[name], \"=computed;\");\n\n      // Protect against normalization\n      code.push(\"var backup=computed;\");\n\n      // After storage finally normalize computed and old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\n      } else {\n        code.push(\"if(old===undefined)old=null;\");\n      }\n      code.push(\"if(computed===undefined||computed==inherit)computed=null;\");\n    },\n\n    /**\n     * Emit code to normalize the old and incoming values from undefined to\n     * <code>null</code>.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitNormalizeUndefinedValues(code, config, name, variant) {\n      // Properties which are not inheritable have no possibility to get\n      // undefined at this position. (Hint: set(), setRuntime() and setThemed() only allow non undefined values)\n      if (\n        variant !== \"setImpl\" &&\n        variant !== \"setRuntime\" &&\n        variant !== \"setThemed\"\n      ) {\n        code.push(\"if(computed===undefined)computed=null;\");\n      }\n\n      // Compare old/new computed value\n      code.push(\"if(equ.call(this,old,computed))return value;\");\n\n      // Normalize old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\n      } else {\n        code.push(\"if(old===undefined)old=null;\");\n      }\n    },\n\n    /**\n     * Emit code to call the apply method and fire the change event\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} variant of the method e.g. setThemed\n     * @param refresh {Boolean} if true, emit code to update the inherited values of child objects\n     */\n    __emitCallCallback(code, config, name, variant, refresh) {\n      // Execute user configured setter\n      code.push(\"var self=this;\", \"var promise;\");\n      if (config.apply) {\n        code.push(\n          \"promise = this.\",\n          config.apply,\n          '(computed, old, \"',\n          name,\n          '\", \"',\n          variant,\n          '\");'\n        );\n      }\n\n      if (config.async) {\n        code.push(\n          \"function fire() {\",\n          \"var promiseData = qx.Promise.resolve(computed);\",\n          \"var promise = promiseData;\"\n        );\n\n        // Fire event\n        if (config.event) {\n          code.push(\n            \"var reg=qx.event.Registration;\",\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"')) {\",\n            \"promise = reg.fireEventAsync(self, '\",\n            config.event,\n            \"', qx.event.type.Data, [computed, old]\",\n            \");\",\n            \"promise = promise.then(function() { return computed; });\",\n            \"}\",\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"Async'))\",\n            \"promise = promise.then(function() {\",\n            \"return reg.fireEventAsync(self, '\",\n            config.event,\n            \"Async', qx.event.type.Data, [promiseData, old]\",\n            \");\",\n            \"});\"\n          );\n        }\n\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            \"var a=self._getChildren();\",\n            \"if(a)\",\n            \"for(var i=0,l=a.length;i<l;i++){\",\n            \"if(a[i].\",\n            this.$$method.refresh[name],\n            \")\",\n            \"a[i].\",\n            this.$$method.refresh[name],\n            \"(backup);\",\n            \"}\"\n          );\n        }\n\n        code.push(\"return promise;\", \"}\");\n      } else {\n        code.push(\"function fire() {\", \"  var tracker={};\");\n\n        // Fire event\n        if (config.event) {\n          code.push(\n            \"var reg=qx.event.Registration;\",\n\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"'))\",\n            \"qx.event.Utils.track(tracker, reg.fireEvent(self, '\",\n            config.event,\n            \"', qx.event.type.Data, [computed, old]\",\n            \"));\"\n          );\n\n          if (qx.core.Environment.get(\"qx.promise\")) {\n            code.push(\n              \"if(reg.hasListener(self, '\",\n              config.event,\n              \"Async'))\",\n              \"qx.event.Utils.then(tracker, function() {\\n\" +\n                \"  return reg.fireEventAsync(self, '\",\n              config.event,\n              \"Async', qx.event.type.Data, [qx.Promise.resolve(computed), old]\",\n              \");\\n\" + \"});\"\n            );\n          }\n        }\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            \"var a=self._getChildren();\",\n            \"if(a)\",\n            \"for(var i=0,l=a.length;i<l;i++){\",\n            \"if(a[i].\",\n            this.$$method.refresh[name],\n            \")\",\n            \"a[i].\",\n            this.$$method.refresh[name],\n            \"(backup);\",\n            \"}\"\n          );\n        }\n\n        code.push(\n          \"if (tracker.promise)\\n\",\n          \"  return tracker.promise.then(function() { return computed; });\",\n          \"return computed;\",\n          \"}\"\n        );\n      }\n\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        code.push(\n          \"if(qx.Promise.isPromise(promise)) \" + \"return promise.then(fire); \"\n        );\n      }\n      code.push(\"return fire();\");\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}