{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__types",
    "text",
    "textarea",
    "select",
    "checkbox",
    "radio",
    "password",
    "hidden",
    "submit",
    "image",
    "file",
    "search",
    "reset",
    "button",
    "create",
    "type",
    "attributes",
    "win",
    "core",
    "Assert",
    "assertKeyInMap",
    "lang",
    "Object",
    "clone",
    "tag",
    "dom",
    "Element",
    "setValue",
    "element",
    "value",
    "nodeName",
    "toLowerCase",
    "Type",
    "isArray",
    "checked",
    "includes",
    "options",
    "subel",
    "subval",
    "i",
    "l",
    "length",
    "getAttribute",
    "selected",
    "selectedIndex",
    "Environment",
    "get",
    "$$inValueSet",
    "getValue",
    "specified",
    "index",
    "values",
    "one",
    "clazz",
    "bom",
    "Input",
    "max",
    "option",
    "push",
    "replace",
    "setWrap",
    "mshtml",
    "wrap",
    "wrapValue",
    "styleValue",
    "style",
    "overflowY",
    "gecko",
    "setAttribute",
    "overflow",
    "webkit",
    "whiteSpace"
  ],
  "sources": [
    "C:/Users/dadovaz/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/bom/Input.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * jQuery\n     http://jquery.com\n     Version 1.3.1\n\n     Copyright:\n       2009 John Resig\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with input elements.\n */\nqx.Bootstrap.define(\"qx.bom.Input\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Map} Internal data structures with all supported input types */\n    __types: {\n      text: 1,\n      textarea: 1,\n      select: 1,\n      checkbox: 1,\n      radio: 1,\n      password: 1,\n      hidden: 1,\n      submit: 1,\n      image: 1,\n      file: 1,\n      search: 1,\n      reset: 1,\n      button: 1\n    },\n\n    /**\n     * Creates an DOM input/textarea/select element.\n     *\n     * Attributes may be given directly with this call. This is critical\n     * for some attributes e.g. name, type, ... in many clients.\n     *\n     * Note: <code>select</code> and <code>textarea</code> elements are created\n     * using the identically named <code>type</code>.\n     *\n     * @param type {String} Any valid type for HTML, <code>select</code>\n     *   and <code>textarea</code>\n     * @param attributes {Map} Map of attributes to apply\n     * @param win {Window} Window to create the element for\n     * @return {Element} The created input node\n     */\n    create(type, attributes, win) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertKeyInMap(\n          type,\n          this.__types,\n          \"Unsupported input type.\"\n        );\n      }\n\n      // Work on a copy to not modify given attributes map\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\n\n      var tag;\n\n      if (type === \"textarea\" || type === \"select\") {\n        tag = type;\n      } else {\n        tag = \"input\";\n        attributes.type = type;\n      }\n\n      return qx.dom.Element.create(tag, attributes, win);\n    },\n\n    /**\n     * Applies the given value to the element.\n     *\n     * Normally the value is given as a string/number value and applied\n     * to the field content (textfield, textarea) or used to\n     * detect whether the field is checked (checkbox, radiobutton).\n     *\n     * Supports array values for selectboxes (multiple-selection)\n     * and checkboxes or radiobuttons (for convenience).\n     *\n     * Please note: To modify the value attribute of a checkbox or\n     * radiobutton use {@link qx.bom.element.Attribute#set} instead.\n     *\n     * @param element {Element} element to update\n     * @param value {String|Number|Array} the value to apply\n     */\n    setValue(element, value) {\n      var tag = element.nodeName.toLowerCase();\n      var type = element.type;\n      var Type = qx.lang.Type;\n\n      if (typeof value === \"number\") {\n        value += \"\";\n      }\n\n      if (type === \"checkbox\" || type === \"radio\") {\n        if (Type.isArray(value)) {\n          element.checked = value.includes(element.value);\n        } else {\n          element.checked = element.value == value;\n        }\n      } else if (tag === \"select\") {\n        var isArray = Type.isArray(value);\n        var options = element.options;\n        var subel, subval;\n\n        for (var i = 0, l = options.length; i < l; i++) {\n          subel = options[i];\n          subval = subel.getAttribute(\"value\");\n          if (subval == null) {\n            subval = subel.text;\n          }\n\n          subel.selected = isArray ? value.includes(subval) : value == subval;\n        }\n\n        if (isArray && value.length == 0) {\n          element.selectedIndex = -1;\n        }\n      } else if (\n        (type === \"text\" || type === \"textarea\") &&\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\"\n      ) {\n        // These flags are required to detect self-made property-change\n        // events during value modification. They are used by the Input\n        // event handler to filter events.\n        element.$$inValueSet = true;\n        element.value = value;\n        element.$$inValueSet = null;\n      } else {\n        element.value = value;\n      }\n    },\n\n    /**\n     * Returns the currently configured value.\n     *\n     * Works with simple input fields as well as with\n     * select boxes or option elements.\n     *\n     * Returns an array in cases of multi-selection in\n     * select boxes but in all other cases a string.\n     *\n     * @param element {Element} DOM element to query\n     * @return {String|Array} The value of the given element\n     */\n    getValue(element) {\n      var tag = element.nodeName.toLowerCase();\n\n      if (tag === \"option\") {\n        return (element.attributes.value || {}).specified\n          ? element.value\n          : element.text;\n      }\n\n      if (tag === \"select\") {\n        var index = element.selectedIndex;\n\n        // Nothing was selected\n        if (index < 0) {\n          return null;\n        }\n\n        var values = [];\n        var options = element.options;\n        var one = element.type == \"select-one\";\n        var clazz = qx.bom.Input;\n        var value;\n\n        // Loop through all the selected options\n        for (\n          var i = one ? index : 0, max = one ? index + 1 : options.length;\n          i < max;\n          i++\n        ) {\n          var option = options[i];\n\n          if (option.selected) {\n            // Get the specific value for the option\n            value = clazz.getValue(option);\n\n            // We don't need an array for one selects\n            if (one) {\n              return value;\n            }\n\n            // Multi-Selects return an array\n            values.push(value);\n          }\n        }\n\n        return values;\n      } else {\n        return (element.value || \"\").replace(/\\r/g, \"\");\n      }\n    },\n\n    /**\n     * Sets the text wrap behaviour of a text area element.\n     * This property uses the attribute \"wrap\" respectively\n     * the style property \"whiteSpace\"\n     *\n     * @signature function(element, wrap)\n     * @param element {Element} DOM element to modify\n     * @param wrap {Boolean} Whether to turn text wrap on or off.\n     */\n    setWrap: qx.core.Environment.select(\"engine.name\", {\n      mshtml(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n\n        // Explicitly set overflow-y CSS property to auto when wrapped,\n        // allowing the vertical scroll-bar to appear if necessary\n        var styleValue = wrap ? \"auto\" : \"\";\n\n        element.wrap = wrapValue;\n        element.style.overflowY = styleValue;\n      },\n\n      gecko(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      webkit(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      default(element, wrap) {\n        element.style.whiteSpace = wrap ? \"normal\" : \"nowrap\";\n      }\n    })\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,cAAc,EAAE;IAClC;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;MACAC,gBAAO,EAAE;QACPC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE,CAAC;QACXC,MAAM,EAAE,CAAC;QACTC,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE,CAAC;QACXC,MAAM,EAAE,CAAC;QACTC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,CAAC;QACRC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,kBAACC,IAAI,EAAEC,UAAU,EAAEC,GAAG,EAAE;QACa;UACvCvB,EAAE,CAACwB,IAAI,CAACC,MAAM,CAACC,cAAc,CAC3BL,IAAI,EACJ,IAAI,CAACf,gBAAO,EACZ,yBAAyB,CAC1B;QACH;;QAEA;QACA,IAAIgB,UAAU,GAAGA,UAAU,GAAGtB,EAAE,CAAC2B,IAAI,CAACC,MAAM,CAACC,KAAK,CAACP,UAAU,CAAC,GAAG,CAAC,CAAC;QAEnE,IAAIQ,GAAG;QAEP,IAAIT,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,QAAQ,EAAE;UAC5CS,GAAG,GAAGT,IAAI;QACZ,CAAC,MAAM;UACLS,GAAG,GAAG,OAAO;UACbR,UAAU,CAACD,IAAI,GAAGA,IAAI;QACxB;QAEA,OAAOrB,EAAE,CAAC+B,GAAG,CAACC,OAAO,CAACZ,MAAM,CAACU,GAAG,EAAER,UAAU,EAAEC,GAAG,CAAC;MACpD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIU,QAAQ,oBAACC,OAAO,EAAEC,KAAK,EAAE;QACvB,IAAIL,GAAG,GAAGI,OAAO,CAACE,QAAQ,CAACC,WAAW,EAAE;QACxC,IAAIhB,IAAI,GAAGa,OAAO,CAACb,IAAI;QACvB,IAAIiB,IAAI,GAAGtC,EAAE,CAAC2B,IAAI,CAACW,IAAI;QAEvB,IAAI,OAAOH,KAAK,KAAK,QAAQ,EAAE;UAC7BA,KAAK,IAAI,EAAE;QACb;QAEA,IAAId,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,OAAO,EAAE;UAC3C,IAAIiB,IAAI,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;YACvBD,OAAO,CAACM,OAAO,GAAGL,KAAK,CAACM,QAAQ,CAACP,OAAO,CAACC,KAAK,CAAC;UACjD,CAAC,MAAM;YACLD,OAAO,CAACM,OAAO,GAAGN,OAAO,CAACC,KAAK,IAAIA,KAAK;UAC1C;QACF,CAAC,MAAM,IAAIL,GAAG,KAAK,QAAQ,EAAE;UAC3B,IAAIS,OAAO,GAAGD,IAAI,CAACC,OAAO,CAACJ,KAAK,CAAC;UACjC,IAAIO,OAAO,GAAGR,OAAO,CAACQ,OAAO;UAC7B,IAAIC,KAAK,EAAEC,MAAM;UAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGJ,OAAO,CAACK,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;YAC9CF,KAAK,GAAGD,OAAO,CAACG,CAAC,CAAC;YAClBD,MAAM,GAAGD,KAAK,CAACK,YAAY,CAAC,OAAO,CAAC;YACpC,IAAIJ,MAAM,IAAI,IAAI,EAAE;cAClBA,MAAM,GAAGD,KAAK,CAACpC,IAAI;YACrB;YAEAoC,KAAK,CAACM,QAAQ,GAAGV,OAAO,GAAGJ,KAAK,CAACM,QAAQ,CAACG,MAAM,CAAC,GAAGT,KAAK,IAAIS,MAAM;UACrE;UAEA,IAAIL,OAAO,IAAIJ,KAAK,CAACY,MAAM,IAAI,CAAC,EAAE;YAChCb,OAAO,CAACgB,aAAa,GAAG,CAAC,CAAC;UAC5B;QACF,CAAC,MAAM,IACL,CAAC7B,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,UAAU,KACvCrB,EAAE,CAACwB,IAAI,CAAC2B,WAAW,CAACC,GAAG,CAAC,aAAa,CAAC,IAAI,QAAQ,EAClD;UACA;UACA;UACA;UACAlB,OAAO,CAACmB,YAAY,GAAG,IAAI;UAC3BnB,OAAO,CAACC,KAAK,GAAGA,KAAK;UACrBD,OAAO,CAACmB,YAAY,GAAG,IAAI;QAC7B,CAAC,MAAM;UACLnB,OAAO,CAACC,KAAK,GAAGA,KAAK;QACvB;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACImB,QAAQ,oBAACpB,OAAO,EAAE;QAChB,IAAIJ,GAAG,GAAGI,OAAO,CAACE,QAAQ,CAACC,WAAW,EAAE;QAExC,IAAIP,GAAG,KAAK,QAAQ,EAAE;UACpB,OAAO,CAACI,OAAO,CAACZ,UAAU,CAACa,KAAK,IAAI,CAAC,CAAC,EAAEoB,SAAS,GAC7CrB,OAAO,CAACC,KAAK,GACbD,OAAO,CAAC3B,IAAI;QAClB;QAEA,IAAIuB,GAAG,KAAK,QAAQ,EAAE;UACpB,IAAI0B,KAAK,GAAGtB,OAAO,CAACgB,aAAa;;UAEjC;UACA,IAAIM,KAAK,GAAG,CAAC,EAAE;YACb,OAAO,IAAI;UACb;UAEA,IAAIC,MAAM,GAAG,EAAE;UACf,IAAIf,OAAO,GAAGR,OAAO,CAACQ,OAAO;UAC7B,IAAIgB,GAAG,GAAGxB,OAAO,CAACb,IAAI,IAAI,YAAY;UACtC,IAAIsC,KAAK,GAAG3D,EAAE,CAAC4D,GAAG,CAACC,KAAK;UACxB,IAAI1B,KAAK;;UAET;UACA,KACE,IAAIU,CAAC,GAAGa,GAAG,GAAGF,KAAK,GAAG,CAAC,EAAEM,GAAG,GAAGJ,GAAG,GAAGF,KAAK,GAAG,CAAC,GAAGd,OAAO,CAACK,MAAM,EAC/DF,CAAC,GAAGiB,GAAG,EACPjB,CAAC,EAAE,EACH;YACA,IAAIkB,MAAM,GAAGrB,OAAO,CAACG,CAAC,CAAC;YAEvB,IAAIkB,MAAM,CAACd,QAAQ,EAAE;cACnB;cACAd,KAAK,GAAGwB,KAAK,CAACL,QAAQ,CAACS,MAAM,CAAC;;cAE9B;cACA,IAAIL,GAAG,EAAE;gBACP,OAAOvB,KAAK;cACd;;cAEA;cACAsB,MAAM,CAACO,IAAI,CAAC7B,KAAK,CAAC;YACpB;UACF;UAEA,OAAOsB,MAAM;QACf,CAAC,MAAM;UACL,OAAO,CAACvB,OAAO,CAACC,KAAK,IAAI,EAAE,EAAE8B,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QACjD;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,EAAElE,EAAE,CAACwB,IAAI,CAAC2B,WAAW,CAAC1C,MAAM,CAAC,aAAa,EAAE;QACjD0D,MAAM,kBAACjC,OAAO,EAAEkC,IAAI,EAAE;UACpB,IAAIC,SAAS,GAAGD,IAAI,GAAG,MAAM,GAAG,KAAK;;UAErC;UACA;UACA,IAAIE,UAAU,GAAGF,IAAI,GAAG,MAAM,GAAG,EAAE;UAEnClC,OAAO,CAACkC,IAAI,GAAGC,SAAS;UACxBnC,OAAO,CAACqC,KAAK,CAACC,SAAS,GAAGF,UAAU;QACtC,CAAC;QAEDG,KAAK,iBAACvC,OAAO,EAAEkC,IAAI,EAAE;UACnB,IAAIC,SAAS,GAAGD,IAAI,GAAG,MAAM,GAAG,KAAK;UACrC,IAAIE,UAAU,GAAGF,IAAI,GAAG,EAAE,GAAG,MAAM;UAEnClC,OAAO,CAACwC,YAAY,CAAC,MAAM,EAAEL,SAAS,CAAC;UACvCnC,OAAO,CAACqC,KAAK,CAACI,QAAQ,GAAGL,UAAU;QACrC,CAAC;QAEDM,MAAM,kBAAC1C,OAAO,EAAEkC,IAAI,EAAE;UACpB,IAAIC,SAAS,GAAGD,IAAI,GAAG,MAAM,GAAG,KAAK;UACrC,IAAIE,UAAU,GAAGF,IAAI,GAAG,EAAE,GAAG,MAAM;UAEnClC,OAAO,CAACwC,YAAY,CAAC,MAAM,EAAEL,SAAS,CAAC;UACvCnC,OAAO,CAACqC,KAAK,CAACI,QAAQ,GAAGL,UAAU;QACrC,CAAC;QAAA,6BAEOpC,OAAO,EAAEkC,IAAI,EAAE;UACrBlC,OAAO,CAACqC,KAAK,CAACM,UAAU,GAAGT,IAAI,GAAG,QAAQ,GAAG,QAAQ;QACvD;MACF,CAAC;IACH;EACF,CAAC,CAAC;EA7QFpE,EAAE,CAAC4D,GAAG,CAACC,KAAK,CAAC1D,aAAa,GAAGA,aAAa;AAAC"
}