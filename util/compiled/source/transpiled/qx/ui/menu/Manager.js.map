{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "__objects",
    "el",
    "document",
    "body",
    "Registration",
    "event",
    "addListener",
    "window",
    "documentElement",
    "_onPointerDown",
    "_onRoll",
    "_onKeyUpDown",
    "_onKeyPress",
    "Environment",
    "get",
    "bom",
    "Element",
    "hideAll",
    "__openTimer",
    "Timer",
    "_onOpenInterval",
    "__closeTimer",
    "_onCloseInterval",
    "members",
    "__scheduleOpen",
    "__scheduleClose",
    "_getChild",
    "menu",
    "start",
    "iter",
    "loop",
    "children",
    "getChildren",
    "length",
    "child",
    "i",
    "isEnabled",
    "isAnonymous",
    "isVisible",
    "_isInMenu",
    "widget",
    "ui",
    "Menu",
    "getLayoutParent",
    "_isMenuOpener",
    "menus",
    "getOpener",
    "_getMenuButton",
    "AbstractButton",
    "add",
    "obj",
    "Error",
    "reg",
    "push",
    "setZIndex",
    "remove",
    "lang",
    "Array",
    "exclude",
    "getActiveMenu",
    "scheduleOpen",
    "cancelClose",
    "cancelOpen",
    "restartWith",
    "getOpenInterval",
    "scheduleClose",
    "getCloseInterval",
    "stop",
    "e",
    "open",
    "preventContextMenuOnce",
    "__onPreventContextMenu",
    "target",
    "getTarget",
    "Widget",
    "getWidgetByElement",
    "stopPropagation",
    "preventDefault",
    "removeListener",
    "getMenu",
    "__selectionKeys",
    "Enter",
    "Space",
    "__navigationKeys",
    "Tab",
    "Escape",
    "Up",
    "Down",
    "Left",
    "Right",
    "iden",
    "getKeyIdentifier",
    "getSelectedButton",
    "navigation",
    "selection",
    "_onKeyPressUp",
    "_onKeyPressDown",
    "_onKeyPressLeft",
    "_onKeyPressRight",
    "button",
    "_onKeyPressEnter",
    "_onKeyPressSpace",
    "selectedButton",
    "indexOf",
    "nextItem",
    "setSelectedButton",
    "resetSelectedButton",
    "menuOpener",
    "parentMenu",
    "resetOpenedButton",
    "menubar",
    "Button",
    "buttons",
    "getMenuBar",
    "getMenuButtons",
    "index",
    "prevButton",
    "subMenu",
    "setOpenedButton",
    "first",
    "getOpenedButton",
    "nextButton",
    "hasListener",
    "clone",
    "setBubbles",
    "setTarget",
    "dispatchEvent",
    "getMomentum",
    "destruct",
    "_disposeObjects",
    "_disposeArray",
    "Manager"
  ],
  "sources": [
    "C:/Users/dadovaz/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * This singleton manages visible menu instances and supports some\n * core features to schedule menu open/close with timeout support.\n *\n * It also manages the whole keyboard support for the currently\n * registered widgets.\n *\n * The zIndex order is also managed by this class.\n */\nqx.Class.define(\"qx.ui.menu.Manager\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Create data structure\n    this.__objects = [];\n\n    var el = document.body;\n    var Registration = qx.event.Registration;\n\n    // React on pointer/mouse events, but on native, to support inline applications\n    Registration.addListener(\n      window.document.documentElement,\n      \"pointerdown\",\n      this._onPointerDown,\n      this,\n      true\n    );\n\n    Registration.addListener(el, \"roll\", this._onRoll, this, true);\n\n    // React on keypress events\n    Registration.addListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    // only use the blur event to hide windows on non touch devices [BUG #4033]\n    // When the menu is located on top of an iFrame, the select will fail\n    if (!qx.core.Environment.get(\"event.touch\")) {\n      // Hide all when the window is blurred\n      qx.bom.Element.addListener(window, \"blur\", this.hideAll, this);\n    }\n\n    // Create open timer\n    this.__openTimer = new qx.event.Timer();\n    this.__openTimer.addListener(\"interval\", this._onOpenInterval, this);\n\n    // Create close timer\n    this.__closeTimer = new qx.event.Timer();\n    this.__closeTimer.addListener(\"interval\", this._onCloseInterval, this);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n\n  members: {\n    __scheduleOpen: null,\n    __scheduleClose: null,\n    __openTimer: null,\n    __closeTimer: null,\n    __objects: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Query engine for menu children.\n     *\n     * @param menu {qx.ui.menu.Menu} Any menu instance\n     * @param start {Integer} Child index to start with\n     * @param iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>\n     * @param loop {Boolean?false} Whether to wrap when reaching the begin/end of the list\n     * @return {qx.ui.menu.Button} Any menu button or <code>null</code>\n     */\n    _getChild(menu, start, iter, loop) {\n      var children = menu.getChildren();\n      var length = children.length;\n      var child;\n\n      for (var i = start; i < length && i >= 0; i += iter) {\n        child = children[i];\n        if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n          return child;\n        }\n      }\n\n      if (loop) {\n        i = i == length ? 0 : length - 1;\n        for (; i != start; i += iter) {\n          child = children[i];\n          if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n            return child;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Whether the given widget is inside any Menu instance.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> when the widget is part of any menu\n     */\n    _isInMenu(widget) {\n      while (widget) {\n        if (widget instanceof qx.ui.menu.Menu) {\n          return true;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return false;\n    },\n\n    /**\n     * Whether the given widget is one of the menu openers.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> if the widget is a menu opener\n     */\n    _isMenuOpener(widget) {\n      var menus = this.__objects;\n\n      for (var i = 0; i < menus.length; i++) {\n        if (menus[i].getOpener() === widget) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns an instance of a menu button if the given widget is a child\n     *\n     * @param widget {qx.ui.core.Widget} any widget\n     * @return {qx.ui.menu.Button} Any menu button instance or <code>null</code>\n     */\n    _getMenuButton(widget) {\n      while (widget) {\n        if (widget instanceof qx.ui.menu.AbstractButton) {\n          return widget;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a menu to the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    add(obj) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      reg.push(obj);\n      obj.setZIndex(1e6 + reg.length);\n    },\n\n    /**\n     * Remove a menu from the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    remove(obj) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      if (reg) {\n        qx.lang.Array.remove(reg, obj);\n      }\n    },\n\n    /**\n     * Hides all currently opened menus.\n     */\n    hideAll() {\n      var reg = this.__objects;\n      if (reg) {\n        for (var i = reg.length - 1; i >= 0; i--) {\n          reg[i].exclude();\n        }\n      }\n    },\n\n    /**\n     * Returns the menu which was opened at last (which\n     * is the active one this way)\n     *\n     * @return {qx.ui.menu.Menu} The current active menu or <code>null</code>\n     */\n    getActiveMenu() {\n      var reg = this.__objects;\n      return reg.length > 0 ? reg[reg.length - 1] : null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCHEDULED OPEN/CLOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedules the given menu to be opened after the\n     * {@link qx.ui.menu.Menu#openInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for open\n     */\n    scheduleOpen(menu) {\n      // Cancel close of given menu first\n      this.cancelClose(menu);\n\n      // When the menu is already visible\n      if (menu.isVisible()) {\n        // Cancel all other open requests\n        if (this.__scheduleOpen) {\n          this.cancelOpen(this.__scheduleOpen);\n        }\n      }\n\n      // When the menu is not visible and not scheduled already\n      // then schedule it for opening\n      else if (this.__scheduleOpen != menu) {\n        // menu.debug(\"Schedule open\");\n        this.__scheduleOpen = menu;\n        this.__openTimer.restartWith(menu.getOpenInterval());\n      }\n    },\n\n    /**\n     * Schedules the given menu to be closed after the\n     * {@link qx.ui.menu.Menu#closeInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for close\n     */\n    scheduleClose(menu) {\n      // Cancel open of the menu first\n      this.cancelOpen(menu);\n\n      // When the menu is already invisible\n      if (!menu.isVisible()) {\n        // Cancel all other close requests\n        if (this.__scheduleClose) {\n          this.cancelClose(this.__scheduleClose);\n        }\n      }\n\n      // When the menu is visible and not scheduled already\n      // then schedule it for closing\n      else if (this.__scheduleClose != menu) {\n        // menu.debug(\"Schedule close\");\n        this.__scheduleClose = menu;\n        this.__closeTimer.restartWith(menu.getCloseInterval());\n      }\n    },\n\n    /**\n     * When the given menu is scheduled for open this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for open\n     */\n    cancelOpen(menu) {\n      if (this.__scheduleOpen == menu) {\n        // menu.debug(\"Cancel open\");\n        this.__openTimer.stop();\n        this.__scheduleOpen = null;\n      }\n    },\n\n    /**\n     * When the given menu is scheduled for close this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for close\n     */\n    cancelClose(menu) {\n      if (this.__scheduleClose == menu) {\n        // menu.debug(\"Cancel close\");\n        this.__closeTimer.stop();\n        this.__scheduleClose = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for a pending open request. Configured to the interval\n     * of the current menu to open.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onOpenInterval(e) {\n      // Stop timer\n      this.__openTimer.stop();\n\n      // Open menu and reset flag\n      this.__scheduleOpen.open();\n      this.__scheduleOpen = null;\n    },\n\n    /**\n     * Event listener for a pending close request. Configured to the interval\n     * of the current menu to close.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onCloseInterval(e) {\n      // Stop timer, reset scheduling flag\n      this.__closeTimer.stop();\n\n      // Close menu and reset flag\n      this.__scheduleClose.exclude();\n      this.__scheduleClose = null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXTMENU EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Internal function registers a handler to stop next\n     * <code>contextmenu</code> event.\n     * This function will be called by {@link qx.ui.menu.Button#_onTap}, if\n     * right click was pressed.\n     *\n     * @internal\n     */\n    preventContextMenuOnce() {\n      qx.event.Registration.addListener(\n        document.body,\n        \"contextmenu\",\n        this.__onPreventContextMenu,\n        this,\n        true\n      );\n    },\n\n    /**\n     * Internal event handler to stop <code>contextmenu</code> event bubbling,\n     * if target is inside the opened menu.\n     *\n     * @param e {qx.event.type.Mouse} contextmenu event\n     *\n     * @internal\n     */\n    __onPreventContextMenu(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n      if (this._isInMenu(target)) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      // stop only once\n      qx.event.Registration.removeListener(\n        document.body,\n        \"contextmenu\",\n        this.__onPreventContextMenu,\n        this,\n        true\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for pointerdown events\n     *\n     * @param e {qx.event.type.Pointer} pointerdown event\n     */\n    _onPointerDown(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      // If the target is 'null' the tap appears on a DOM element witch is not\n      // a widget. This happens normally with an inline application, when the user\n      // taps not in the inline application. In this case all all currently\n      // open menus should be closed.\n      if (target == null) {\n        this.hideAll();\n        return;\n      }\n\n      // If the target is the one which has opened the current menu\n      // we ignore the pointerdown to let the button process the event\n      // further with toggling or ignoring the tap.\n      if (target.getMenu && target.getMenu() && target.getMenu().isVisible()) {\n        return;\n      }\n\n      // All taps not inside a menu will hide all currently open menus\n      if (this.__objects.length > 0 && !this._isInMenu(target)) {\n        this.hideAll();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      KEY EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Map of all keys working on an active menu selection\n     * @lint ignoreReferenceField(__selectionKeys)\n     */\n    __selectionKeys: {\n      Enter: 1,\n      Space: 1\n    },\n\n    /**\n     * @type {Map} Map of all keys working without a selection\n     * @lint ignoreReferenceField(__navigationKeys)\n     */\n    __navigationKeys: {\n      Tab: 1,\n      Escape: 1,\n      Up: 1,\n      Down: 1,\n      Left: 1,\n      Right: 1\n    },\n\n    /**\n     * Event handler for all keyup/keydown events. Stops all events\n     * when any menu is opened.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyUpDown(e) {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      // Stop for all supported key combos\n      var iden = e.getKeyIdentifier();\n      if (\n        this.__navigationKeys[iden] ||\n        (this.__selectionKeys[iden] && menu.getSelectedButton())\n      ) {\n        e.stopPropagation();\n      }\n    },\n\n    /**\n     * Event handler for all keypress events. Delegates the event to the more\n     * specific methods defined in this class.\n     *\n     * Currently processes the keys: <code>Up</code>, <code>Down</code>,\n     * <code>Left</code>, <code>Right</code> and <code>Enter</code>.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyPress(e) {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      var iden = e.getKeyIdentifier();\n      var navigation = this.__navigationKeys[iden];\n      var selection = this.__selectionKeys[iden];\n\n      if (navigation) {\n        switch (iden) {\n          case \"Up\":\n            this._onKeyPressUp(menu);\n            break;\n\n          case \"Down\":\n            this._onKeyPressDown(menu);\n            break;\n\n          case \"Left\":\n            this._onKeyPressLeft(menu);\n            break;\n\n          case \"Right\":\n            this._onKeyPressRight(menu);\n            break;\n\n          case \"Tab\":\n          case \"Escape\":\n            this.hideAll();\n            break;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n      } else if (selection) {\n        // Do not process these events when no item is hovered\n        var button = menu.getSelectedButton();\n        if (button) {\n          switch (iden) {\n            case \"Enter\":\n              this._onKeyPressEnter(menu, button, e);\n              break;\n\n            case \"Space\":\n              this._onKeyPressSpace(menu, button, e);\n              break;\n          }\n\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Up</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressUp(menu) {\n      // Query for previous child\n      var selectedButton = menu.getSelectedButton();\n      var children = menu.getChildren();\n      var start = selectedButton\n        ? menu.indexOf(selectedButton) - 1\n        : children.length - 1;\n      var nextItem = this._getChild(menu, start, -1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n    /**\n     * Event handler for <code>Down</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressDown(menu) {\n      // Query for next child\n      var selectedButton = menu.getSelectedButton();\n      var start = selectedButton ? menu.indexOf(selectedButton) + 1 : 0;\n      var nextItem = this._getChild(menu, start, 1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n    /**\n     * Event handler for <code>Left</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressLeft(menu) {\n      var menuOpener = menu.getOpener();\n      if (!menuOpener) {\n        return;\n      }\n\n      // Back to the \"parent\" menu\n      if (menuOpener instanceof qx.ui.menu.AbstractButton) {\n        var parentMenu = menuOpener.getLayoutParent();\n\n        parentMenu.resetOpenedButton();\n        parentMenu.setSelectedButton(menuOpener);\n      }\n\n      // Goto the previous toolbar button\n      else if (menuOpener instanceof qx.ui.menubar.Button) {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get previous button, fallback to end if first arrived\n        var prevButton = null;\n        var length = buttons.length;\n        for (var i = 1; i <= length; i++) {\n          var button = buttons[(index - i + length) % length];\n          if (button.isEnabled() && button.isVisible()) {\n            prevButton = button;\n            break;\n          }\n        }\n\n        if (prevButton && prevButton != menuOpener) {\n          prevButton.open(true);\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Right</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressRight(menu) {\n      var selectedButton = menu.getSelectedButton();\n\n      // Open sub-menu of hovered item and select first child\n      if (selectedButton) {\n        var subMenu = selectedButton.getMenu();\n\n        if (subMenu) {\n          // Open previously hovered item\n          menu.setOpenedButton(selectedButton);\n\n          // Hover first item in new submenu\n          var first = this._getChild(subMenu, 0, 1);\n          if (first) {\n            subMenu.setSelectedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // No hover and no open item\n      // When first button has a menu, open it, otherwise only hover it\n      else if (!menu.getOpenedButton()) {\n        var first = this._getChild(menu, 0, 1);\n\n        if (first) {\n          menu.setSelectedButton(first);\n\n          if (first.getMenu()) {\n            menu.setOpenedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // Jump to the next toolbar button\n      var menuOpener = menu.getOpener();\n\n      // Look up opener hierarchy for menu button\n      if (menuOpener instanceof qx.ui.menu.Button && selectedButton) {\n        // From one inner selected button try to find the top level\n        // menu button which has opened the whole menu chain.\n        while (menuOpener) {\n          menuOpener = menuOpener.getLayoutParent();\n          if (menuOpener instanceof qx.ui.menu.Menu) {\n            menuOpener = menuOpener.getOpener();\n            if (menuOpener instanceof qx.ui.menubar.Button) {\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n\n        if (!menuOpener) {\n          return;\n        }\n      }\n\n      // Ask the toolbar for the next menu button\n      if (menuOpener instanceof qx.ui.menubar.Button) {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get next button, fallback to first if end arrived\n        var nextButton = null;\n        var length = buttons.length;\n        for (var i = 1; i <= length; i++) {\n          var button = buttons[(index + i) % length];\n          if (button.isEnabled() && button.isVisible()) {\n            nextButton = button;\n            break;\n          }\n        }\n\n        if (nextButton && nextButton != menuOpener) {\n          nextButton.open(true);\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Enter</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressEnter(menu, button, e) {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\")) {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n\n      // Hide all open menus\n      this.hideAll();\n    },\n\n    /**\n     * Event handler for <code>Space</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressSpace(menu, button, e) {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\")) {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n    },\n\n    /**\n     * Event handler for roll which hides all windows on scroll.\n     *\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      if (\n        this.__objects.length > 0 &&\n        !this._isInMenu(target) &&\n        !this._isMenuOpener(target) &&\n        !e.getMomentum()\n      ) {\n        this.hideAll();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    var Registration = qx.event.Registration;\n    var el = document.body;\n\n    // React on pointerdown events\n    Registration.removeListener(\n      window.document.documentElement,\n      \"pointerdown\",\n      this._onPointerDown,\n      this,\n      true\n    );\n\n    // React on keypress events\n    Registration.removeListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    this._disposeObjects(\"__openTimer\", \"__closeTimer\");\n    this._disposeArray(\"__objects\");\n  }\n});\n"
  ],
  "mappings": "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"
}